Getting gnokii to work with a 6210 under linux
==============================================

- Compile your kernel with IrDA support for your chipset.

For me on my VAIO this was:
CONFIG_IRDA=m
CONFIG_IRCOMM=m
CONFIG_IRDA_OPTIONS=y
CONFIG_IRDA_DEBUG=y

CONFIG_IRTTY_SIR=m
	Use the emulation of serial port part of your IrDA chipset or...
CONFIG_NSC_FIR=m
	Specify the one you have (I have a NSC 87338)

- Reboot onto new kernel etc.
- Check your serial devices don't conflict with the ioport/irq that your
  chipset driver will try to use:
  setserial /dev/ttySX (where X is 0 -> 3) should give you the information
  you need.
  If you have a device that conflicts with your ioport/irq then you will
  need to remove the serial driver's control over it with:
  setserial /dev/ttySX uart none port 0 irq 0
  (where X is there relevant port mine is /dev/ttyS2)
- I used the chipset way to get IrDA working.
  I needed:
  options nsc-ircc dongle_id=0x09
  alias irda0 nsc-ircc
  in /etc/modules.conf
  Then just irattach irda0 -s 1 which *should* load all the modules you need
  and start it doing irda discovery.
  The modules I have loaded at this point are: nsc-ircc and irda.
- Run irdadump to see that it is indeed attempting to discover something.
  You should see messages like:
15:24:07.380360 xid:cmd 0c57083d > ffffffff S=6 s=0 (14)
15:24:07.470333 xid:cmd 0c57083d > ffffffff S=6 s=1 (14)
15:24:07.560310 xid:cmd 0c57083d > ffffffff S=6 s=2 (14)
15:24:07.650283 xid:cmd 0c57083d > ffffffff S=6 s=3 (14)
15:24:07.740279 xid:cmd 0c57083d > ffffffff S=6 s=4 (14)
15:24:07.830279 xid:cmd 0c57083d > ffffffff S=6 s=5 (14)
15:24:07.920311 xid:cmd 0c57083d > ffffffff S=6 s=* langly hint=0400 [ Computer
] (22)
- Place the phone in front of it, enable the Infrared parts of it (Menu 90)
  then it should change to be like:
15:26:07.380336 xid:cmd 0c57083d > ffffffff S=6 s=0 (14)
15:26:07.470288 xid:cmd 0c57083d > ffffffff S=6 s=1 (14)
15:26:07.560284 xid:cmd 0c57083d > ffffffff S=6 s=2 (14)
15:26:07.650281 xid:cmd 0c57083d > ffffffff S=6 s=3 (14)
15:26:07.740280 xid:cmd 0c57083d > ffffffff S=6 s=4 (14)
15:26:07.847192 xid:rsp 0c57083d < d10e0000 S=6 s=4 Nokia 6210 hint=b125 [ PnP Modem Fax Telephony IrCOMM IrOBEX ] (27)
15:26:07.830293 xid:cmd 0c57083d > ffffffff S=6 s=5 (14)
15:26:07.920283 xid:cmd 0c57083d > ffffffff S=6 s=* langly hint=0400 [ Computer
] (22)
- Now try using ircomm to talk to the phone.  Try minicom /dev/ircomm0 (you
  may need to setup a default profile for this port as the root user with
  minicom -s /dev/ircomm0).
- This depends on your distribution having the right lines in modules.conf
  for ircomm to be loaded:
alias tty-ldisc-11 irtty
alias char-major-160 irda0
alias char-major-161 ircomm-tty
  And your /dev/ircomm0 should be character device 161,0.
  Debian testing/unstable gets this right.
  If these don't work you may need to load ircomm and ircomm-tty manually.
- minicom /dev/ircomm0 should now work and AT commands should function.
- With a .gnokiirc modified as follows:
	port = /dev/ircomm0
	model = 6210
	connection = irda
  gnokii --monitor should now function.

	[huggie@langly ~]$ gnokii --monitor
	Entering monitor mode...
	RFLevel: 100
	Battery: 100
	SIM: Used 5, Free 85
	etc.
  
  Not all the functions for 6210 work yet seemingly.

- If instead gnokii hangs then you may have a version of gnokii that still
  has recv() in irda_open of common/devices/unixirda.c.  Just comment out
  that line, recompile and try again.


Simon Huggins <huggie-gnokii@earth.li>
------------------------------------------------------------------------------
big performance boost !!
I kompile my kernel (linux 2.4.7) with:
CONFIG_IRDA_OPTIONS=y
CONFIG_IRDA_CACHE_LAST_LSAP=y
CONFIG_IRDA_FAST_RR=y
this reduce reading phonebook from 150 to 20 seconds !!!

Ralf Thelen [ralf@mythelen.de]
