.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH GAMMU 1 "Jul 27 2010" "Gammu 1.28.90" "Gammu Documentation"

.SH NAME

.P
Gammu \- Does some neat things with your cellular phone or modem.

.SH SYNOPSIS
.P
Usage: gammu [\fIparameters\fP] <command> [\fIoptions\fP]


.SH DESCRIPTION
.P

.P
This program is a tool for mobile phones. Many vendors and phones are
supported, for actual listing see <http://wammu.eu/phones/>.


.SH OPTIONS
.P
Parameters before command configure gammu behaviour:
.br
\-c / \-\-config <filename> ... name of configuration file
.br
\-s / \-\-section <confign> ... section of config file to use, eg. 42
.br
\-d / \-\-debug <level> ... debug level (see gammurc(5) for possible
values)
.br
\-f / \-\-debug\-file <filename> ... file for logging debug messages


.SS Commands
.P
Commands can be specified with or without leading \-\-.


.SS Calls
.TP 
\fBanswercall\fP\fI [id]\fP
Answer incoming call.

.TP 
\fBcancelcall\fP\fI [id]\fP
Cancel incoming call

.TP 
\fBcanceldiverts\fP
Cancel all existing call diverts.

.TP 
\fBconferencecall\fP\fI id\fP
Initiates a conference call.

.TP 
\fBdialvoice\fP\fI number [show|hide]\fP
Make voice call from SIM card line set in phone.

\fBshow|hide\fP \- optional parameter whether to disable call number indication.

.TP 
\fBdivert\fP\fI get|set all|busy|noans|outofreach all|voice|fax|data [number timeout]\fP
Manage or display call diverts.

\fBget|set\fP \- whether to get divert information or to set it.

\fBall|busy|noans|outofreach\fP \- condition when apply divert

\fBall|voice|fax|data\fP \- call type when apply divert

number \- number where to divert

timeout \- timeout when the diversion will happen


.TP 
\fBgetspeeddial\fP\fI start [stop]\fP
Gets speed dial choices.

.TP 
\fBgetussd\fP\fI code\fP
Retrieves USSD information \- dials a service number and reads response.

.TP 
\fBholdcall\fP\fI id\fP
Holds call.

.TP 
\fBmaketerminatedcall\fP\fI number length [show|hide]\fP
Make voice call from SIM card line set in phone which will be terminated
after \fBlength\fP seconds.

.TP 
\fBmonitor\fP\fI [times]\fP
Get phone status and writes continuously to standard output. Press Ctrl+C to
break this state.

.TP 
\fBsenddtmf\fP\fI sequence\fP
Plays DTMF sequence. In some phones available only during calls

.TP 
\fBsplitcall\fP\fI id\fP
Splits call.

.TP 
\fBswitchcall\fP\fI [id]\fP
Switches call.

.TP 
\fBtransfercall\fP\fI [id]\fP
Transfers call.

.TP 
\fBunholdcall\fP\fI id\fP
Unholds call.


.SS "SMS and EMS"
.P

Sending messages might look a bit complicated on first attempt to use.  But
be patient, the command line has been written in order to allow almost every
usage. See EXAMPLE section for some hints on usage.

There is also an option to use gammu\-smsd(1) when you want to send or
receive more messages and process them automatically.

.TP 
\fBCommon parameters for sendsms and savesms\fP

\fB\-smscset number\fP \- SMSC will be taken from set \fBnumber\fP. Default set: 1

\fB\-smscnumber number\fP \- SMSC number

\fB\-reply\fP \- reply SMSC is set

\fB\-maxnum number\fP \- Limit maximal number of messages which will be
created. If there are more messages, Gammu will terminate with failure.

\fB\-folder number\fP \- save to specified folder.

Folders are numerated from 1.

The most often folder 1 = "Inbox", 2 = "Outbox",etc. Use \fBgetsmsfolders\fP to
get folder list.

\fB\-unread\fP \- makes message unread. In some phones (like 6210) you won't see
unread sms envelope after saving such sms. In some phones with internal SMS
memory (like 6210) after using it with folder 1 SIM SMS memory will be used

\fB\-read\fP \- makes message read. In some phones with internal SMS memory (like
6210) after using it with folder 1 SIM SMS memory will be used

\fB\-unsent\fP \- makes message unsent

\fB\-sent\fP \- makes message sent

\fB\-sender number\fP \- set sender number

\fB\-smsname name\fP \- set message name

\fB\-sender number\fP \- set sender number (default: "Gammu")

\fB\-report\fP \- request delivery report for message

\fB\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX\fP \- sets how long will be the
message valid (SMSC will the discard the message after this time if it could
not deliver it).

\fB\-save\fP \- will also save message which is being sent

.TP 
\fBIntroduction to SMS formats\fP

Gammu has support for many SMS formats like:

\fBNokia Smart Messaging\fP (used for monochromatic picture images,
downloadable profiles, monochromatic operator logos, monochromatic caller
logos and monophonic ringtones)

\fBLinked SMS\fP (both with 8 and 16\-bit identification numbers in headers)

\fBEMS\fP (this is SMS format used for saving monochromatic images, monophonic
ringtones, animations, text formatting and others)

\fBMMS notifications\fP

\fBAlcatel logo messages\fP


You need to ensure that the target phone supports message type you want to
send. Otherwise the phone will not be able to display it or will even crash,
because firmware of phone did not expect this possibility.

.TP 
\fBEncoding chars in SMS text\fP

Text in SMS can be coded using two ways:

with \fBGSM Default Alphabet\fP \- in single SMS you can have maximally 160
chars (Gammu doesn't support compressing such texts according to GSM
standards, but it isn't big limit, because there are no phones supporting
them), but they're from limited set:

  * all Latin small and large

  * all digits

  * some Greek

  * some other national

  * some symbols like  @Â\ ! " # & / ( )Â\ % * + = \- , .Â\ :Â\ ; < >Â\ ?

  * few others

with \fBUnicode\fP \- in single SMS you can save at most 70 chars, but these can
be any chars including all national and special ones. Please note, that some
older phones might have problems displaying such message.

Gammu tries to do the best to handle non ASCII characters in your message.
Everything is internally handled in Unicode (the input is converted
depending on your locales configuration) and in case message uses Unicode
the text will be given as such to the message.

Should the message be sent in GSM Default Alphabet, Gammu will try to
convert all characters to keep message readable. Gammu does support multi
byte encoding for some characters in GSM Default Alphabet (it is needed for
^ { } \e [ ] ~ |). The characters which are not present in GSM Default
Alphabet are transliterated to closest ASCII equivalent (accents are
removed).  Remaining not known characters are replaced by question mark.

.TP 
\fBaddsms\fP\fI folder file [\-yes]\fP
Adds SMSes from file (format like backupsms uses) to selected folder in
phone.
.TP 
\fBaddsmsfolder\fP\fI name\fP

.TP 
\fBbackupsms\fP\fI file [\-yes|\-all]\fP
Stores all SMSes from phone to file.

Use \-yes for answering yes to all questions (backup all messages and delete
them from phone), or \-all to just backup all folders while keeping messages
in phone.

.TP 
\fBdeleteallsms\fP\fI folder\fP
Delete all SMS from specified SMS folder.

.TP 
\fBdeletesms\fP\fI folder start [stop]\fP
Delete SMS from phone. See description for \fBgetsms\fP for info about sms
folders naming convention.

Locations are numerated from 1.

.TP 
\fBdisplaysms\fP\fI ... (options like in sendsms)\fP

Displays PDU data of encoded SMS messages. It accepts same parameters and
behaves same like sendsms.

.TP 
\fBgetallsms\fP\fI \-pbk\fP
Get all SMS from phone. In some phones you will have also SMS templates and
info about locations used to save Picture Images. With each sms you will see
location. If you want to get such sms from phone alone, use \fBgammu getsms 0
location\fP

.TP 
\fBgeteachsms\fP\fI \-pbk\fP
Similiary to \fBgetallsms\fP. Difference is, that links all concatenated sms

.TP 
\fBgetsms\fP\fI folder start [stop]\fP
Get SMS.

Locations are numerated from 1.

Folder 0 means that sms is being read from "flat" memory (all sms from all
folders have unique numbers). It's sometimes emulated by Gammu. You can use
it with all phones.

Other folders like 1, 2, etc. match folders in phone such as Inbox, Outbox,
etc.  and each sms has unique number in his folder. Name of folders can
depend on your phone (the most often 1="Inbox", 2="Outbox", etc.).  This
method is not supported by all phones (for example, not supported by Nokia
3310, 5110, 6110). If work with your phone, use \fBgetsmsfolders\fP to get
folders list.

.TP 
\fBgetsmsc\fP\fI [start [stop]]\fP
Get SMSC settings from SIM card.

Locations are numerated from 1.

.TP 
\fBgetsmsfolders\fP
Get names for SMS folders in phone

.TP 
\fBnokiagett9\fP
This option should display T9 dictionary content from DCT4 phones.

.TP 
\fBrestoresms\fP\fI file [\-yes]\fP
Restores SMSes from file (format like backupsms uses) to selected folder in
phone. Please note that this overwrites existing messages in phone (if it
supports it).
.TP 
\fBsavesms ANIMATION\fP\fI frames file1 file2... [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]\fP
Save an animation as a SMS. You need to give number of frames and picture
for each frame. Each picture can be in any picture format which Gammu
supports (B/W bmp, gif, wbmp, nol, nlm...).


For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsavesms BOOKMARK\fP\fI file location [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]\fP
Read WAP bookmark from file created by \fBbackup\fP option and saves in Nokia
format as SMS


For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsavesms CALENDAR\fP\fI file location [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]\fP
Read calendar note from file created by \fBbackup\fP option and saves in
VCALENDAR 1.0 format as SMS. The location identifies position of calendar
item to be read in backup file (usually 1, but can be useful in case the
backup contains more items).


For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsavesms CALLER\fP\fI file [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]\fP
Save caller logo as sms in Nokia (Smart Messaging)  format \- size 72x14, two
colours.

Please note, that it isn't designed for colour logos available for example
in DCT4/TIKU \- you need to put bitmap file there inside phone using
filesystem commands.


For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsavesms EMS\fP\fI [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num] [\-unicode] [\-16bit] [\-format lcrasbiut] [\-text text] [\-unicodefiletext file] [\-defsound ID] [\-defanimation ID] [\-tone10 file] [\-tone10long file] [\-tone12 file] [\-tone12long file] [\-toneSE file] [\-toneSElong file] [\-fixedbitmap file] [\-variablebitmap file] [\-variablebitmaplong file] [\-animation frames file1 ...] [\-protected number]\fP

Saves EMS sequence. All parameters after \fB\-unread\fP (like \fB\-defsound\fP) can
be used few times.

\fB\-text\fP \- adds text

\fB\-unicodefiletext\fP \- adds text from Unicode file

\fB\-defanimation\fP \- adds default animation with ID specified by user.ID for
different phones are different.

\fB\-animation\fP \- adds "frames" frames read from file1, file2, etc.

\fB\-defsound\fP \- adds default sound with ID specified by user. ID for
different phones are different.

\fB\-tone10\fP \- adds IMelody version 1.0 read from RTTL or other compatible
file

\fB\-tone10long\fP \- IMelody version 1.0 saved in one of few SMS with
UPI. Phones compatible with UPI (like SonyEricsson phones) will read such
ringtone as one

\fB\-tone12\fP \- adds IMelody version 1.2 read from RTTL or other compatible
file

\fB\-tone12long\fP \- IMelody version 1.2 saved in one of few SMS with
UPI. Phones compatible with UPI (like SonyEricsson phones) will read such
ringtone as one

\fB\-toneSE\fP \- adds IMelody in "short" form supported by SonyEricsson phones

\fB\-toneSElong\fP \- add SonyEricsson IMelody saved in one or few SMS with UPI

\fB\-variablebitmap\fP \- bitmap in any size saved in one SMS

\fB\-variablebitmaplong\fP \- bitmap with maximal size 96x128 saved in one or few
sms

\fB\-fixedbitmap\fP \- bitmap 16x16 or 32x32

\fB\-protected\fP \- all ringtones and bitmaps after this parameter (excluding
default ringtones and logos) will be "protected" (in phones compatible with
ODI like SonyEricsson products it won't be possible to forward them from
phone menu)

\fB\-16bit\fP \- Gammu uses SMS headers with 16\-bit numbers for saving linking
info in SMS (it means less chars available for user in each SMS)

\fB\-format\fP lcrasbiut \- last text will be formatted. You can use combinations of chars:
    l \- left aligned
    c \- centred
    r \- right aligned
    a \- large font
    s \- small font
    b \- bold font
    i \- italic font
    u \- underlined font
    t \- strikethrough font

\fIExample:\fP gammu savesms EMS \-text "Greetings" \-defsound 1 \-text "from
Gammu" \-tone10 axelf.txt \-animation 2 file1.bmp file2.bmp

will create EMS sequence with text "Greetings" and default sound 1 and text
"from Gammu" and ringtone axelf.txt and 2 frame animation read from (1'st
frame) file1.bmp and (2'nd frame) file2.bmp

\fIExample:\fP gammu savesms EMS \-protected 2 \-variablebitmaplong ala.bmp
\-toneSElong axelf.txt \-toneSE ring.txt

ala.bmp and axelf.txt will be "protected"


For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsavesms MMSINDICATOR\fP\fI URL Title Sender [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]\fP

Saves a message with MMS indication. The recipient phone will then download
MMS from given URL and display it.

Please note that you should provide valid smil data on that URL.


For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsavesms MMSSETTINGS\fP\fI file location  [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]\fP
Saves a message with MMS configuration. The configuration will be read from
Gammu backup file from given location.

For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsavesms OPERATOR\fP\fI file [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num] [\-netcode netcode] [\-biglogo]\fP
Save operator logo as sms in Nokia (Smart Messaging) format \- size 72x14 or
78x21 after using \fB\-biglogo\fP, all in two colours.

Please note, that it isn't designed for colour logos available for example
in DCT4/TIKU \- you need to put bitmap file there inside phone using
filesystem commands.


For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsavesms PICTURE\fP\fI file [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num] [\-text text] [\-unicode] [\-alcatelbmmi]\fP

Read bitmap from 2 colours file (bmp, nlm, nsl, ngg, nol, wbmp, etc.),
format into bitmap in Smart Messaging (72x28, 2 colours, called often
Picture Image and saved with text) or Alcatel format and send/save over SMS.


For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsavesms PROFILE\fP\fI [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num] [\-name name] [\-bitmap bitmap] [\-ringtone ringtone]\fP

Read ringtone (RTTL) format, bitmap (Picture Image size) and name, format
into Smart Messaging profile and send/save as SMS. Please note, that this
format is abandomed by Nokia and supported by some (older) devices only like
Nokia 3310.


For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsavesms RINGTONE\fP\fI file [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num] [\-long] [\-scale]\fP
Read RTTL ringtone from file and save as SMS into SIM/phone memory. Ringtone
is saved in Nokia (Smart Messaging) format.

\fB\-long\fP \- ringtone is saved using Profile style. It can be longer (and
saved in 2 SMS), but decoded only by newer phones (like 33xx)

\fB\-scale\fP \- ringtone will have Scale info for each note. It will allow to
edit it correctly later in phone composer (for example, in 33xx)


For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsavesms SMSTEMPLATE\fP\fI [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num] [\-unicode] [\-text text] [\-unicodefiletext file] [\-defsound ID] [\-defanimation ID] [\-tone10 file] [\-tone10long file] [\-tone12 file] [\-tone12long file] [\-toneSE file] [\-toneSElong file] [\-variablebitmap file] [\-variablebitmaplong file] [\-animation frames file1 ...]\fP
Saves a SMS template (for Alcatel phones).


For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsavesms TEXT\fP\fI [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num] [\-inputunicode] [\-16bit] [\-flash] [\-len len] [\-autolen len] [\-unicode] [\-enablevoice] [\-disablevoice] [\-enablefax] [\-disablefax] [\-enableemail] [\-disableemail] [\-voidsms] [\-replacemessages ID] [\-replacefile file] [\-text msgtext] [\-textutf8 msgtext]\fP
Take text from stdin (or commandline if \-text specified) and save as text
SMS into SIM/phone memory.

\fB\-flash\fP \- Class 0 SMS (should be displayed after receiving on recipients'
phone display after receiving without entering Inbox)

\fB\-len len\fP \- specify, how many chars will be read. When use this option and
text will be longer than 1 SMS, will be split into more linked SMS

\fB\-autolen len\fP \- specify, how many chars will be read. When use this option
and text will be longer than 1 SMS, will be split into more linked
SMS.Coding type (SMS default alphabet/Unicode) is set according to input
text

\fB\-enablevoice\fP | \fB\-disablevoice\fP | \fB\-enablefax \fP | \fB\-disablefax \fP |
\fB\-enableemail \fP | \fB\-disableemail \fP \- sms will set such indicators. Text
will be cut to 1 sms.

\fB\-voidsms\fP \- many phones after receiving it won't display anything, only
beep, vibrate or turn on light. Text will be cut to 1 sms.

\fB\-unicode\fP \- SMS will be saved in Unicode format

\fB\-inputunicode\fP \- input text is in Unicode.

\fB\-text\fP \- get text from command line instead of stdin.

\fB\-textutf8\fP \- get text in UTF\-8 from command line instead of stdin.

\fB\-16bit\fP \- Gammu uses SMS headers with 16\-bit numbers for saving linking
info in SMS (it means less chars available for user in each SMS)

\fITIP:\fP You can create Unicode file using WordPad in Windows (during saving
select "Unicode Text Document" format). In Unix can use for example YUdit.

\fB\-replacemessages ID\fP \- \fBID\fP can be 1..7. When you will use option and
send more single SMS to one recipient with the same ID, each another SMS
will replace each previous with the same ID

\fB\-replacefile file\fP \- when you want, you can make file in such format:
\fBsrc_unicode_char1, dest_unicode_char1, src_unicode_char2,
dest_unicode_char2\fP (everything in one line). After reading text for SMS
from stdin there will be made translation and each src char will be
converted to dest char. In docs there is example file (\fIreplace.txt\fP),
which will change all "a" chars to "1"

\fITIP:\fP when use ~ char in sms text and \fB\-unicode\fP option (Unicode coding
required), text of sms after ~ char will blink in some phones (like N33xx)

\fIExample:\fP echo some_text | gammu savesms TEXT


For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsavesms TODO\fP\fI file location [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]\fP
Saves a message with a todo entry. The content will be read from any backup
format which Gammu supports and from given location.

For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsavesms VCARD10|VCARD21\fP\fI file SM|ME location [\-nokia] [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]\fP
Read phonebook entry from file created by \fBbackup\fP option and saves in
VCARD 1.0 (only name and default number) or VCARD 2.1 (all entry details
with all numbers, text and name) format as SMS. The location identifies
position of contact item to be read in backup file (usually 1, but can be
useful in case the backup contains more items).


For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsavesms WAPINDICATOR\fP\fI URL Title [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]\fP
Saves a SMS with a WAP indication for given URL and title.


For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsavesms WAPSETTINGS\fP\fI file location DATA|GPRS [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]\fP
Read WAP settings from file created by \fBbackup\fP option and saves in Nokia
format as SMS


For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsendsms ANIMATION\fP\fI destination frames file1 file2... [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]\fP
Sends a message, for description of message specific parameters see
\fBsavesms ANIMATION\fP.



For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsendsms BOOKMARK\fP\fI destination file location [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]\fP
Sends a message, for description of message specific parameters see
\fBsavesms BOOKMARK\fP.



For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsendsms CALENDAR\fP\fI destination file location [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]\fP
Sends a message, for description of message specific parameters see
\fBsavesms CALENDAR\fP.



For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsendsms CALLER\fP\fI destination file [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]\fP
Sends a message, for description of message specific parameters see
\fBsavesms CALLER\fP.



For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsendsms EMS\fP\fI destination [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num] [\-unicode] [\-16bit] [\-format lcrasbiut] [\-text text] [\-unicodefiletext file] [\-defsound ID] [\-defanimation ID] [\-tone10 file] [\-tone10long file] [\-tone12 file] [\-tone12long file] [\-toneSE file] [\-toneSElong file] [\-fixedbitmap file] [\-variablebitmap file] [\-variablebitmaplong file] [\-animation frames file1 ...] [\-protected number]\fP
Sends a message, for description of message specific parameters see
\fBsavesms EMS\fP.



For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsendsms MMSINDICATOR\fP\fI destination URL Title Sender [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]\fP
Sends a message, for description of message specific parameters see
\fBsavesms MMSINDICATOR\fP.



For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsendsms MMSSETTINGS\fP\fI destination file location [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]\fP
Sends a message, for description of message specific parameters see
\fBsavesms MMSSETTINGS\fP.



For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsendsms OPERATOR\fP\fI destination file [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num] [\-netcode netcode] [\-biglogo]\fP
Sends a message, for description of message specific parameters see
\fBsavesms OPERATOR\fP.



For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsendsms PICTURE\fP\fI destination file [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num] [\-text text] [\-unicode] [\-alcatelbmmi]\fP
Sends a message, for description of message specific parameters see
\fBsavesms PICTURE\fP.



For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsendsms PROFILE\fP\fI destination [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num] [\-name name] [\-bitmap bitmap] [\-ringtone ringtone]\fP
Sends a message, for description of message specific parameters see
\fBsavesms PROFILE\fP.



For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsendsms RINGTONE\fP\fI destination file [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num] [\-long] [\-scale]\fP
Sends a message, for description of message specific parameters see
\fBsavesms RINGTONE\fP.



For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsendsms SMSTEMPLATE\fP\fI destination [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num] [\-unicode] [\-text text] [\-unicodefiletext file] [\-defsound ID] [\-defanimation ID] [\-tone10 file] [\-tone10long file] [\-tone12 file] [\-tone12long file] [\-toneSE file] [\-toneSElong file] [\-variablebitmap file] [\-variablebitmaplong file] [\-animation frames file1 ...]\fP
Sends a message, for description of message specific parameters see
\fBsavesms SMSTEMPLATE\fP.



For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsendsms TEXT\fP\fI destination [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num] [\-inputunicode] [\-16bit] [\-flash] [\-len len] [\-autolen len] [\-unicode] [\-enablevoice] [\-disablevoice] [\-enablefax] [\-disablefax] [\-enableemail] [\-disableemail] [\-voidsms] [\-replacemessages ID] [\-replacefile file] [\-text msgtext] [\-textutf8 msgtext]\fP
Sends a message, for description of message specific parameters see
\fBsavesms TEXT\fP.



For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsendsms TODO\fP\fI destination file location [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]\fP
Sends a message, for description of message specific parameters see
\fBsavesms TODO\fP.



For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsendsms VCARD10|VCARD21\fP\fI destination file SM|ME location [\-nokia] [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]\fP
Sends a message, for description of message specific parameters see
\fBsavesms VCARD10|VCARD21\fP.



For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsendsms WAPINDICATOR\fP\fI destination URL Title [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]\fP
Sends a message, for description of message specific parameters see
\fBsavesms WAPINDICATOR\fP.



For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsendsms WAPSETTINGS\fP\fI destination file location DATA|GPRS [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]\fP
Sends a message, for description of message specific parameters see
\fBsavesms WAPSETTINGS\fP.



For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsetsmsc\fP\fI location number\fP
Set SMSC settings on SIM card. This keeps all SMSC configuration intact, it
just changes the SMSC number.

Locations are numerated from 1.


.SS "Memory (phonebooks and calls)"
.TP 
\fBaddcategory TODO|PHONEBOOK\fP\fI text\fP

.TP 
\fBaddnew\fP\fI file [\-yes] [\-memory ME|SM|..]\fP
Adds data written in file created using \fBbackup option\fP. All things
backup'ed by \fBbackup\fP can be restored (when made backup to Gammu text
file).

Please note that this adds all content of backup file to phone and does not
care about current data in the phone (no duplicates are detected).

Use \-yes parameter to answer yes to all questions (you want to automatically
restore all data).

Use \-memory parameter to force usage of defined memory type for storing
entries regardless what backu format says.

.TP 
\fBbackup\fP\fI file [\-yes]\fP
Backup your phone to file. It's possible to backup (depends on phone and
backup format):

* phonebook from SIM and phone memory
.br
* calendar notes
.br
* SMSC settings
.br
* operator logo
.br
* startup (static) logo or startup text
.br
* WAP bookmarks
.br
* WAP settings
.br
* caller logos and groups
.br
* user ringtones
.br

There are various backup formats supported and the backup format is guessed
based on file extension:

* .lmb \- Nokia backup, supports contacts, caller logos and startup logo.
.br
* .vcs \- vCalendar, supports calendar and todo.
.br
* .vcf \- vCard, supports contacts.
.br
* .ldif \- LDAP import, supports contacts.
.br
* .ics \- iCalendar, supports calendar and todo.
.br
* Any other extension is Gammu backup file and it supports all data
mentioned above.

See \fBEXAMPLE\fP section for some hints on manipulating Gammu backup format.


.TP 
\fBclearall\fP
Deletes all private data from the phone.

.TP 
\fBdeleteallmemory DC|MC|RC|ON|VM|SM|ME|MT|FD|SL\fP
Deletes all entries from specified memory type.
.TP 
\fBdeletememory DC|MC|RC|ON|VM|SM|ME|MT|FD|SL\fP\fI start [stop]\fP
Deletes entries in specified range from specified memory type.
.TP 
\fBgetallcategory TODO|PHONEBOOK\fP

.TP 
\fBgetallmemory DC|MC|RC|ON|VM|SM|ME|MT|FD|SL\fP
Get all memory locations from phone. For memory types see \fBgetmemory\fP.
.TP 
\fBgetcategory TODO|PHONEBOOK\fP\fI start [stop]\fP

.TP 
\fBgetmemory DC|MC|RC|ON|VM|SM|ME|MT|FD|SL\fP\fI start [stop [\-nonempty]]\fP
Get memory location from phone.

Locations are numerated from 1.

\fBDC\fP = Dialled calls
.br
\fBMC\fP = Missed calls
.br
\fBRC\fP = Received calls
.br
\fBON\fP = Own numbers
.br
\fBVM\fP = voice mailbox
.br
\fBSM\fP = SIM phonebook
.br
\fBME\fP = phone internal phonebook
.br
\fBFD\fP = fixed dialling
.br
\fBSL\fP = sent SMS log

.TP 
\fBgetspeeddial\fP\fI start [stop]\fP
Gets speed dial choices.

.TP 
\fBlistmemorycategory\fP\fI text|number\fP

.TP 
\fBnokiagetpbkfeatures\fP\fI memorytype\fP

.TP 
\fBrestore\fP\fI file [\-yes]\fP
Restore settings written in file created using \fBbackup\fP option.

Please note that restoring deletes all current content in phone. If you want
only to add entries to phone, use addnew.

In some phones restoring calendar notes will not show error, but won't be
done, when phone doesn't have set clock inside.

.TP 
\fBsavefile VCARD10|VCARD21\fP\fI target.vcf file SM|ME location\fP
Allows to convert between various backup formats which gammu supports for
phonebook events. The file type is guessed (for input file guess is based on
extension and file content, for output solely on extension).

For example if you want to convert single entry from gammu native backup to
vCard, you need following command:

    gammu savefile CALENDAR output.vcf myPhonebook.backup ME 42

.TP 
\fBsavesms VCARD10|VCARD21\fP\fI file SM|ME location [\-nokia] [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]\fP
Read phonebook entry from file created by \fBbackup\fP option and saves in
VCARD 1.0 (only name and default number) or VCARD 2.1 (all entry details
with all numbers, text and name) format as SMS. The location identifies
position of contact item to be read in backup file (usually 1, but can be
useful in case the backup contains more items).


For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsearchmemory\fP\fI text\fP
Scans all memory entries for given text. It performs case insensitive
substring lookup. You can interrupt searching by pressing Ctrl+C.
.TP 
\fBsendsms VCARD10|VCARD21\fP\fI destination file SM|ME location [\-nokia] [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]\fP
Sends a message, for description of message specific parameters see
\fBsavesms VCARD10|VCARD21\fP.



For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.



.SS Filesystem
.P

Gammu allows to access phones using native protocol (Nokias) or OBEX. Your
phone can also support usb storage, which is handled on the operating system
level and Gammu does not use that.

.TP 
\fBaddfile\fP\fI folderID name [\-type JAR|BMP|PNG|GIF|JPG|MIDI|WBMP|AMR|3GP|NRT] [\-readonly] [\-protected] [\-system] [\-hidden] [\-newtime]\fP
Add file with specified name to folder with specified folder ID.

\fB\-type\fP \- file type was required for filesystem 1 in Nokia phones (current
filesystem 2 doesn't need this)

\fB\-readonly, \-protected, \-system, \-hidden\fP \- you can set readonly, protected
(file can't be for example forwarded from phone menu), system and hidden
(file is hidden from phone menu) file attributes

\fB\-newtime\fP \- after using it date/time of file modification will be set to
moment of uploading


.TP 
\fBaddfolder\fP\fI parentfolderID name\fP
Create a folder in phone with specified name in a folder with specified
folder ID.
.TP 
\fBdeletefiles\fP\fI fileID\fP
Delete files with given IDs.
.TP 
\fBdeletefolder\fP\fI name\fP
Delete folder with given ID.
.TP 
\fBgetfilefolder\fP\fI fileID, fileID, ...\fP
Retrieve files or all files from folder with given IDs from a phone
filesytem.
.TP 
\fBgetfiles\fP\fI fileID, fileID, ...\fP
Retrieve files with given IDs from a phone filesytem.
.TP 
\fBgetfilesystem\fP\fI [\-flatall|\-flat]\fP
Display info about all folders and files in phone memory/memory card. By
default there is tree displayed, you can change it:

\fB\-flatall\fP there are displayed full file/folder details like ID (first
parameter in line)

\fB\-flat\fP

Please note, that in some phones (like N6230) content of some folders (with
more files) can be cut (only part of files will be displayed) for example on
infrared connection. This is not Gammu issue, but phone firmware problem.

.TP 
\fBgetfilesystemstatus\fP
Display info filesystem status \- number of bytes available, used or used by
some specific content.
.TP 
\fBgetfolderlisting\fP\fI folderID\fP

Display files and folders available in folder with given folder ID. You can
get ID's using getfilesystem \-flatall.

Please note, that in some phones (like N6230) content of some folders (with
more files) can be cut (only part of files will be displayed) for example on
infrared connection. This is not Gammu issue, but phone firmware problem.

.TP 
\fBgetrootfolders\fP

Display info about drives available in phone/memory card.

.TP 
\fBnokiaaddfile APPLICATION|GAME\fP\fI file [\-readonly] [\-overwrite] [\-overwriteall]\fP
Install the *.jar/*.jad file pair of a midlet in the application or game
menu of the phone. You need to specify filename without the jar/jad suffix,
both will be added automatically.

The option \fI\-overwrite\fP deletes the application's .jad and .jar files bevor
installing, but doesn't delete the application data. Option \fI\-overwriteall\fP
will also delete all data. Both these options work only for Application or
Game upload.

\fIExample:\fP gammu nokiaaddfile Application Alien will read Alien.JAD and
Alien.JAR and add to Applications

\fIExample:\fP gammu nokiaaddfile Tones file.mid will read file.mid and add to
Tones folder

You can use jadmaker(1) to generate a .jad file from a .jar file.

.TP 
\fBnokiaaddfile GALLERY|GALLERY2|CAMERA|TONES|TONES2|RECORDS|VIDEO|PLAYLIST|MEMORYCARD\fP\fI file [\-name name] [\-protected] [\-readonly] [\-system] [\-hidden] [\-newtime]\fP

.TP 
\fBnokiaaddplaylists\fP

Goes through phone memory and generated playlist for all music files found.

To manually manage playlists:

    gammu addfile a:\epredefplaylist filename.m3u

Will add playlist filename.m3u

    gammu getfilesystem

Will get list of all files (including names of files with playlists)

    gammu deletefiles a:\epredefplaylist\efilename.m3u

Will delete playlist filename.m3u

Format of m3u playlist is easy (standard mp3 playlist):

First line is #EXTM3U, next lines contain names of files (b:\efile1.mp3,
b:\efolder1\efile2.mp3, etc.). File needs t have '\er\en' terminated
lines. So just run unix2dos on the resulting file before uploading it your
your phone.

.TP 
\fBsendfile\fP\fI name\fP
Sends file to a phone. It's up to phone to decide where to store this file
and how to handle it (for example when you send vCard or vCalendar, most of
phones will offer you to import it.

.TP 
\fBsetfileattrib\fP\fI folderID [\-system] [\-readonly] [\-hidden] [\-protected]\fP


.SS "Logo and pictures"
.P

These options are mainly (there are few expections) for monochromatic logos
and images available in older phones. Recognised file formats: xpm (only
saving), 2\-colours bmp, nlm, nsl, ngg, nol, wbmp, gif (for Samsung).

In new models all bitmaps are saved in filesystem and should go into
filesystem section

.TP 
\fBcopybitmap\fP\fI inputfile [outputfile [OPERATOR|PICTURE|STARTUP|CALLER]]\fP
Allow to convert logos files to another. When give ONLY inputfile, output
will be written to stdout using ASCII art. When give output file and format,
in some file formats (like NLM) will be set indicator informing about logo
type to given.

.TP 
\fBgetbitmap CALLER\fP\fI location [file]\fP
Get caller group logo from phone. Locations 1\-5.

.TP 
\fBgetbitmap DEALER\fP
In some models it's possible to save dealer welcome note \- text displayed
during enabling phone, which can't be edited from phone menu.  Here you can
get it.

.TP 
\fBgetbitmap OPERATOR\fP\fI [file]\fP
Get operator logo (picture displayed instead of operator name) from phone.

.TP 
\fBgetbitmap PICTURE\fP\fI location [file]\fP
Get Picture Image from phone.

.TP 
\fBgetbitmap STARTUP\fP\fI [file]\fP
Get static startup logo from phone. Allow to save it in file.

.TP 
\fBgetbitmap TEXT\fP
Get startup text from phone.

.TP 
\fBsavesms ANIMATION\fP\fI frames file1 file2... [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]\fP
Save an animation as a SMS. You need to give number of frames and picture
for each frame. Each picture can be in any picture format which Gammu
supports (B/W bmp, gif, wbmp, nol, nlm...).


For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsavesms CALLER\fP\fI file [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]\fP
Save caller logo as sms in Nokia (Smart Messaging)  format \- size 72x14, two
colours.

Please note, that it isn't designed for colour logos available for example
in DCT4/TIKU \- you need to put bitmap file there inside phone using
filesystem commands.


For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsavesms OPERATOR\fP\fI file [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num] [\-netcode netcode] [\-biglogo]\fP
Save operator logo as sms in Nokia (Smart Messaging) format \- size 72x14 or
78x21 after using \fB\-biglogo\fP, all in two colours.

Please note, that it isn't designed for colour logos available for example
in DCT4/TIKU \- you need to put bitmap file there inside phone using
filesystem commands.


For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsavesms PICTURE\fP\fI file [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num] [\-text text] [\-unicode] [\-alcatelbmmi]\fP

Read bitmap from 2 colours file (bmp, nlm, nsl, ngg, nol, wbmp, etc.),
format into bitmap in Smart Messaging (72x28, 2 colours, called often
Picture Image and saved with text) or Alcatel format and send/save over SMS.


For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsendsms ANIMATION\fP\fI destination frames file1 file2... [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]\fP
Sends a message, for description of message specific parameters see
\fBsavesms ANIMATION\fP.



For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsendsms CALLER\fP\fI destination file [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]\fP
Sends a message, for description of message specific parameters see
\fBsavesms CALLER\fP.



For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsendsms OPERATOR\fP\fI destination file [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num] [\-netcode netcode] [\-biglogo]\fP
Sends a message, for description of message specific parameters see
\fBsavesms OPERATOR\fP.



For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsendsms PICTURE\fP\fI destination file [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num] [\-text text] [\-unicode] [\-alcatelbmmi]\fP
Sends a message, for description of message specific parameters see
\fBsavesms PICTURE\fP.



For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsetbitmap CALLER\fP\fI location [file]\fP
Set caller logo.
.TP 
\fBsetbitmap COLOUROPERATOR\fP\fI [fileID [netcode]]\fP
Sets colour operator logo in phone.
.TP 
\fBsetbitmap COLOURSTARTUP\fP\fI [fileID]\fP

.TP 
\fBsetbitmap DEALER\fP\fI text\fP
Sets welcome message configured by dealer, which usually can not be changed
in phone menus.
.TP 
\fBsetbitmap OPERATOR\fP\fI [file [netcode]]\fP
Set operator logo in phone. When won't give file and netcode, operator logo
will be removed from phone. When will give only filename, operator logo will
be displayed for your current GSM operator. When give additionally network
code, it will be displayed for this operator: \fBgammu setbitmap OPERATOR
file "260 02"\fP

.TP 
\fBsetbitmap PICTURE\fP\fI file location [text]\fP
Sets picture image in phone.
.TP 
\fBsetbitmap STARTUP\fP\fI file|1|2|3\fP
Set startup logo in phone. It can be static (then you will have to give file
name) or one of predefined animated (only some phones like Nokia 3310 or
3330 supports it, use location 1, 2 or 3 for these).

.TP 
\fBsetbitmap TEXT\fP\fI text\fP
Sets startup text in phone.
.TP 
\fBsetbitmap WALLPAPER\fP\fI fileID\fP
Sets wallpaper in phone.

.SS Ringtones
.P

Ringtones are mostly supported only for older phones. For recent phones you
usually just upload them to some folder in phone filesystem.

There are recognised various file formats by options described below: rttl,
binary format created for Gammu, mid (saving), re (reading), ott,
communicator, ringtones format found in fkn.pl, wav (saving), ime/imy
(saving), rng, mmf (for Samsung).


.TP 
\fBaddnew\fP\fI file [\-yes] [\-memory ME|SM|..]\fP
Adds data written in file created using \fBbackup option\fP. All things
backup'ed by \fBbackup\fP can be restored (when made backup to Gammu text
file).

Please note that this adds all content of backup file to phone and does not
care about current data in the phone (no duplicates are detected).

Use \-yes parameter to answer yes to all questions (you want to automatically
restore all data).

Use \-memory parameter to force usage of defined memory type for storing
entries regardless what backu format says.

.TP 
\fBbackup\fP\fI file [\-yes]\fP
Backup your phone to file. It's possible to backup (depends on phone and
backup format):

* phonebook from SIM and phone memory
.br
* calendar notes
.br
* SMSC settings
.br
* operator logo
.br
* startup (static) logo or startup text
.br
* WAP bookmarks
.br
* WAP settings
.br
* caller logos and groups
.br
* user ringtones
.br

There are various backup formats supported and the backup format is guessed
based on file extension:

* .lmb \- Nokia backup, supports contacts, caller logos and startup logo.
.br
* .vcs \- vCalendar, supports calendar and todo.
.br
* .vcf \- vCard, supports contacts.
.br
* .ldif \- LDAP import, supports contacts.
.br
* .ics \- iCalendar, supports calendar and todo.
.br
* Any other extension is Gammu backup file and it supports all data
mentioned above.

See \fBEXAMPLE\fP section for some hints on manipulating Gammu backup format.


.TP 
\fBclearall\fP
Deletes all private data from the phone.

.TP 
\fBcopyringtone\fP\fI source destination [RTTL|BINARY]\fP
Copy source ringtone to destination.

.TP 
\fBgetphoneringtone\fP\fI location [file]\fP

Get one of "default" ringtones and saves into file

.TP 
\fBgetringtone\fP\fI location [file]\fP
Get ringtone from phone in RTTL or BINARY format.

Locations are numerated from 1.

.TP 
\fBgetringtoneslist\fP

.TP 
\fBnokiacomposer\fP\fI file\fP
Show, how to enter RTTL ringtone in composer existing in many Nokia phones
(and how should it look like).

.TP 
\fBplayringtone\fP\fI file\fP
Play aproximation of ringtone over phone buzzer. File can be in RTTL or
BINARY (Nokia DCT3) format.

.TP 
\fBplaysavedringtone\fP\fI number\fP

Play one of "built" ringtones. This option is available for DCT4 phones. For
getting ringtones list use getringtoneslist.

.TP 
\fBrestore\fP\fI file [\-yes]\fP
Restore settings written in file created using \fBbackup\fP option.

Please note that restoring deletes all current content in phone. If you want
only to add entries to phone, use addnew.

In some phones restoring calendar notes will not show error, but won't be
done, when phone doesn't have set clock inside.

.TP 
\fBsavesms RINGTONE\fP\fI file [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num] [\-long] [\-scale]\fP
Read RTTL ringtone from file and save as SMS into SIM/phone memory. Ringtone
is saved in Nokia (Smart Messaging) format.

\fB\-long\fP \- ringtone is saved using Profile style. It can be longer (and
saved in 2 SMS), but decoded only by newer phones (like 33xx)

\fB\-scale\fP \- ringtone will have Scale info for each note. It will allow to
edit it correctly later in phone composer (for example, in 33xx)


For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsendsms RINGTONE\fP\fI destination file [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num] [\-long] [\-scale]\fP
Sends a message, for description of message specific parameters see
\fBsavesms RINGTONE\fP.



For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsetringtone\fP\fI file [\-location location] [\-scale] [\-name name]\fP
Set ringtone in phone. When don't give location, it will be written "with
preview" (in phones supporting this feature like 61xx or 6210).  When use
RTTL ringtones, give location and use \fB\-scale\fP, there will be written scale
info with each note. It will avoid scale problems available during editing
ringtone in composer from phone menu (for example, in N33xx).

\fITIP:\fP when use ~ char in ringtone name, in some phones (like 33xx) name
will blink later in phone menus


.SS "Calendar notes"
.P

In Nokia 3310, 3315 and 3330 these are named "Reminders" and have some
limitations (depending on phone firmware version).

.TP 
\fBaddnew\fP\fI file [\-yes] [\-memory ME|SM|..]\fP
Adds data written in file created using \fBbackup option\fP. All things
backup'ed by \fBbackup\fP can be restored (when made backup to Gammu text
file).

Please note that this adds all content of backup file to phone and does not
care about current data in the phone (no duplicates are detected).

Use \-yes parameter to answer yes to all questions (you want to automatically
restore all data).

Use \-memory parameter to force usage of defined memory type for storing
entries regardless what backu format says.

.TP 
\fBbackup\fP\fI file [\-yes]\fP
Backup your phone to file. It's possible to backup (depends on phone and
backup format):

* phonebook from SIM and phone memory
.br
* calendar notes
.br
* SMSC settings
.br
* operator logo
.br
* startup (static) logo or startup text
.br
* WAP bookmarks
.br
* WAP settings
.br
* caller logos and groups
.br
* user ringtones
.br

There are various backup formats supported and the backup format is guessed
based on file extension:

* .lmb \- Nokia backup, supports contacts, caller logos and startup logo.
.br
* .vcs \- vCalendar, supports calendar and todo.
.br
* .vcf \- vCard, supports contacts.
.br
* .ldif \- LDAP import, supports contacts.
.br
* .ics \- iCalendar, supports calendar and todo.
.br
* Any other extension is Gammu backup file and it supports all data
mentioned above.

See \fBEXAMPLE\fP section for some hints on manipulating Gammu backup format.


.TP 
\fBclearall\fP
Deletes all private data from the phone.

.TP 
\fBdeletecalendar\fP\fI start [stop]\fP
Deletes selected calendar entries in phone.
.TP 
\fBgetallcalendar\fP
Retrieves all calendar entries from phone.
.TP 
\fBgetcalendar\fP\fI start [stop]\fP
Retrieves selected calendar entries from phone.
.TP 
\fBgetcalendarsettings\fP
Displays calendar settings like first day of week or automatic deleting of
old entries.

.TP 
\fBrestore\fP\fI file [\-yes]\fP
Restore settings written in file created using \fBbackup\fP option.

Please note that restoring deletes all current content in phone. If you want
only to add entries to phone, use addnew.

In some phones restoring calendar notes will not show error, but won't be
done, when phone doesn't have set clock inside.

.TP 
\fBsavefile CALENDAR\fP\fI target.vcs file location\fP
Allows to convert between various backup formats which gammu supports for
calendar events. The file type is guessed (for input file guess is based on
extension and file content, for output solely on extension).

For example if you want to convert single entry from gammu native backup to
vCalendar, you need following command:

    gammu savefile CALENDAR output.vcs myCalendar.backup 260

.TP 
\fBsavesms CALENDAR\fP\fI file location [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]\fP
Read calendar note from file created by \fBbackup\fP option and saves in
VCALENDAR 1.0 format as SMS. The location identifies position of calendar
item to be read in backup file (usually 1, but can be useful in case the
backup contains more items).


For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsendsms CALENDAR\fP\fI destination file location [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]\fP
Sends a message, for description of message specific parameters see
\fBsavesms CALENDAR\fP.



For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.



.SS "To do lists"
.TP 
\fBaddcategory TODO|PHONEBOOK\fP\fI text\fP

.TP 
\fBaddnew\fP\fI file [\-yes] [\-memory ME|SM|..]\fP
Adds data written in file created using \fBbackup option\fP. All things
backup'ed by \fBbackup\fP can be restored (when made backup to Gammu text
file).

Please note that this adds all content of backup file to phone and does not
care about current data in the phone (no duplicates are detected).

Use \-yes parameter to answer yes to all questions (you want to automatically
restore all data).

Use \-memory parameter to force usage of defined memory type for storing
entries regardless what backu format says.

.TP 
\fBbackup\fP\fI file [\-yes]\fP
Backup your phone to file. It's possible to backup (depends on phone and
backup format):

* phonebook from SIM and phone memory
.br
* calendar notes
.br
* SMSC settings
.br
* operator logo
.br
* startup (static) logo or startup text
.br
* WAP bookmarks
.br
* WAP settings
.br
* caller logos and groups
.br
* user ringtones
.br

There are various backup formats supported and the backup format is guessed
based on file extension:

* .lmb \- Nokia backup, supports contacts, caller logos and startup logo.
.br
* .vcs \- vCalendar, supports calendar and todo.
.br
* .vcf \- vCard, supports contacts.
.br
* .ldif \- LDAP import, supports contacts.
.br
* .ics \- iCalendar, supports calendar and todo.
.br
* Any other extension is Gammu backup file and it supports all data
mentioned above.

See \fBEXAMPLE\fP section for some hints on manipulating Gammu backup format.


.TP 
\fBclearall\fP
Deletes all private data from the phone.

.TP 
\fBdeletetodo\fP\fI start [stop]\fP
Deletes selected todo entries in phone.
.TP 
\fBgetallcategory TODO|PHONEBOOK\fP

.TP 
\fBgetalltodo\fP
Retrieves all todo entries from phone.
.TP 
\fBgetcategory TODO|PHONEBOOK\fP\fI start [stop]\fP

.TP 
\fBgettodo\fP\fI start [stop]\fP
Retrieves selected todo entries from phone.
.TP 
\fBlisttodocategory\fP\fI text|number\fP

.TP 
\fBrestore\fP\fI file [\-yes]\fP
Restore settings written in file created using \fBbackup\fP option.

Please note that restoring deletes all current content in phone. If you want
only to add entries to phone, use addnew.

In some phones restoring calendar notes will not show error, but won't be
done, when phone doesn't have set clock inside.

.TP 
\fBsavefile TODO\fP\fI target.vcs file location\fP
Allows to convert between various backup formats which gammu supports for
todo events. The file type is guessed (for input file guess is based on
extension and file content, for output solely on extension).

For example if you want to convert single entry from gammu native backup to
vCalendar, you need following command:

    gammu savefile CALENDAR output.vcs myCalendar.backup 260

.TP 
\fBsavesms TODO\fP\fI file location [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]\fP
Saves a message with a todo entry. The content will be read from any backup
format which Gammu supports and from given location.

For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsendsms TODO\fP\fI destination file location [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]\fP
Sends a message, for description of message specific parameters see
\fBsavesms TODO\fP.



For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.



.SS Notes
.TP 
\fBgetallnotes\fP
Reads all notes from the phone.

Note: Not all phones supports this function, especially most Sony Ericsson
phones even if they have notes inside phone.


.SS "Date, time and alarms"
.TP 
\fBgetalarm\fP\fI [start]\fP
Get alarm from phone, if no location is specified, 1 is used.

.TP 
\fBgetdatetime\fP
Get date and time from phone

.TP 
\fBsetalarm\fP\fI hour minute\fP
Sets repeating alarm in phone on selected time.
.TP 
\fBsetdatetime\fP\fI [HH:MM[:SS]] [YYYY/MM/DD]\fP
Set date and time in phone to date and time set in computer. Please note,
that this option doesn't show clock on phone screen. It only set date and
time.

\fITIP:\fP you can make such synchronisation each time, when will connect your
phone and use Gammu. See gammurc(5) for details.


.SS Categories
.TP 
\fBaddcategory TODO|PHONEBOOK\fP\fI text\fP

.TP 
\fBaddnew\fP\fI file [\-yes] [\-memory ME|SM|..]\fP
Adds data written in file created using \fBbackup option\fP. All things
backup'ed by \fBbackup\fP can be restored (when made backup to Gammu text
file).

Please note that this adds all content of backup file to phone and does not
care about current data in the phone (no duplicates are detected).

Use \-yes parameter to answer yes to all questions (you want to automatically
restore all data).

Use \-memory parameter to force usage of defined memory type for storing
entries regardless what backu format says.

.TP 
\fBbackup\fP\fI file [\-yes]\fP
Backup your phone to file. It's possible to backup (depends on phone and
backup format):

* phonebook from SIM and phone memory
.br
* calendar notes
.br
* SMSC settings
.br
* operator logo
.br
* startup (static) logo or startup text
.br
* WAP bookmarks
.br
* WAP settings
.br
* caller logos and groups
.br
* user ringtones
.br

There are various backup formats supported and the backup format is guessed
based on file extension:

* .lmb \- Nokia backup, supports contacts, caller logos and startup logo.
.br
* .vcs \- vCalendar, supports calendar and todo.
.br
* .vcf \- vCard, supports contacts.
.br
* .ldif \- LDAP import, supports contacts.
.br
* .ics \- iCalendar, supports calendar and todo.
.br
* Any other extension is Gammu backup file and it supports all data
mentioned above.

See \fBEXAMPLE\fP section for some hints on manipulating Gammu backup format.


.TP 
\fBclearall\fP
Deletes all private data from the phone.

.TP 
\fBgetallcategory TODO|PHONEBOOK\fP

.TP 
\fBgetcategory TODO|PHONEBOOK\fP\fI start [stop]\fP

.TP 
\fBlistmemorycategory\fP\fI text|number\fP

.TP 
\fBlisttodocategory\fP\fI text|number\fP

.TP 
\fBrestore\fP\fI file [\-yes]\fP
Restore settings written in file created using \fBbackup\fP option.

Please note that restoring deletes all current content in phone. If you want
only to add entries to phone, use addnew.

In some phones restoring calendar notes will not show error, but won't be
done, when phone doesn't have set clock inside.


.SS "Backing up and restoring"
.TP 
\fBaddnew\fP\fI file [\-yes] [\-memory ME|SM|..]\fP
Adds data written in file created using \fBbackup option\fP. All things
backup'ed by \fBbackup\fP can be restored (when made backup to Gammu text
file).

Please note that this adds all content of backup file to phone and does not
care about current data in the phone (no duplicates are detected).

Use \-yes parameter to answer yes to all questions (you want to automatically
restore all data).

Use \-memory parameter to force usage of defined memory type for storing
entries regardless what backu format says.

.TP 
\fBaddsms\fP\fI folder file [\-yes]\fP
Adds SMSes from file (format like backupsms uses) to selected folder in
phone.
.TP 
\fBbackup\fP\fI file [\-yes]\fP
Backup your phone to file. It's possible to backup (depends on phone and
backup format):

* phonebook from SIM and phone memory
.br
* calendar notes
.br
* SMSC settings
.br
* operator logo
.br
* startup (static) logo or startup text
.br
* WAP bookmarks
.br
* WAP settings
.br
* caller logos and groups
.br
* user ringtones
.br

There are various backup formats supported and the backup format is guessed
based on file extension:

* .lmb \- Nokia backup, supports contacts, caller logos and startup logo.
.br
* .vcs \- vCalendar, supports calendar and todo.
.br
* .vcf \- vCard, supports contacts.
.br
* .ldif \- LDAP import, supports contacts.
.br
* .ics \- iCalendar, supports calendar and todo.
.br
* Any other extension is Gammu backup file and it supports all data
mentioned above.

See \fBEXAMPLE\fP section for some hints on manipulating Gammu backup format.


.TP 
\fBbackupsms\fP\fI file [\-yes|\-all]\fP
Stores all SMSes from phone to file.

Use \-yes for answering yes to all questions (backup all messages and delete
them from phone), or \-all to just backup all folders while keeping messages
in phone.

.TP 
\fBrestore\fP\fI file [\-yes]\fP
Restore settings written in file created using \fBbackup\fP option.

Please note that restoring deletes all current content in phone. If you want
only to add entries to phone, use addnew.

In some phones restoring calendar notes will not show error, but won't be
done, when phone doesn't have set clock inside.

.TP 
\fBrestoresms\fP\fI file [\-yes]\fP
Restores SMSes from file (format like backupsms uses) to selected folder in
phone. Please note that this overwrites existing messages in phone (if it
supports it).
.TP 
\fBsavefile BOOKMARK\fP\fI target.url file location\fP
Converts backup format supported by Gammu to vBookmark file.
.TP 
\fBsavefile CALENDAR\fP\fI target.vcs file location\fP
Allows to convert between various backup formats which gammu supports for
calendar events. The file type is guessed (for input file guess is based on
extension and file content, for output solely on extension).

For example if you want to convert single entry from gammu native backup to
vCalendar, you need following command:

    gammu savefile CALENDAR output.vcs myCalendar.backup 260

.TP 
\fBsavefile TODO\fP\fI target.vcs file location\fP
Allows to convert between various backup formats which gammu supports for
todo events. The file type is guessed (for input file guess is based on
extension and file content, for output solely on extension).

For example if you want to convert single entry from gammu native backup to
vCalendar, you need following command:

    gammu savefile CALENDAR output.vcs myCalendar.backup 260

.TP 
\fBsavefile VCARD10|VCARD21\fP\fI target.vcf file SM|ME location\fP
Allows to convert between various backup formats which gammu supports for
phonebook events. The file type is guessed (for input file guess is based on
extension and file content, for output solely on extension).

For example if you want to convert single entry from gammu native backup to
vCard, you need following command:

    gammu savefile CALENDAR output.vcf myPhonebook.backup ME 42


.SS "Nokia specific"
.TP 
\fBnokiaaddfile APPLICATION|GAME\fP\fI file [\-readonly] [\-overwrite] [\-overwriteall]\fP
Install the *.jar/*.jad file pair of a midlet in the application or game
menu of the phone. You need to specify filename without the jar/jad suffix,
both will be added automatically.

The option \fI\-overwrite\fP deletes the application's .jad and .jar files bevor
installing, but doesn't delete the application data. Option \fI\-overwriteall\fP
will also delete all data. Both these options work only for Application or
Game upload.

\fIExample:\fP gammu nokiaaddfile Application Alien will read Alien.JAD and
Alien.JAR and add to Applications

\fIExample:\fP gammu nokiaaddfile Tones file.mid will read file.mid and add to
Tones folder

You can use jadmaker(1) to generate a .jad file from a .jar file.

.TP 
\fBnokiaaddfile GALLERY|GALLERY2|CAMERA|TONES|TONES2|RECORDS|VIDEO|PLAYLIST|MEMORYCARD\fP\fI file [\-name name] [\-protected] [\-readonly] [\-system] [\-hidden] [\-newtime]\fP

.TP 
\fBnokiaaddplaylists\fP

Goes through phone memory and generated playlist for all music files found.

To manually manage playlists:

    gammu addfile a:\epredefplaylist filename.m3u

Will add playlist filename.m3u

    gammu getfilesystem

Will get list of all files (including names of files with playlists)

    gammu deletefiles a:\epredefplaylist\efilename.m3u

Will delete playlist filename.m3u

Format of m3u playlist is easy (standard mp3 playlist):

First line is #EXTM3U, next lines contain names of files (b:\efile1.mp3,
b:\efolder1\efile2.mp3, etc.). File needs t have '\er\en' terminated
lines. So just run unix2dos on the resulting file before uploading it your
your phone.

.TP 
\fBnokiacomposer\fP\fI file\fP
Show, how to enter RTTL ringtone in composer existing in many Nokia phones
(and how should it look like).

.TP 
\fBnokiadebug\fP\fI filename [[v11\-22] [,v33\-44]...]\fP

.TP 
\fBnokiadisplayoutput\fP

.TP 
\fBnokiadisplaytest\fP\fI number\fP

.TP 
\fBnokiagetadc\fP

.TP 
\fBnokiagetoperatorname\fP
6110.c phones have place for name for one GSM network (of course, with
flashing it's possible to change all names, but Gammu is not flasher
;\-)). You can get this name using this option.

.TP 
\fBnokiagetpbkfeatures\fP\fI memorytype\fP

.TP 
\fBnokiagetscreendump\fP

.TP 
\fBnokiagett9\fP
This option should display T9 dictionary content from DCT4 phones.

.TP 
\fBnokiagetvoicerecord\fP\fI location\fP

Get voice record from location and save to WAV file. File is coded using GSM
6.10 codec (available for example in win32). Name of file is like name of
voice record in phone.

Created WAV files require GSM 6.10 codec to be played. In Win XP it's
included by Microsoft. If you deleted it by accident in this operating
system, make such steps:

1. Control Panel
.br
2. Add hardware
.br
3. click Next
.br
4. select "Yes. I have already connected the hardware"
.br
5. select "Add a new hardware device"
.br
6. select "Install the hardware that I manually select from a list"
.br
7. select "Sound, video and game controllers"
.br
8. select "Audio codecs"
.br
9.  select "windows\esystem32" directory and file "mmdriver.inf"
.br
10. if You will be asked for file msgsm32.acm, it should unpacked from
Windows CD
.br
11. now You can be asked if want to install unsigned driver (YES), about
select codec configuration (select what you want) and rebotting PC (make it)

.TP 
\fBnokiamakecamerashoot\fP

.TP 
\fBnokianetmonitor\fP\fI test\fP
Takes output or set netmonitor for Nokia DCT3 phones.

\fITIP:\fP For more info about this option, please visit
\fIhttp://www.mwiacek.com\fP and read netmonitor manual.

\fITIP:\fP test \fB243\fP enables all tests (after using command \fBgammu
nokianetmonitor 243\fP in some phones like 6210 or 9210 have to reboot them to
see netmonitor menu)

.TP 
\fBnokianetmonitor36\fP
Reset counters from netmonitor test 36 in Nokia DCT3 phones.

\fITIP:\fP For more info about this option, please visit
\fIhttp://www.mwiacek.com\fP and read netmonitor manual.

.TP 
\fBnokiasecuritycode\fP
Get/reset to "12345" security code

.TP 
\fBnokiaselftests\fP

Perform tests for Nokia DCT3 phones.

Note: EEPROM test can show an error when your phone has an EEPROM in flash
(like 82xx/7110/62xx/33xx). The clock test will show an error when the phone
doesn?t have an internal battery for the clock (like 3xxx).

.TP 
\fBnokiasetlights\fP\fI keypad|display|torch on|off\fP

.TP 
\fBnokiasetoperatorname\fP\fI [networkcode name]\fP

.TP 
\fBnokiasetphonemenus\fP
Enable all (?) possible menus for DCT3 Nokia phones:

1. ALS (Alternative Line Service) option menu
.br
2. vibra menu for 3210
.br
3. 3315 features in 3310 5.45 and higher
.br
4. two additional games (React and Logic) for 3210 5.31 and higher
.br
5. WellMate menu for 6150
.br
6. NetMonitor

and for DCT4:

1. ALS (Alternative Line Service) option menu
.br
2. Bluetooth, WAP bookmarks and settings menu, ... (6310i)
.br
3. GPRS Always Online
.br
\&...

.TP 
\fBnokiasetvibralevel\fP\fI level\fP
Set vibra power to "level" (given in percent)

.TP 
\fBnokiatuneradio\fP

.TP 
\fBnokiavibratest\fP


.SS "Siemens specific"
.TP 
\fBsiemensnetmonact\fP\fI netmon_type\fP

Enables network monitor in Siemens phone. Currently known values for type
are 1 for full and 2 for simple mode.
.TP 
\fBsiemensnetmonitor\fP\fI test\fP

.TP 
\fBsiemenssatnetmon\fP


.SS Network
.TP 
\fBgetgprspoint\fP\fI start [stop]\fP

.TP 
\fBlistnetworks\fP\fI [country]\fP
Show names/codes of GSM networks known for Gammu

.TP 
\fBmonitor\fP\fI [times]\fP
Get phone status and writes continuously to standard output. Press Ctrl+C to
break this state.

.TP 
\fBnetworkinfo\fP
Show information about network status from the phone.

.TP 
\fBnokiadebug\fP\fI filename [[v11\-22] [,v33\-44]...]\fP

.TP 
\fBnokiagetoperatorname\fP
6110.c phones have place for name for one GSM network (of course, with
flashing it's possible to change all names, but Gammu is not flasher
;\-)). You can get this name using this option.

.TP 
\fBnokianetmonitor\fP\fI test\fP
Takes output or set netmonitor for Nokia DCT3 phones.

\fITIP:\fP For more info about this option, please visit
\fIhttp://www.mwiacek.com\fP and read netmonitor manual.

\fITIP:\fP test \fB243\fP enables all tests (after using command \fBgammu
nokianetmonitor 243\fP in some phones like 6210 or 9210 have to reboot them to
see netmonitor menu)

.TP 
\fBnokiasetoperatorname\fP\fI [networkcode name]\fP

.TP 
\fBsetautonetworklogin\fP

.TP 
\fBsiemensnetmonact\fP\fI netmon_type\fP

Enables network monitor in Siemens phone. Currently known values for type
are 1 for full and 2 for simple mode.
.TP 
\fBsiemensnetmonitor\fP\fI test\fP

.TP 
\fBsiemenssatnetmon\fP


.SS "WAP settings and bookmarks"
.TP 
\fBaddnew\fP\fI file [\-yes] [\-memory ME|SM|..]\fP
Adds data written in file created using \fBbackup option\fP. All things
backup'ed by \fBbackup\fP can be restored (when made backup to Gammu text
file).

Please note that this adds all content of backup file to phone and does not
care about current data in the phone (no duplicates are detected).

Use \-yes parameter to answer yes to all questions (you want to automatically
restore all data).

Use \-memory parameter to force usage of defined memory type for storing
entries regardless what backu format says.

.TP 
\fBbackup\fP\fI file [\-yes]\fP
Backup your phone to file. It's possible to backup (depends on phone and
backup format):

* phonebook from SIM and phone memory
.br
* calendar notes
.br
* SMSC settings
.br
* operator logo
.br
* startup (static) logo or startup text
.br
* WAP bookmarks
.br
* WAP settings
.br
* caller logos and groups
.br
* user ringtones
.br

There are various backup formats supported and the backup format is guessed
based on file extension:

* .lmb \- Nokia backup, supports contacts, caller logos and startup logo.
.br
* .vcs \- vCalendar, supports calendar and todo.
.br
* .vcf \- vCard, supports contacts.
.br
* .ldif \- LDAP import, supports contacts.
.br
* .ics \- iCalendar, supports calendar and todo.
.br
* Any other extension is Gammu backup file and it supports all data
mentioned above.

See \fBEXAMPLE\fP section for some hints on manipulating Gammu backup format.


.TP 
\fBclearall\fP
Deletes all private data from the phone.

.TP 
\fBdeletewapbookmark\fP\fI start [stop]\fP
Delete WAP bookmarks from phone.

Locations are numerated from 1.

.TP 
\fBgetchatsettings\fP\fI start [stop]\fP

.TP 
\fBgetsyncmlsettings\fP\fI start [stop]\fP

.TP 
\fBgetwapbookmark\fP\fI start [stop]\fP
Get WAP bookmarks from phone.

Locations are numerated from 1.

.TP 
\fBgetwapsettings\fP\fI start [stop]\fP
Get WAP settings from phone.

Locations are numerated from 1.

.TP 
\fBrestore\fP\fI file [\-yes]\fP
Restore settings written in file created using \fBbackup\fP option.

Please note that restoring deletes all current content in phone. If you want
only to add entries to phone, use addnew.

In some phones restoring calendar notes will not show error, but won't be
done, when phone doesn't have set clock inside.

.TP 
\fBsavefile BOOKMARK\fP\fI target.url file location\fP
Converts backup format supported by Gammu to vBookmark file.
.TP 
\fBsavesms BOOKMARK\fP\fI file location [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]\fP
Read WAP bookmark from file created by \fBbackup\fP option and saves in Nokia
format as SMS


For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsavesms WAPINDICATOR\fP\fI URL Title [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]\fP
Saves a SMS with a WAP indication for given URL and title.


For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsavesms WAPSETTINGS\fP\fI file location DATA|GPRS [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]\fP
Read WAP settings from file created by \fBbackup\fP option and saves in Nokia
format as SMS


For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsendsms BOOKMARK\fP\fI destination file location [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]\fP
Sends a message, for description of message specific parameters see
\fBsavesms BOOKMARK\fP.



For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsendsms WAPINDICATOR\fP\fI destination URL Title [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]\fP
Sends a message, for description of message specific parameters see
\fBsavesms WAPINDICATOR\fP.



For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsendsms WAPSETTINGS\fP\fI destination file location DATA|GPRS [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]\fP
Sends a message, for description of message specific parameters see
\fBsavesms WAPSETTINGS\fP.



For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.



.SS "MMS and MMS settings"
.TP 
\fBgetallmms\fP\fI [\-save]\fP

.TP 
\fBgeteachmms\fP\fI [\-save]\fP

.TP 
\fBgetmmsfolders\fP

.TP 
\fBgetmmssettings\fP\fI start [stop]\fP

.TP 
\fBreadmmsfile\fP\fI file [\-save]\fP

.TP 
\fBsavesms MMSINDICATOR\fP\fI URL Title Sender [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]\fP

Saves a message with MMS indication. The recipient phone will then download
MMS from given URL and display it.

Please note that you should provide valid smil data on that URL.


For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsavesms MMSSETTINGS\fP\fI file location  [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]\fP
Saves a message with MMS configuration. The configuration will be read from
Gammu backup file from given location.

For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsendsms MMSINDICATOR\fP\fI destination URL Title Sender [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]\fP
Sends a message, for description of message specific parameters see
\fBsavesms MMSINDICATOR\fP.



For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsendsms MMSSETTINGS\fP\fI destination file location [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]\fP
Sends a message, for description of message specific parameters see
\fBsavesms MMSSETTINGS\fP.



For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.



.SS "Phone tests"
.TP 
\fBnokiadisplaytest\fP\fI number\fP

.TP 
\fBnokiagetadc\fP

.TP 
\fBnokiaselftests\fP

Perform tests for Nokia DCT3 phones.

Note: EEPROM test can show an error when your phone has an EEPROM in flash
(like 82xx/7110/62xx/33xx). The clock test will show an error when the phone
doesn?t have an internal battery for the clock (like 3xxx).

.TP 
\fBnokiasetlights\fP\fI keypad|display|torch on|off\fP

.TP 
\fBnokiavibratest\fP


.SS "FM radio"
.TP 
\fBaddnew\fP\fI file [\-yes] [\-memory ME|SM|..]\fP
Adds data written in file created using \fBbackup option\fP. All things
backup'ed by \fBbackup\fP can be restored (when made backup to Gammu text
file).

Please note that this adds all content of backup file to phone and does not
care about current data in the phone (no duplicates are detected).

Use \-yes parameter to answer yes to all questions (you want to automatically
restore all data).

Use \-memory parameter to force usage of defined memory type for storing
entries regardless what backu format says.

.TP 
\fBbackup\fP\fI file [\-yes]\fP
Backup your phone to file. It's possible to backup (depends on phone and
backup format):

* phonebook from SIM and phone memory
.br
* calendar notes
.br
* SMSC settings
.br
* operator logo
.br
* startup (static) logo or startup text
.br
* WAP bookmarks
.br
* WAP settings
.br
* caller logos and groups
.br
* user ringtones
.br

There are various backup formats supported and the backup format is guessed
based on file extension:

* .lmb \- Nokia backup, supports contacts, caller logos and startup logo.
.br
* .vcs \- vCalendar, supports calendar and todo.
.br
* .vcf \- vCard, supports contacts.
.br
* .ldif \- LDAP import, supports contacts.
.br
* .ics \- iCalendar, supports calendar and todo.
.br
* Any other extension is Gammu backup file and it supports all data
mentioned above.

See \fBEXAMPLE\fP section for some hints on manipulating Gammu backup format.


.TP 
\fBclearall\fP
Deletes all private data from the phone.

.TP 
\fBgetfmstation\fP\fI start [stop]\fP
Show info about FM stations in phone

.TP 
\fBnokiatuneradio\fP

.TP 
\fBrestore\fP\fI file [\-yes]\fP
Restore settings written in file created using \fBbackup\fP option.

Please note that restoring deletes all current content in phone. If you want
only to add entries to phone, use addnew.

In some phones restoring calendar notes will not show error, but won't be
done, when phone doesn't have set clock inside.


.SS "Phone information"
.TP 
\fBbattery\fP
Displays information about battery and power source.

.TP 
\fBgetdisplaystatus\fP

.TP 
\fBgetlocation\fP
Gets network information from phone (same as networkinfo)  and prints
location (latitude and longitude) based on information from OpenCellID
<http://opencellid.org>.

.TP 
\fBgetsecuritystatus\fP
Show, if phone wait for security code (like PIN, PUK, etc.) or not

.TP 
\fBidentify\fP
Show the most important phone data.

.TP 
\fBmonitor\fP\fI [times]\fP
Get phone status and writes continuously to standard output. Press Ctrl+C to
break this state.

.TP 
\fBnokiasecuritycode\fP
Get/reset to "12345" security code


.SS "Phone settings"
.TP 
\fBgetcalendarsettings\fP
Displays calendar settings like first day of week or automatic deleting of
old entries.

.TP 
\fBgetprofile\fP\fI start [stop]\fP

.TP 
\fBresetphonesettings PHONE|DEV|UIF|ALL|FACTORY\fP
Reset phone settings. \fIBE CAREFULL !!!!\fP

\fBPHONE:\fP
.br

\fBDEV:\fP
.br

\fBALL:\fP

Clear user settings
.br
* removes or set logos to default
.br
* set default phonebook and other menu settings
.br
* clear T9 words,
.br
* clear call register info
.br
* set default profiles settings
.br
* clear user ringtones

\fBUIF:\fP
.br
* changes like after \fBALL\fP
.br
* disables netmon and PPS (all "hidden" menus)

\fBFACTORY:\fP
.br
* changes like after \fBUIF\fP
.br
* clear date/time

.TP 
\fBsavesms PROFILE\fP\fI [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num] [\-name name] [\-bitmap bitmap] [\-ringtone ringtone]\fP

Read ringtone (RTTL) format, bitmap (Picture Image size) and name, format
into Smart Messaging profile and send/save as SMS. Please note, that this
format is abandomed by Nokia and supported by some (older) devices only like
Nokia 3310.


For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.


.TP 
\fBsendsms PROFILE\fP\fI destination [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num] [\-name name] [\-bitmap bitmap] [\-ringtone ringtone]\fP
Sends a message, for description of message specific parameters see
\fBsavesms PROFILE\fP.



For description of shared parameters see \fBCommon parameters for sendsms and
savesms\fP.



.SS "Dumps decoding"
.TP 
\fBdecodebinarydump\fP\fI file [phonemodel]\fP
Decodes a dump made by Gammu with \fBlogformat\fP se to \fBbinary\fP (see
\fIREADME\fP for info about this method of reporting bugs).

This option is available only if Gammu was compiled with debuging options.


.TP 
\fBdecodesniff MBUS2|IRDA\fP\fI file [phonemodel]\fP
Option available only, if Gammu was compiled with debug. Allows to decode
sniffs. See \fI/docs/develop/develop.txt\fP for more details.


.SS "Functions that don't fit elsewhere"
.TP 
\fBbatch\fP\fI [file]\fP
Starts Gammu in a batch mode. In this mode you can issue several commands
each on one line. Lines starting with # are treated as a comments.

By default, commands are read from standard input, but you can optionally
specify a file from where they would be read (special case \- means standard
input).

.TP 
\fBentersecuritycode PIN|PUK|PIN2|PUK2|PHONE|NETWORK\fP\fI code|\-\fP
Allow to enter security code from PC. When code is \-, it is read from stdin.

.TP 
\fBnokiagetscreendump\fP

.TP 
\fBnokiagetvoicerecord\fP\fI location\fP

Get voice record from location and save to WAV file. File is coded using GSM
6.10 codec (available for example in win32). Name of file is like name of
voice record in phone.

Created WAV files require GSM 6.10 codec to be played. In Win XP it's
included by Microsoft. If you deleted it by accident in this operating
system, make such steps:

1. Control Panel
.br
2. Add hardware
.br
3. click Next
.br
4. select "Yes. I have already connected the hardware"
.br
5. select "Add a new hardware device"
.br
6. select "Install the hardware that I manually select from a list"
.br
7. select "Sound, video and game controllers"
.br
8. select "Audio codecs"
.br
9.  select "windows\esystem32" directory and file "mmdriver.inf"
.br
10. if You will be asked for file msgsm32.acm, it should unpacked from
Windows CD
.br
11. now You can be asked if want to install unsigned driver (YES), about
select codec configuration (select what you want) and rebotting PC (make it)

.TP 
\fBnokiamakecamerashoot\fP

.TP 
\fBnokiasetphonemenus\fP
Enable all (?) possible menus for DCT3 Nokia phones:

1. ALS (Alternative Line Service) option menu
.br
2. vibra menu for 3210
.br
3. 3315 features in 3310 5.45 and higher
.br
4. two additional games (React and Logic) for 3210 5.31 and higher
.br
5. WellMate menu for 6150
.br
6. NetMonitor

and for DCT4:

1. ALS (Alternative Line Service) option menu
.br
2. Bluetooth, WAP bookmarks and settings menu, ... (6310i)
.br
3. GPRS Always Online
.br
\&...

.TP 
\fBnokiasetvibralevel\fP\fI level\fP
Set vibra power to "level" (given in percent)

.TP 
\fBpresskeysequence\fP\fI mMnNpPuUdD+\-123456789*0#gGrR<>[]hHcCjJfFoOmMdD@\fP
Press specified key sequence on phone keyboard

\fBmM\fP \- Menu
.br
\fBnN\fP \- Names key
.br
\fBpP\fP \- Power
.br
\fBuU\fP \- Up
.br
\fBdD\fP \- Down
.br
\fB+\-\fP \- +\-
.br
\fBgG\fP \- Green
.br
\fBrR\fP \- Red
.br
\fB123456789*0#\fP is numeric keyboard

.TP 
\fBreset SOFT|HARD\fP
Make phone reset: soft (without asking for PIN) or hard (with PIN).

\fINote:\fP some phones will make hard reset even with \fBSOFT\fP option.

.TP 
\fBsearchphone\fP\fI [\-debug]\fP
Attempts to search for a connected phone. Please note that this can take a
very long time, but in case you have no clue how to configure phone
connection, this is a convenient way to find working setup for Gammu.

.SS "Gammu information"
.TP 
\fBcheckversion\fP\fI [STABLE]\fP
Checks whether there is newer Gammu version available online (if Gammu has
been compiled with CURL). If you pass additional parameter \fBSTABLE\fP, only
stable versions will be checked.

.TP 
\fBfeatures\fP
Print information about compiled in features.

.TP 
\fBhelp\fP\fI [topic]\fP
Print help. By default general help is printed, but you can also specify a
help category to get more detailed help on some topic.

.TP 
\fBversion\fP
Print version information and license.


.SH FILES

.P
\fI~/.gammurc\fP
.br
\fI/usr/share/doc/gammu/*\fP
.br
\fI/dev/ircomm?\fP
.br
\fI/dev/ttyS?\fP
.br
\fI/dev/ttyACM?\fP

.SH "RETURN VALUES"

.P
gammu returns 0 on success. In case of failure non zero code is returned.

.SS 1
Out of memory or other critical error.

.SS 2
Invalid command line parameters.

.SS 3
Failed to open file specified on command line.

.SS 4
Program was interrupted.

.SS 98
Gammu library version mismatch.

.SS 99
Functionality has been moved. For example to gammu\-smsd(1).

Errors codes greater than 100 map to the GSM_Error values increased by 100:

.SS 101
No error.
.SS 102
Error opening device. Unknown, busy or no permissions.
.SS 103
Error opening device, it is locked.
.SS 104
Error opening device, it doesn't exist.
.SS 105
Error opening device, it is already opened by other application.
.SS 106
Error opening device, you don't have permissions.
.SS 107
Error opening device. No required driver in operating system.
.SS 108
Error opening device. Some hardware not connected/wrongly configured.
.SS 109
Error setting device DTR or RTS.
.SS 110
Error setting device speed. Maybe speed not supported.
.SS 111
Error writing to the device.
.SS 112
Error during reading from the device.
.SS 113
Can't set parity on the device.
.SS 114
No response in specified timeout. Probably phone not connected.
.SS 115
Frame not requested right now. See <http://wammu.eu/support/bugs/>
for information how to report it.
.SS 116
Unknown response from phone. See <http://wammu.eu/support/bugs/> for
information how to report it.
.SS 117
Unknown frame. See <http://wammu.eu/support/bugs/> for information
how to report it.
.SS 118
Unknown connection type string. Check config file.
.SS 119
Unknown model type string. Check config file.
.SS 120
Some functions not available for your system (disabled in config or not
implemented).
.SS 121
Function not supported by phone.
.SS 122
Entry is empty.
.SS 123
Security error. Maybe no PIN?
.SS 124
Invalid location. Maybe too high?
.SS 125
Functionality not implemented. You are welcome to help authors with it.
.SS 126
Memory full.
.SS 127
Unknown error.
.SS 128
Can not open specified file.
.SS 129
More memory required...
.SS 130
Operation not allowed by phone.
.SS 131
No SMSC number given. Provide it manually or use the one configured in
phone.
.SS 132
You're inside phone menu (maybe editing?). Leave it and try again.
.SS 133
Phone is not connected.
.SS 134
Function is currently being implemented. If you want to help, please contact
authors.
.SS 135
Phone is disabled and connected to charger.
.SS 136
File format not supported by Gammu.
.SS 137
Nobody is perfect, some bug appeared in protocol implementation. Please
contact authors.
.SS 138
Transfer was cancelled by phone, maybe you pressed cancel on phone.
.SS 139
Phone module need to send another answer frame.
.SS 140
Current connection type doesn't support called function.
.SS 141
CRC error.
.SS 142
Invalid date or time specified.
.SS 143
Phone memory error, maybe it is read only.
.SS 144
Invalid data given to phone.
.SS 145
File with specified name already exists.
.SS 146
File with specified name doesn't exist.
.SS 147
You have to give folder name and not file name.
.SS 148
You have to give file name and not folder name.
.SS 149
Can not access SIM card.
.SS 150
Wrong GNAPPLET version in phone. Use version from currently used Gammu.
.SS 151
Only part of folder has been listed.
.SS 152
Folder must be empty.
.SS 153
Data were converted.
.SS 154
Gammu is not configured.
.SS 155
Wrong folder used.
.SS 156
Internal phone error.
.SS 157
Error writing file to disk.
.SS 158
No such section exists.
.SS 159
Using default values.
.SS 160
Corrupted data returned by phone.
.SS 161
Bad feature string in configuration.
.SS 162
Desired functionality has been disabled on compile time.
.SS 163
Bluetooth configuration requires channel option.
.SS 164
Service is not runnig.
.SS 165
Service configuration is missing.
.SS 166
Command rejected because device was busy. Wait and restart.
.SS 167
Could not connect to the server.
.SS 168
Could not resolve the host name.
.SS 169
Failed to get SMSC number from phone.

.SH EXAMPLE


.SS Configuration

.P
To check it out, you need to have configuration file for gammu, see
gammurc(5) for more details about it.

.SS "Sending messages"

.TP 
Save text message up to standard 160 chars:

.RS
.sp
.nf
.ne 7
echo "All your base are belong to us" | gammu savesms TEXT
.fi
.sp
.RE
.PP

or

.RS
.sp
.nf
.ne 7
gammu savesms TEXT \-text "All your base are belong to us"
.fi
.sp
.RE
.PP

.TP 
Save long text message:

.RS
.sp
.nf
.ne 7
echo "All your base are belong to us" | gammu savesms TEXT \-len 400
.fi
.sp
.RE
.PP

or

.RS
.sp
.nf
.ne 7
gammu savesms TEXT \-len 400 \-text "All your base are belong to us"
.fi
.sp
.RE
.PP

or

.RS
.sp
.nf
.ne 7
gammu savesms EMS \-text "All your base are belong to us"
.fi
.sp
.RE
.PP

.TP 
Save some funky message with predefined sound and animation from 2 bitmaps:

.RS
.sp
.nf
.ne 7
gammu savesms EMS \-text "Greetings" \-defsound 1 \-text "from Gammu"
\-tone10 axelf.txt \-animation 2 file1.bmp file2.bmp
.fi
.sp
.RE
.PP

.TP 
Save protected message with ringtone:

.RS
.sp
.nf
.ne 7
gammu savesms EMS \-protected 2 \-variablebitmaplong ala.bmp
\-toneSElong axelf.txt \-toneSE ring.txt
.fi
.sp
.RE
.PP

.SS Backups

If you will backup settings to Gammu text file, it will be possible to edit
it. It's easy: many things in this file will be written double \- once in
Unicode, once in ASCII. When you will remove Unicode version Gammu will use
ASCII on \fBrestore\fP (and you can easy edit ASCII text) and will convert it
according to your OS locale. When will be available Unicode version of text,
it will be used instead of ASCII (useful with Unicode phones \- it isn't
important, what locale is set in computer and no conversion Unicode \->
ASCII and ASCII \-> Unicode is done).

You can use any editor with regular expressions function to edit backup text
file. Examples of such editors can be vim <http://www.vim.org/> or
TextPad <http://www.textpad.com/> which both do support regular
expressions.

.TP 
Remove info about voice tags

Find: ^Entry\e([0\-9][0\-9]\e)VoiceTag = \e(.*\e)\en

Replace:

.TP 
Change all numbers starting from +3620, +3630, +3660, +3670 to +3620

Find: Type = NumberGeneral\enEntry\e([0\-9][0\-9]\e)Text =
"\e+36\e(20\e|30\e|60\e|70\e)\en

Replace: Type = NumberMobile\enEntry\e1Text = "\e+3620

.TP 
Change phone numbers type to mobile for numbers starting from +3620, +3630,... and removing the corresponding TextUnicode line

Find: Type = NumberGeneral\enEntry\e([0\-9][0\-9]\e)Text =
"\e+36\e([2367]0\e)\e([^\e"]*\e)"\enEntry\e([0\-9][0\-9]\e)TextUnicode =
\e([^\en]*\e)\en

Replace: Type = NumberMobile\enEntry\e1Text = "\e+36\e2\e3"\en


.SH COPYRIGHT

Copyright \(co 2003 \- 2010 Marcin Wiacek, Michal Cihar and other authors.
License GPLv2: GNU GPL version 2
<http://www.gnu.org/licenses/old\-licenses/gpl\-2.0.html>
.br
This is free software: you are free to change and redistribute it.  There is
NO WARRANTY, to the extent permitted by law.

.SH "REPORTING BUGS"

There are definitely many bugs, reporting to author is welcome. Please
include some useful information when sending bug reports (especially debug
logs, operating system, it's version and phone information are needed).

.P
To generate debug log, enable it in gammurc (alternatively you can do it on
command line using \-d textall \-f /tmp/gammu.log):

.RS
.sp
.nf
.ne 7
[gammu]
YOUR CONNECTION SETTINGS
logfile = /tmp/gammu.log
logformat = textall
.fi
.sp
.RE
.PP

With this settings, Gammu generates /tmp/gammu.log on each connection to
phone and stores dump of communication there. You can also find some hints
for improving support for your phone in this log.

See <http://wammu.eu/support/bugs/> for more information on
reporting bugs.

Please report bugs to <http://bugs.cihar.com>.

.SH AUTHOR

.P
You can contact authors on <gammu\-users@lists.sourceforge.net>.

.P
\fIMichal Cihar\fP <michal@cihar.com> is current project maintainer and
contributor of most of AT and OBEX code.

.P
\fIMarcin Wiacek\fP <marcin@mwiacek.com> is project iniciator and
contributor of most Nokia code.

.P
As this project grew from Gnokii, we would like to thanks all Gnokii
developers, especially \fIPavel Janik\fP, \fIPawel Kot\fP and \fIManfred Jonsson\fP
(see CREDITS from Gnokii for all their contributor).

.P
Many other people have helped with various features, check ChangeLog for
more details.

.SH "SEE ALSO"

.P
gammu\-smsd(1), gammu\-smsd\-inject(1), gammurc(5), jadmaker(1)

Some more hints can be found in README file or on wiki
<http://www.gammu.org/>.

Related programs which can be used with GSM modem:

cu(1), gnokii(1), minicom(1)

Graphical interfaces for Gammu:

wammu(1), gmobilemedia(1)

