Index: COPYING
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/COPYING,v
retrieving revision 1.1.1.3
retrieving revision 1.1.1.2.2.1
diff -u -r1.1.1.3 -r1.1.1.2.2.1
Index: COPYRIGHT
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/COPYRIGHT,v
retrieving revision 1.1.1.1
retrieving revision 1.1.2.1
diff -u -r1.1.1.1 -r1.1.2.1
Index: INSTALL
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/INSTALL,v
retrieving revision 1.1.1.2
retrieving revision 1.1.1.1.16.1
diff -u -r1.1.1.2 -r1.1.1.1.16.1
Index: Makefile
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Makefile,v
retrieving revision 1.1.1.2
retrieving revision 1.1.1.2.2.1
diff -u -r1.1.1.2 -r1.1.1.2.2.1
--- Makefile	18 Feb 2002 02:05:24 -0000	1.1.1.2
+++ Makefile	25 Feb 2002 02:49:24 -0000	1.1.1.2.2.1
@@ -18,9 +18,9 @@
 BIN_DIRS = gnokii
 
 ifndef WIN32
-BIN_DIRS += gnokiid
-BIN_DIRS += mgnetd
-BIN_DIRS += mgnetd/mg_demo_client
+###BIN_DIRS += gnokiid
+###BIN_DIRS += mgnetd
+###BIN_DIRS += mgnetd/mg_demo_client
 endif
 
 DIRS =  common \
@@ -38,6 +38,8 @@
 
 GTK_DIRS =  xgnokii \
             xlogos
+#uClinux:
+GTK_LIBS=
 
 PO_DIR   = 	po
 DOCS_DIR = 	Docs
Index: Makefile.global.in
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Makefile.global.in,v
retrieving revision 1.1.1.2
retrieving revision 1.1.1.2.2.5
diff -u -r1.1.1.2 -r1.1.1.2.2.5
--- Makefile.global.in	18 Feb 2002 02:05:24 -0000	1.1.1.2
+++ Makefile.global.in	5 Mar 2002 18:44:30 -0000	1.1.1.2.2.5
@@ -46,6 +46,8 @@
 CPPFLAGS       = @CPPFLAGS@
 LIBS           = @LIBS@
 LEX            = @LEX@
+AR             = @AR@
+AS             = @AS@
 
 GTK_CFLAGS     = @GTK_CFLAGS@
 GTK_LIBS       = @GTK_LIBS@
@@ -72,6 +74,21 @@
 endif
 
 
-CFLAGS += -I$(GNOKII_INCLUDE)
+CFLAGS += -I$(GNOKII_INCLUDE) -DGNOKII_MAIN=1
 LDFLAGS = $(LIBS) -Wl,--rpath -Wl,$(libdir)
 
+%.o: %.c
+ifneq "" "$(findstring -DSTACKCHECK,$(CPPFLAGS))"
+	@echo "$(CC) $(CFLAGS) $(CPPFLAGS) $(TARGET_ARCH) -S -o - $< | sed '#hidden' | $(AS) $(ASFLAGS) $(TARGET_MACH) -o $@"
+	@$(CC) $(CFLAGS) $(CPPFLAGS) $(TARGET_ARCH) -S -o - $< | sed \
+		's!^	link\.w %a6,#\(-\?[0-9]\+\)$$!\
+moveml %d0-%d7/%a0-%a6,-(%sp); \
+movel #\1,%d0; \
+lea stackcheck-.-8,%a0; \
+jsr 0(%pc,%a0); \
+moveml (%sp)+,%d0-%d7/%a0-%a6; \
+&!' | \
+		$(AS) $(ASFLAGS) $(TARGET_MACH) -o $@
+else
+	$(CC) $(CFLAGS) $(CPPFLAGS) $(TARGET_ARCH) -c -o $@ $<
+endif
Index: README
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/README,v
retrieving revision 1.1.1.2
retrieving revision 1.1.2.1
diff -u -r1.1.1.2 -r1.1.2.1
Index: VERSION
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/VERSION,v
retrieving revision 1.1.1.5
retrieving revision 1.1.1.3.2.1
diff -u -r1.1.1.5 -r1.1.1.3.2.1
Index: acconfig.h
===================================================================
RCS file: acconfig.h
diff -N acconfig.h
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ acconfig.h	14 Mar 2002 19:49:45 -0000	1.1.2.5
@@ -0,0 +1,107 @@
+/*
+
+  $Id$
+
+  G N O K I I
+
+  A Linux/Unix toolset and driver for Nokia mobile phones.
+
+  Released under the terms of the GNU GPL, see file COPYING for more details.
+
+*/
+
+#ifndef __CONFIG_H__
+#define __CONFIG_H__
+
+@TOP@
+
+
+/* Define if you have timersub() */
+#undef HAVE_TIMEOPS
+
+/* Define if you have tm_gmtoff field in tm structure */
+#undef HAVE_TM_GMTON
+
+/* Define if you have cfsetspeed, cfsetispeed, cfsetospeed, c_ispeed and c_ospeed in struct termios */
+#undef HAVE_CFSETSPEED
+#undef HAVE_CFSETISPEED
+#undef HAVE_CFSETOSPEED
+#undef HAVE_TERMIOS_CSPEED
+
+/* Define if you have snprintf */
+#undef HAVE_SNPRINTF
+
+/* Define debug level */
+#undef DEBUG
+#undef XDEBUG
+#undef RLP_DEBUG
+
+/* Decide if you want security options enabled */
+#undef SECURITY
+
+/* Define if you have XPM components */
+#undef XPM
+
+/* Define if you want NLS */
+#undef USE_NLS
+
+/* Define if you want to use Unix98 PTYs */
+#undef USE_UNIX98PTYS
+
+/* Define if you compile for M$ Windows */
+#undef WIN32
+
+/* Missing symbols */
+#undef VERSION
+#undef XVERSION
+#undef DEBUG
+#undef HAVE_CFSETISPEED
+#undef HAVE_CFSETOSPEED
+#undef HAVE_CFSETSPEED
+#undef HAVE_LIBINTL
+#undef HAVE_LIBINTL_H
+#undef HAVE_TERMIOS_CSPEED
+#undef HAVE_TIMEOPS
+#undef HAVE_TM_GMTON
+#undef RLP_DEBUG
+#undef SECURITY
+#undef USE_NLS
+#undef USE_UNIX98PTYS
+#undef WIN32
+#undef XDEBUG
+#undef XPM
+#undef CONFIG_CFG_INITLENGTH
+#undef CONFIG_CFG_MODEL
+#undef CONFIG_CFG_PORT
+
+
+@BOTTOM@
+
+#include "uccompat.h"
+
+#ifdef STACKCHECK
+extern void live_check(const char *file,int line,int alloc);
+extern void live_disable(int how);
+#define LIVE live_check(__FILE__,__LINE__,-1)
+#define LIVE_ALLOC(n) live_check(__FILE__,__LINE__,(n))
+#define LIVE_DISABLE live_disable(1)
+#define LIVE_ENABLE live_disable(-1)
+#else /* STACKCHECK */
+#define LIVE
+#define LIVE_ALLOC(n)
+#define LIVE_DISABLE
+#define LIVE_ENABLE
+#endif /* STACKCHECK */
+
+
+#ifdef USE_UNIX98PTYS
+# define _XOPEN_SOURCE 500
+#endif
+#define _BSD_SOURCE 1
+#include <unistd.h>
+extern void usleep_watchdevice(unsigned long usecs);
+#define usleep(usecs) usleep_watchdevice((usecs))
+#define sleep(secs)   usleep((secs)*1000000)
+
+
+#endif /* __CONFIG_H__ */
Index: bigfunc
===================================================================
RCS file: bigfunc
diff -N bigfunc
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ bigfunc	25 Feb 2002 02:49:24 -0000	1.1.2.1
@@ -0,0 +1,28 @@
+#! /usr/bin/perl
+
+use strict;
+use warnings;
+
+open NM,"-|",'m68k-pic-coff-nm gnokii/gnokii.coff|sort'
+		or die "nm: $!";
+my(%big,$prevhex,$prevsym,$tot);
+while (<NM>) {
+	chomp;
+	/^([0-9a-f]+) (\w) (.*)$/ or die "parse: $_";
+	my $hex=hex $1;
+	my $type=$2;
+	my $sym=$3;
+	next if $type!~/[tT]/ || $sym=~/^\./ || $sym=~/^L\d+$/ || $sym eq "__gnu_compiled_c" || $sym eq "gcc2_compiled.";
+	if ($prevhex) {
+		warn "dup: $prevsym" if exists $big{$prevsym};
+		$big{$prevsym}=$hex-$prevhex;
+		$tot+=$hex-$prevhex;
+		}
+	$prevhex=$hex;
+	$prevsym=$sym;
+	}
+close NM;
+$big{"_TOTAL"}=$tot;
+for (sort { $big{$b} <=> $big{$a} } keys %big) {
+	printf "%4u %s\n",$big{$_},$_;
+	}
Index: configure.in
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/configure.in,v
retrieving revision 1.1.1.3
retrieving revision 1.1.1.3.2.3
diff -u -r1.1.1.3 -r1.1.1.3.2.3
--- configure.in	18 Feb 2002 02:05:24 -0000	1.1.1.3
+++ configure.in	2 Mar 2002 22:28:27 -0000	1.1.1.3.2.3
@@ -15,13 +15,20 @@
 AC_PREFIX_DEFAULT("/usr/local")
 
 dnl ======================== Default setting
-CFLAGS="-O2 -Wall"
+test -n "$CFLAGS"   || export CFLAGS="-O2 -Wall"
 ALL_LINGUAS="cs de et fi nl sk pl it"
 
 dnl ======================== Checks for programs.
 AC_PROG_CC
+AC_LANG_C
 AC_PROG_CPP
 AC_PROG_LEX
+if test -z "$AR";then
+	AC_PATH_PROG(AR, ar, no)
+fi
+if test -z "$AS";then
+	AC_PATH_PROG(AS, as, no)
+fi
 AC_PATH_PROG(RM, rm, no)
 AC_PATH_PROG(FIND, find, no)
 AC_CHECK_PROGS(MAKE, gmake make)
@@ -30,9 +37,25 @@
 dnl Let us have $prefix variable aviable here
 test x"$prefix" = xNONE && prefix="$ac_default_prefix"
 
+AC_ARG_WITH(cfg_model,
+	[  --with-cfg-model=5110   specifies the mobile phone model],,
+	[ with_cfg_model="5110" ])
+AC_DEFINE_UNQUOTED(CONFIG_CFG_MODEL, "$with_cfg_model")
+AC_ARG_WITH(cfg_port,
+	[  --with-cfg-port=/dev/ttyS0 specifies the mobile phone port],,
+	[ with_cfg_port="/dev/ttyS0" ])
+AC_DEFINE_UNQUOTED(CONFIG_CFG_PORT, "$with_cfg_port")
+AC_ARG_WITH(cfg_initlength,
+	[  --with-cfg-initlength=default specifies the mobile phone initlength],,
+	[ with_cfg_initlength="default" ])
+AC_DEFINE_UNQUOTED(CONFIG_CFG_INITLENGTH, "$with_cfg_initlength")
+
 AC_ARG_ENABLE(debug, 
 	[  --enable-debug          compile with debug code],
-	[ CFLAGS="-g -Wall"
+	[
+changequote({,})dnl
+	  CFLAGS="-ggdb3 `echo " $CFLAGS "|sed 's/ -O[0-9]* / /g'`" #CFLAGS="-g -Wall"
+changequote([,])dnl
 	  AC_DEFINE(DEBUG)
 	  debug="yes" ],
 	[ debug="no"  ]
@@ -70,9 +93,9 @@
 )
 
 AC_ARG_ENABLE(nls,
-	[  --disable-nls           do not use NLS],
+	[  --enable-nls            force use of NLS],
 	[ USE_NLS=$enableval ],
-	[ USE_NLS=yes ]
+	[ USE_NLS=no ]
 )
 
 if test "$USE_NLS" = "yes"; then
@@ -222,7 +245,7 @@
 fi
 
 dnl FIXME: do we really test here if libc contains this function?
-if test "x$PTHREAD_LIBS" = xerror; then
+if test "x$PTHREAD_LIBS" = xerror -a "x$cross_compiling" = xno; then
    AC_CHECK_FUNC(pthread_attr_init, PTHREAD_LIBS="",
       AC_MSG_ERROR(not found library: pthread !!!))
 fi
@@ -444,8 +467,8 @@
 
 PACKAGE=gnokii
 XPACKAGE=xgnokii
-VERSION=`cat VERSION`
-XVERSION=`cat xgnokii/VERSION`
+AC_DEFINE_UNQUOTED(VERSION, "`cat VERSION`")
+AC_DEFINE_UNQUOTED(XVERSION, "`cat xgnokii/VERSION`")
 HAVE_XGNOKII=$x_support
 
 case "$INSTALL" in
@@ -465,6 +488,8 @@
 
 AC_SUBST(PACKAGE)
 AC_SUBST(VERSION)
+AC_SUBST(AR)
+AC_SUBST(AS)
 AC_SUBST(XVERSION)
 AC_SUBST(XPACKAGE)
 AC_SUBST(XGNOKIIDIR)
@@ -482,7 +507,6 @@
 AC_SUBST(HAVE_XGNOKII)
 
 AC_OUTPUT(
-   include/config.h.in
    Makefile.global
    po/Makefile.in
    packaging/RedHat/gnokii.spec
Index: do
===================================================================
RCS file: do
diff -N do
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ do	17 Mar 2002 21:54:17 -0000	1.1.2.4
@@ -0,0 +1,30 @@
+#! /bin/sh
+
+#target_m68k=1
+enable_debug=1
+#stackcheck=60000
+cfg_port="ttyS0"
+
+exec 2>&1
+set -ex
+rm -f config.cache
+autoheader
+autoconf
+# rm -f config.cache
+if [ -n "$target_m68k" ];then
+	test -n "$CC"       || export CC="m68k-pic-coff-gcc"
+	test -n "$AR"       || export AR="m68k-pic-coff-ar"
+	test -n "$AS"       || export AS="m68k-pic-coff-as"
+	test -n "$CFLAGS"   || export CFLAGS="-O2 -Wall -fPIC"
+	test -n "$CPPFLAGS" || export CPPFLAGS="-DUCCOMPAT=1 $CPPFLAGS"
+	test -n "$LDFLAGS"  || export LDFLAGS="gnokii/cleanup.c"
+	if [ -n "$stackcheck" ];then
+		export CPPFLAGS="-DSTACKCHECK=$stackcheck $CPPFLAGS"
+		export CFLAGS="$CFLAGS -fno-omit-frame-pointer"
+	fi
+fi
+export CPPFLAGS="-DUCLINUX=1 $CPPFLAGS"
+./configure --with-cfg-model=5110 --with-cfg-port=/dev/"$cfg_port" --without-x \
+		`if [ -n "$enable_debug" ];then echo "--enable-debug --enable-xdebug";fi`
+make clean
+make
Index: Docs/CREDITS
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/CREDITS,v
retrieving revision 1.1.1.7
retrieving revision 1.1.1.2.2.1
diff -u -r1.1.1.7 -r1.1.1.2.2.1
Index: Docs/default/6250/picture1.nlm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/default/6250/picture1.nlm,v
retrieving revision 1.1.1.1
retrieving revision 1.1.2.1
diff -u -r1.1.1.1 -r1.1.2.1
Index: Docs/default/6250/picture10.nlm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/default/6250/picture10.nlm,v
retrieving revision 1.1.1.1
retrieving revision 1.1.2.1
diff -u -r1.1.1.1 -r1.1.2.1
Index: Docs/default/6250/picture2.nlm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/default/6250/picture2.nlm,v
retrieving revision 1.1.1.1
retrieving revision 1.1.2.1
diff -u -r1.1.1.1 -r1.1.2.1
Index: Docs/default/6250/picture3.nlm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/default/6250/picture3.nlm,v
retrieving revision 1.1.1.1
retrieving revision 1.1.2.1
diff -u -r1.1.1.1 -r1.1.2.1
Index: Docs/default/6250/picture4.nlm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/default/6250/picture4.nlm,v
retrieving revision 1.1.1.1
retrieving revision 1.1.2.1
diff -u -r1.1.1.1 -r1.1.2.1
Index: Docs/default/6250/picture5.nlm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/default/6250/picture5.nlm,v
retrieving revision 1.1.1.1
retrieving revision 1.1.2.1
diff -u -r1.1.1.1 -r1.1.2.1
Index: Docs/default/6250/picture6.nlm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/default/6250/picture6.nlm,v
retrieving revision 1.1.1.1
retrieving revision 1.1.2.1
diff -u -r1.1.1.1 -r1.1.2.1
Index: Docs/default/6250/picture7.nlm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/default/6250/picture7.nlm,v
retrieving revision 1.1.1.1
retrieving revision 1.1.2.1
diff -u -r1.1.1.1 -r1.1.2.1
Index: Docs/default/6250/picture8.nlm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/default/6250/picture8.nlm,v
retrieving revision 1.1.1.1
retrieving revision 1.1.2.1
diff -u -r1.1.1.1 -r1.1.2.1
Index: Docs/default/6250/picture9.nlm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/default/6250/picture9.nlm,v
retrieving revision 1.1.1.1
retrieving revision 1.1.2.1
diff -u -r1.1.1.1 -r1.1.2.1
Index: Docs/default/sounds/ringtones/12_months
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/default/sounds/ringtones/12_months,v
retrieving revision 1.1.1.1
retrieving revision 1.1.2.1
diff -u -r1.1.1.1 -r1.1.2.1
Index: Docs/default/sounds/ringtones/Alamuhan
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/default/sounds/ringtones/Alamuhan,v
retrieving revision 1.1.1.1
retrieving revision 1.1.2.1
diff -u -r1.1.1.1 -r1.1.2.1
Index: Docs/default/sounds/ringtones/Canter
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/default/sounds/ringtones/Canter,v
retrieving revision 1.1.1.1
retrieving revision 1.1.2.1
diff -u -r1.1.1.1 -r1.1.2.1
Index: Docs/default/sounds/ringtones/Carioca
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/default/sounds/ringtones/Carioca,v
retrieving revision 1.1.1.1
retrieving revision 1.1.2.1
diff -u -r1.1.1.1 -r1.1.2.1
Index: Docs/default/sounds/ringtones/City_Slicker
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/default/sounds/ringtones/City_Slicker,v
retrieving revision 1.1.1.1
retrieving revision 1.1.2.1
diff -u -r1.1.1.1 -r1.1.2.1
Index: Docs/default/sounds/ringtones/Croak
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/default/sounds/ringtones/Croak,v
retrieving revision 1.1.1.1
retrieving revision 1.1.2.1
diff -u -r1.1.1.1 -r1.1.2.1
Index: Docs/default/sounds/ringtones/Electric_eel
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/default/sounds/ringtones/Electric_eel,v
retrieving revision 1.1.1.1
retrieving revision 1.1.2.1
diff -u -r1.1.1.1 -r1.1.2.1
Index: Docs/default/sounds/ringtones/Hummingbird
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/default/sounds/ringtones/Hummingbird,v
retrieving revision 1.1.1.1
retrieving revision 1.1.2.1
diff -u -r1.1.1.1 -r1.1.2.1
Index: Docs/default/sounds/ringtones/Hurry_up
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/default/sounds/ringtones/Hurry_up,v
retrieving revision 1.1.1.1
retrieving revision 1.1.2.1
diff -u -r1.1.1.1 -r1.1.2.1
Index: Docs/default/sounds/ringtones/Jitters
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/default/sounds/ringtones/Jitters,v
retrieving revision 1.1.1.1
retrieving revision 1.1.2.1
diff -u -r1.1.1.1 -r1.1.2.1
Index: Docs/default/sounds/ringtones/Languor
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/default/sounds/ringtones/Languor,v
retrieving revision 1.1.1.1
retrieving revision 1.1.2.1
diff -u -r1.1.1.1 -r1.1.2.1
Index: Docs/default/sounds/ringtones/Morning
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/default/sounds/ringtones/Morning,v
retrieving revision 1.1.1.1
retrieving revision 1.1.2.1
diff -u -r1.1.1.1 -r1.1.2.1
Index: Docs/default/sounds/ringtones/Private_eye
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/default/sounds/ringtones/Private_eye,v
retrieving revision 1.1.1.1
retrieving revision 1.1.2.1
diff -u -r1.1.1.1 -r1.1.2.1
Index: Docs/default/sounds/ringtones/Running_horse
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/default/sounds/ringtones/Running_horse,v
retrieving revision 1.1.1.1
retrieving revision 1.1.2.1
diff -u -r1.1.1.1 -r1.1.2.1
Index: Docs/default/sounds/ringtones/Sare
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/default/sounds/ringtones/Sare,v
retrieving revision 1.1.1.1
retrieving revision 1.1.2.1
diff -u -r1.1.1.1 -r1.1.2.1
Index: Docs/default/sounds/ringtones/Side_step
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/default/sounds/ringtones/Side_step,v
retrieving revision 1.1.1.1
retrieving revision 1.1.2.1
diff -u -r1.1.1.1 -r1.1.2.1
Index: Docs/default/sounds/ringtones/Speedy
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/default/sounds/ringtones/Speedy,v
retrieving revision 1.1.1.1
retrieving revision 1.1.2.1
diff -u -r1.1.1.1 -r1.1.2.1
Index: Docs/default/sounds/ringtones/Tingle
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/default/sounds/ringtones/Tingle,v
retrieving revision 1.1.1.1
retrieving revision 1.1.2.1
diff -u -r1.1.1.1 -r1.1.2.1
Index: Docs/default/sounds/ringtones/Toreador1
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/default/sounds/ringtones/Toreador1,v
retrieving revision 1.1.1.1
retrieving revision 1.1.2.1
diff -u -r1.1.1.1 -r1.1.2.1
Index: Docs/default/sounds/ringtones/Transylvania
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/default/sounds/ringtones/Transylvania,v
retrieving revision 1.1.1.1
retrieving revision 1.1.2.1
diff -u -r1.1.1.1 -r1.1.2.1
Index: Docs/default/sounds/ringtones/Treadmill
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/default/sounds/ringtones/Treadmill,v
retrieving revision 1.1.1.1
retrieving revision 1.1.2.1
diff -u -r1.1.1.1 -r1.1.2.1
Index: Docs/default/sounds/ringtones/Tweet
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/default/sounds/ringtones/Tweet,v
retrieving revision 1.1.1.1
retrieving revision 1.1.2.1
diff -u -r1.1.1.1 -r1.1.2.1
Index: Docs/developers/gnokii/gettext-howto
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/developers/gnokii/gettext-howto,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.6 -r1.1.1.1.2.1
Index: Docs/developers/gnokii/gnokii.txt
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/developers/gnokii/gnokii.txt,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.6 -r1.1.1.1.2.1
Index: Docs/developers/gnokii/packaging-howto
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/developers/gnokii/packaging-howto,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.6 -r1.1.1.1.2.1
Index: Docs/developers/gnokii/untitled.txt
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/developers/gnokii/untitled.txt,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.6 -r1.1.1.1.2.1
Index: Docs/developers/other/RE RE.txt
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/developers/other/RE RE.txt,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.6 -r1.1.1.1.2.1
Index: Docs/developers/other/dmcp/addsms
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/developers/other/dmcp/addsms,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.6 -r1.1.1.1.2.1
Index: Docs/developers/other/dmcp/readme
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/developers/other/dmcp/readme,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.6 -r1.1.1.1.2.1
Index: Docs/developers/other/dmcp/removesms
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/developers/other/dmcp/removesms,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.6 -r1.1.1.1.2.1
Index: Docs/developers/other/sniffs/Telefonbucheditor7110.txt
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/developers/other/sniffs/Telefonbucheditor7110.txt,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.6 -r1.1.1.1.2.1
Index: Docs/developers/other/sniffs/irda/info.txt
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/developers/other/sniffs/irda/info.txt,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.6 -r1.1.1.1.2.1
Index: Docs/developers/protocol/n3110.txt
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/developers/protocol/n3110.txt,v
retrieving revision 1.1.1.1
retrieving revision 1.1.2.1
diff -u -r1.1.1.1 -r1.1.2.1
Index: Docs/developers/protocol/n6110.txt
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/developers/protocol/n6110.txt,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.2
diff -u -r1.1.1.6 -r1.1.1.1.2.2
Index: Docs/developers/protocol/n7110.txt
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/developers/protocol/n7110.txt,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.6 -r1.1.1.1.2.1
Index: Docs/developers/protocol/nokia.txt
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/developers/protocol/nokia.txt,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.6 -r1.1.1.1.2.1
Index: Docs/en_US/index.htm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/en_US/index.htm,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.6 -r1.1.1.1.2.1
Index: Docs/en_US/styl.css
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/en_US/styl.css,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.6 -r1.1.1.1.2.1
Index: Docs/en_US/gnokii/config.htm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/en_US/gnokii/config.htm,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.6 -r1.1.1.1.2.1
Index: Docs/en_US/gnokii/faq.htm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/en_US/gnokii/faq.htm,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.6 -r1.1.1.1.2.1
Index: Docs/en_US/gnokii/gnokii-6210-7110-IrDA
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/en_US/gnokii/gnokii-6210-7110-IrDA,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.6 -r1.1.1.1.2.1
Index: Docs/en_US/gnokii/gnokii.htm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/en_US/gnokii/gnokii.htm,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.6 -r1.1.1.1.2.1
Index: Docs/en_US/gnokii/phones.htm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/en_US/gnokii/phones.htm,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.6 -r1.1.1.1.2.1
Index: Docs/en_US/gnokii/todologo
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/en_US/gnokii/todologo,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.6 -r1.1.1.1.2.1
Index: Docs/en_US/gnokii/xgnokii/calendar/index.htm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/en_US/gnokii/xgnokii/calendar/index.htm,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.6 -r1.1.1.1.2.1
Index: Docs/en_US/gnokii/xgnokii/contacts/index.htm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/en_US/gnokii/xgnokii/contacts/index.htm,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.6 -r1.1.1.1.2.1
Index: Docs/en_US/gnokii/xgnokii/dtmf/index.htm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/en_US/gnokii/xgnokii/dtmf/index.htm,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.6 -r1.1.1.1.2.1
Index: Docs/en_US/gnokii/xgnokii/main/index.htm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/en_US/gnokii/xgnokii/main/index.htm,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.6 -r1.1.1.1.2.1
Index: Docs/en_US/gnokii/xgnokii/netmon/index.htm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/en_US/gnokii/xgnokii/netmon/index.htm,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.6 -r1.1.1.1.2.1
Index: Docs/en_US/gnokii/xgnokii/sms/index.htm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/en_US/gnokii/xgnokii/sms/index.htm,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.6 -r1.1.1.1.2.1
Index: Docs/en_US/gnokii/xgnokii/speeddial/index.htm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/en_US/gnokii/xgnokii/speeddial/index.htm,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.6 -r1.1.1.1.2.1
Index: Docs/en_US/gnokii/xgnokii/xkeyb/index.htm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/en_US/gnokii/xgnokii/xkeyb/index.htm,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.6 -r1.1.1.1.2.1
Index: Docs/en_US/gsm/cables/cables.htm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/en_US/gsm/cables/cables.htm,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.6 -r1.1.1.1.2.1
Index: Docs/en_US/gsm/codes/codes.htm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/en_US/gsm/codes/codes.htm,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.6 -r1.1.1.1.2.1
Index: Docs/en_US/gsm/compare/1.htm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/en_US/gsm/compare/1.htm,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.6 -r1.1.1.1.2.1
Index: Docs/en_US/gsm/compare/compare.htm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/en_US/gsm/compare/compare.htm,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.6 -r1.1.1.1.2.1
Index: Docs/en_US/gsm/compare/index.htm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/en_US/gsm/compare/index.htm,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.6 -r1.1.1.1.2.1
Index: Docs/en_US/gsm/compare/null.htm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/en_US/gsm/compare/null.htm,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.6 -r1.1.1.1.2.1
Index: Docs/en_US/gsm/firmware/firm12.htm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/en_US/gsm/firmware/firm12.htm,v
retrieving revision 1.1.1.4
retrieving revision 1.1.2.1
diff -u -r1.1.1.4 -r1.1.2.1
Index: Docs/en_US/gsm/firmware/firm3.htm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/en_US/gsm/firmware/firm3.htm,v
retrieving revision 1.1.1.4
retrieving revision 1.1.2.1
diff -u -r1.1.1.4 -r1.1.2.1
Index: Docs/en_US/gsm/firmware/firm5.htm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/en_US/gsm/firmware/firm5.htm,v
retrieving revision 1.1.1.4
retrieving revision 1.1.2.1
diff -u -r1.1.1.4 -r1.1.2.1
Index: Docs/en_US/gsm/firmware/firm6_1.htm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/en_US/gsm/firmware/firm6_1.htm,v
retrieving revision 1.1.1.4
retrieving revision 1.1.2.1
diff -u -r1.1.1.4 -r1.1.2.1
Index: Docs/en_US/gsm/firmware/firm6_2.htm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/en_US/gsm/firmware/firm6_2.htm,v
retrieving revision 1.1.1.4
retrieving revision 1.1.2.1
diff -u -r1.1.1.4 -r1.1.2.1
Index: Docs/en_US/gsm/firmware/firm7.htm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/en_US/gsm/firmware/firm7.htm,v
retrieving revision 1.1.1.4
retrieving revision 1.1.2.1
diff -u -r1.1.1.4 -r1.1.2.1
Index: Docs/en_US/gsm/firmware/firm8.htm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/en_US/gsm/firmware/firm8.htm,v
retrieving revision 1.1.1.4
retrieving revision 1.1.2.1
diff -u -r1.1.1.4 -r1.1.2.1
Index: Docs/en_US/gsm/firmware/firm9.htm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/en_US/gsm/firmware/firm9.htm,v
retrieving revision 1.1.1.4
retrieving revision 1.1.2.1
diff -u -r1.1.1.4 -r1.1.2.1
Index: Docs/en_US/gsm/firmware/firmware.htm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/en_US/gsm/firmware/firmware.htm,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.2
diff -u -r1.1.1.6 -r1.1.1.1.2.2
Index: Docs/en_US/gsm/irda/irda.htm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/en_US/gsm/irda/irda.htm,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.6 -r1.1.1.1.2.1
Index: Docs/en_US/gsm/logos/logos.htm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/en_US/gsm/logos/logos.htm,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.6 -r1.1.1.1.2.1
Index: Docs/en_US/gsm/netmon/faq_net0.htm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/en_US/gsm/netmon/faq_net0.htm,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.2
diff -u -r1.1.1.6 -r1.1.1.1.2.2
Index: Docs/en_US/gsm/netmon/faq_net1.htm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/en_US/gsm/netmon/faq_net1.htm,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.2
diff -u -r1.1.1.6 -r1.1.1.1.2.2
Index: Docs/en_US/gsm/netmon/faq_net2.htm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/en_US/gsm/netmon/faq_net2.htm,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.2
diff -u -r1.1.1.6 -r1.1.1.1.2.2
Index: Docs/en_US/gsm/netmon/faq_net3.htm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/en_US/gsm/netmon/faq_net3.htm,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.2
diff -u -r1.1.1.6 -r1.1.1.1.2.2
Index: Docs/en_US/gsm/netmon/faq_net4.htm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/en_US/gsm/netmon/faq_net4.htm,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.2
diff -u -r1.1.1.6 -r1.1.1.1.2.2
Index: Docs/en_US/gsm/netmon/faq_net5.htm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/en_US/gsm/netmon/faq_net5.htm,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.2
diff -u -r1.1.1.6 -r1.1.1.1.2.2
Index: Docs/en_US/gsm/netmon/faq_net6.htm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/en_US/gsm/netmon/faq_net6.htm,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.2
diff -u -r1.1.1.6 -r1.1.1.1.2.2
Index: Docs/en_US/gsm/netmon/net_spis.htm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/en_US/gsm/netmon/net_spis.htm,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.2
diff -u -r1.1.1.6 -r1.1.1.1.2.2
Index: Docs/en_US/gsm/sms/sms.htm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/en_US/gsm/sms/sms.htm,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.6 -r1.1.1.1.2.1
Index: Docs/examples/gnokiirc
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/examples/gnokiirc,v
retrieving revision 1.1.1.2
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.2 -r1.1.1.1.2.1
Index: Docs/examples/test.vcs
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/examples/test.vcs,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.6 -r1.1.1.1.2.1
Index: Docs/pl_PL/mygnokii.htm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/pl_PL/mygnokii.htm,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.6 -r1.1.1.1.2.1
Index: Docs/pl_PL/styl.css
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/Docs/pl_PL/styl.css,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.6 -r1.1.1.1.2.1
Index: common/Makefile
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/common/Makefile,v
retrieving revision 1.1.1.3
retrieving revision 1.1.1.2.2.4
diff -u -r1.1.1.3 -r1.1.1.2.2.4
--- common/Makefile	17 Mar 2002 20:27:07 -0000	1.1.1.3
+++ common/Makefile	17 Mar 2002 21:51:18 -0000	1.1.1.2.2.4
@@ -18,32 +18,33 @@
 		oldmodules \
 		newmodules
 
+#	files/midifile.o \
+#	gsm-wap.o \
+#	gsm-calendar.o \
+#	protocol/fbus3110.o \
+#	protocol/fbusirda.o \
+#	protocol/mbus.o \
+#	protocol/at.o \
+#	newmodules/n3110.o \
+#	newmodules/n7110.o
+#	newmodules/sniff/sniff.o \
+#	newmodules/newat.o \
+#	gsm-phonebook.o \
+#	gsm-bitmaps.o \
+#	gsm-networks.o \
+#	gsm-coding.o \
+#	gsm-sms.o \
+#	gsm-ringtones.o \
+
 OBJS =	devices/device.o \
 	data/rlp-common.o \
 	data/rlp-crc24.o \
-	files/midifile.o \
-	gsm-ringtones.o \
-	gsm-coding.o \
 	gsm-datetime.o \
-	gsm-wap.o \
 	gsm-api.o \
-	gsm-phonebook.o \
-	gsm-calendar.o \
-	gsm-networks.o \
-	gsm-bitmaps.o \
-	gsm-sms.o \
 	files/cfgreader.o \
 	misc.o \
 	protocol/fbus.o \
-	protocol/fbus3110.o \
-	protocol/fbusirda.o \
-	protocol/mbus.o \
-	protocol/at.o \
-	newmodules/sniff/sniff.o \
-	newmodules/newat.o \
-	newmodules/n6110.o \
-	newmodules/n3110.o \
-	newmodules/n7110.o
+	newmodules/n6110.o
 
 DATA_OBJS = data/virtmodem.o \
 	data/at-emulator.o \
@@ -52,22 +53,22 @@
 ifdef WIN32
 	OBJS += $(TOPDIR)/win32/winserial.o
 else
-	OBJS += devices/unixserial.o \
-	        devices/unixirda.o \
-		devices/tekram.o
+	OBJS += devices/unixserial.o
+#	        devices/unixirda.o \
+#		devices/tekram.o
 endif
 
 ifdef XPM_CFLAGS
     CFLAGS += $(XPM_CFLAGS)
 endif
 
-all: COMMON.o DATA.o gsm-filetypes.o
+all: common.a data.a ##gsm-filetypes.o
 
-COMMON.o: $(OBJS)
-	$(LD) $(LDREL) $(LDOUT) COMMON.o $(OBJS)
+common.a: $(OBJS)
+	$(AR) rcs $@ $^
 
-DATA.o: $(DATA_OBJS)
-	$(LD) $(LDREL) $(LDOUT) DATA.o $(DATA_OBJS)
+data.a: $(DATA_OBJS)
+	$(AR) rcs $@ $^
 
 gsm-filetypes.o: files/gsm-filetypes.c 
 	$(CC) $(CFLAGS) -c files/gsm-filetypes.c
Index: common/gsm-api.c
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/common/gsm-api.c,v
retrieving revision 1.1.1.4
retrieving revision 1.1.1.2.2.4
diff -u -r1.1.1.4 -r1.1.1.2.2.4
--- common/gsm-api.c	17 Mar 2002 20:27:08 -0000	1.1.1.4
+++ common/gsm-api.c	17 Mar 2002 21:51:18 -0000	1.1.1.2.2.4
@@ -18,6 +18,8 @@
 
 */
 
+#include "config.h"
+
 #include <stdio.h>
 #include <string.h>
 #include <stdlib.h>
@@ -30,6 +32,7 @@
 
 #include "gsm-api.h"
 
+#ifndef UCLINUX
 #include "newmodules/n3110.h"
 #include "newmodules/n6110.h"
 #include "newmodules/n7110.h"
@@ -38,10 +41,13 @@
   #include "newmodules/sniff/sniff.h"
 #endif
 #include "protocol/fbusirda.h"
+#endif /* UCLINUX */
 #include "protocol/fbus.h"
+#ifndef UCLINUX
 #include "protocol/fbus3110.h"
 #include "protocol/mbus.h"
 #include "protocol/at.h"
+#endif /* UCLINUX */
 #include "files/cfgreader.h"
 
 #ifndef WIN32
@@ -90,6 +96,7 @@
 unsigned char      Current_Revision[GSM_MAX_REVISION_LENGTH];
 unsigned char      Current_Model[GSM_MAX_MODEL_LENGTH];
 
+#ifndef UCLINUX
 GSM_SMSMessage     *CurrentSMSMessage;
 GSM_Error          CurrentSMSMessageError;
 int                CurrentSMSPointer;
@@ -101,10 +108,12 @@
 GSM_OneSMSFolder   CurrentSMSFolder;
 GSM_Error          CurrentSMSFolderError;
 int                CurrentSMSFolderID;
+#endif /* UCLINUX */
 
 GSM_MemoryStatus   *CurrentMemoryStatus;
 GSM_Error          CurrentMemoryStatusError;
 
+#ifndef UCLINUX
 GSM_NetworkInfo    *CurrentNetworkInfo;
 GSM_Error          CurrentNetworkInfoError;
 
@@ -121,6 +130,8 @@
 GSM_DateTime       *CurrentDateTime;
 GSM_Error          CurrentDateTimeError;
 
+GSM_Error          CurrentResetPhoneSettingsError;
+
 GSM_DateTime       *CurrentAlarm;
 GSM_Error          CurrentAlarmError;
 
@@ -133,17 +144,20 @@
 GSM_Error          CurrentSetDateTimeError;
 GSM_Error          CurrentSetAlarmError;
 
+int                *CurrentFirstCalendarFreePos;
+GSM_Error          CurrentFirstCalendarFreePosError;
+#endif /* UCLINUX */
+
 GSM_Error          CurrentEnableExtendedCommandsError;
 
 int                CurrentRFLevel,
                    CurrentBatteryLevel,
                    CurrentPowerSource;
 
+#ifndef UCLINUX
 int                CurrentDisplayStatus;
 GSM_Error          CurrentDisplayStatusError;
 
-GSM_Error          CurrentResetPhoneSettingsError;
-
 char               *CurrentNetmonitor;
 GSM_Error          CurrentNetmonitorError;
 
@@ -166,17 +180,21 @@
 GSM_Error          CurrentPressKeyError;
 
 GSM_Error          CurrentPlayToneError=GE_UNKNOWN;
+#endif /* UCLINUX */
 
 GSM_Error          CurrentDialVoiceError;
 
+#ifndef UCLINUX
 GSM_Error          CurrentGetOperatorNameError;
 GSM_Network        *CurrentGetOperatorNameNetwork;
 GSM_Error          CurrentSetOperatorNameError;
+#endif /* UCLINUX */
 
 GSM_Error          CurrentGetIMEIError;
 
 GSM_Error          CurrentGetHWError;
 
+#ifndef UCLINUX
 unsigned char      CurrentPPS[4];
 GSM_Error          CurrentProductProfileSettingsError;
 
@@ -186,9 +204,11 @@
 GSM_BinRingtone    *CurrentGetBinRingtone=NULL;
 
 GSM_Error          CurrentRingtoneError;
+#endif /* UCLINUX */
 
 GSM_Error          CurrentMagicError;
 
+#ifndef UCLINUX
 GSM_Error          CurrentSimlockInfoError;
 GSM_AllSimlocks    *CurrentSimLock;
 
@@ -203,6 +223,7 @@
 GSM_CallDivert    *CurrentCallDivert;
 
 char              *CurrentManufacturer;
+#endif /* UCLINUX */
 
 /* This is the connection type used in gnokii. */
 GSM_ConnectionType CurrentConnectionType;
@@ -222,8 +243,13 @@
 
 bool CurrentRequestTerminate;
 
+#ifndef UCLINUX
 bool CurrentDisableKeepAlive;
+#endif /* UCLINUX */
 
+#ifdef UCLINUX
+static
+#endif /* UCLINUX */
 bool CheckModel (GSM_Information InfoToCheck, char *model, GSM_ConnectionType connection) {
 
   bool found_match=false;
@@ -231,6 +257,7 @@
   if (strstr(InfoToCheck.FBUSModels, model) != NULL) {
     if (connection==GCT_FBUS) found_match=true;
   }
+#ifndef UCLINUX
   if (strstr(InfoToCheck.MBUSModels, model) != NULL) {
     if (connection==GCT_MBUS) found_match=true;
   }
@@ -252,10 +279,13 @@
   if (strstr(InfoToCheck.FBUS3110Models, model) != NULL) {
     if (connection==GCT_FBUS3110) found_match=true;
   }
+#endif /* UCLINUX */
 
   return found_match;
 }
  
+#ifndef UCLINUX
+
 GSM_Error TryNewNokia(char *model, char *device, char *initlength, GSM_ConnectionType connection, void (*rlp_callback)(RLP_F96Frame *frame)) {
   int InitLength;
   int count;
@@ -303,6 +333,7 @@
   while (N6110_GetModel(phonemodel) != GE_NONE)
     sleep(1);
 
+#ifndef UCLINUX
   if (!strcmp(phonemodel,"NPE-3") || !strcmp(phonemodel,"NSE-5") || 
       !strcmp(phonemodel,"NHM-3"))
   {
@@ -314,9 +345,14 @@
     GSM_LinkOK = &CurrentLinkOK;
     return GE_NONE;
   }
+#endif /* UCLINUX */
 
   return GE_NONE;
 }
+#endif /* UCLINUX */
+
+extern GSM_Information N6110_Information;
+extern GSM_Functions   N6110_Functions;
 
 GSM_Error GSM_Initialise(char *model, char *device, char *initlength, GSM_ConnectionType connection, void (*rlp_callback)(RLP_F96Frame *frame), char* SynchronizeTime)
 {
@@ -324,29 +360,38 @@
   
   GSM_ConnectionType connection2;
 
+#ifndef UCLINUX
   struct tm *now;
   time_t nowh;
   GSM_DateTime Date;
+#endif /* UCLINUX */
   GSM_Error error;
   
   connection2=connection;
 
   CurrentRLP_RXCallback = rlp_callback;
   CurrentCallPassup=NULL;
+#ifndef UCLINUX
   CurrentCallDivert=NULL;
+#endif /* UCLINUX */
   CurrentPhonebookEntry=NULL;
+#ifndef UCLINUX
   CurrentNetworkInfo = NULL;
   CurrentGetBitmap=NULL;
   CurrentPlayToneError=GE_UNKNOWN;
   strcpy(CurrentIncomingCall," ");
   CurrentGetBinRingtone=NULL;
   CurrentNetworkInfo=NULL;
+#endif /* UCLINUX */
   CurrentRequestTerminate=false;
+#ifndef UCLINUX
   CurrentDisableKeepAlive=false;
   CurrentCalendarNotesInfo.HowMany=2000;
   CurrentSMSMessage=NULL;
+#endif /* UCLINUX */
   CurrentMagicError = GE_BUSY;  
   
+#ifndef UCLINUX
   if (!strcmp(model,"auto")) {
 
     /* For now */
@@ -447,7 +492,10 @@
 
       usleep(50);
 
-    } else {
+  } else
+#endif /* UCLINUX */
+		{
+#ifndef UCLINUX
 #ifdef DEBUG
       if (CheckModel (Nsniff_Information, model, connection)) {
         /* Set pointers to relevant addresses */
@@ -465,6 +513,7 @@
         GSM_LinkOK = &CurrentLinkOK;
         found_match=true;
       }
+#endif /* UCLINUX */
       if (CheckModel (N6110_Information, model, connection)) {
         /* Set pointers to relevant addresses */
         GSM = &N6110_Functions;
@@ -472,6 +521,7 @@
         GSM_LinkOK = &CurrentLinkOK;
         found_match=true;
       }
+#ifndef UCLINUX
       if (CheckModel (N7110_Information, model, connection)) {
         /* Set pointers to relevant addresses */
         GSM = &N7110_Functions;
@@ -486,10 +536,12 @@
         GSM_LinkOK = &CurrentLinkOK;
         found_match=true;
       }
+#endif /* UCLINUX */
 
       if (found_match) {
         switch (connection) {
           case GCT_FBUS    : Protocol = &FBUS_Functions;    break;
+#ifndef UCLINUX
           case GCT_Infrared: Protocol = &FBUS_Functions;    break;
           case GCT_Tekram  : Protocol = &FBUS_Functions;    break;
           case GCT_DLR3    : Protocol = &FBUS_Functions;    break;
@@ -497,16 +549,20 @@
           case GCT_Irda    : Protocol = &FBUSIRDA_Functions;break;
           case GCT_AT      : Protocol = &AT_Functions;      break;
           case GCT_FBUS3110: Protocol = &FBUS3110_Functions;break;
+#endif /* UCLINUX */
         }
       } else
         return GE_NOTSUPPORTED;
     }
+#ifndef UCLINUX
   }
+#endif /* UCLINUX */
 
     
   /* Now call model specific initialisation code. */
   error=(GSM->Initialise(device, initlength, connection2, rlp_callback));
 
+#ifndef UCLINUX
   /* RTH: FIXME: second try for Irda (6210 only?)*/
   if ( error!=GE_NONE && connection == GCT_Irda)
   {
@@ -516,7 +572,9 @@
    device_close();
    error=(GSM->Initialise(device, initlength, connection2, rlp_callback));
   }
+#endif /* UCLINUX */
 
+#ifndef UCLINUX
   if (error==GE_NONE && !strcmp(SynchronizeTime,"yes"))
   {
     nowh=time(NULL);
@@ -547,10 +605,13 @@
     /* FIXME: Error checking should be here. */
     GSM->SetDateTime(&Date);
   }
+#endif /* UCLINUX */
 
   return error;
 }
 
+#ifndef UCLINUX
+
 GSM_Error Unimplemented(void)
 {
 	return GE_NOTIMPLEMENTED;
@@ -561,6 +622,8 @@
 	return GE_NOTSUPPORTED;
 }
 
+#endif /* UCLINUX */
+
 /* Applications should call N6110_Terminate to shut down the N6110 thread and
    close the serial port. */
 void NULL_Terminate(void)
@@ -626,6 +689,7 @@
 
   GSM_ConnectionType connection=GCT_FBUS;
 
+#ifndef UCLINUX
   if (!strcmp(Connection, "irda"))     connection=GCT_Irda;
   if (!strcmp(Connection, "infrared")) connection=GCT_Infrared;
   if (!strcmp(Connection, "mbus"))     connection=GCT_MBUS;
@@ -633,6 +697,7 @@
   if (!strcmp(Connection, "fbus3110")) connection=GCT_FBUS3110;
   if (!strcmp(Connection, "at"))       connection=GCT_AT;
   if (!strcmp(Connection, "tekram210"))connection=GCT_Tekram;
+#endif /* UCLINUX */
   
   return connection;
 }
@@ -646,7 +711,7 @@
     char *name;
   } GSM_MTStrings;
 
-  GSM_MTStrings mystring[] = {
+static  GSM_MTStrings mystring[] = {
     {GMT_ME,"ME"},
     {GMT_SM,"SM"},
     {GMT_FD,"FD"},
@@ -679,7 +744,7 @@
     char *name;
   } GSM_MTStrings;
 
-  GSM_MTStrings mystring[] = {
+static  GSM_MTStrings mystring[] = {
     {GMT_ME,"ME"},
     {GMT_SM,"SM"},
     {GMT_FD,"FD"},
@@ -743,7 +808,7 @@
 {""    ,""     ,{      0,       0,        0,         0,     0,       0,     0,        0,      0,       0,     0,      0,        0,       0,       0,        0,    0, 0}}
 };
 
-OnePhoneModel *GetPhoneModelData (const char *num)
+static OnePhoneModel *GetPhoneModelData (const char *num)
 {
 	register int i = 0;
 
@@ -775,6 +840,7 @@
   return (GetPhoneModelData(model)->features[num]);
 }
 
+#ifndef UCLINUX
 int LogAvailable=-1; //-1 not checked earlier, 0 not, 1 yes
 char *logfilename;
 
@@ -839,3 +905,4 @@
 {
   return AppendLog(buffer,strlen(buffer),format);
 }
+#endif /* UCLINUX */
Index: common/gsm-bitmaps.c
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/common/gsm-bitmaps.c,v
retrieving revision 1.1.1.3
retrieving revision 1.1.1.2.2.2
diff -u -r1.1.1.3 -r1.1.1.2.2.2
--- common/gsm-bitmaps.c	28 Feb 2002 02:30:57 -0000	1.1.1.3
+++ common/gsm-bitmaps.c	17 Mar 2002 21:51:18 -0000	1.1.1.2.2.2
@@ -10,6 +10,8 @@
   
 */
 
+#include "config.h"
+
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
Index: common/gsm-calendar.c
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/common/gsm-calendar.c,v
retrieving revision 1.1.1.1
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.1 -r1.1.1.1.2.1
--- common/gsm-calendar.c	18 Feb 2002 02:06:18 -0000	1.1.1.1
+++ common/gsm-calendar.c	25 Feb 2002 02:49:24 -0000	1.1.1.1.2.1
@@ -10,6 +10,8 @@
 
 */
 
+#include "config.h"
+
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
Index: common/gsm-coding.c
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/common/gsm-coding.c,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.2
diff -u -r1.1.1.6 -r1.1.1.1.2.2
--- common/gsm-coding.c	17 Mar 2002 20:35:49 -0000	1.1.1.6
+++ common/gsm-coding.c	28 Feb 2002 02:26:11 -0000	1.1.1.1.2.2
@@ -8,6 +8,8 @@
 
 */
 
+#include "config.h"
+
 #include <stdlib.h>
 #include <string.h>
 
@@ -24,6 +26,9 @@
 #define NUMBER_OF_7_BIT_ALPHABET_ELEMENTS 128
 
 #ifndef USE_NLS        
+
+#ifndef UCLINUX
+
   static unsigned char GSM_DefaultAlphabet[NUMBER_OF_7_BIT_ALPHABET_ELEMENTS] = {
 
 	/* ETSI GSM 03.38, version 6.0.1, section 6.2.1; Default alphabet */
@@ -53,13 +58,15 @@
 	'x',  'y',  'z',  0xe4, 0xf6, 0xf1, 0xfc, 0xe0
   };
 
+#endif /* UCLINUX */
+
   #ifndef WIN32
     /*Simple UNICODE decoding and encoding from/to iso-8859-2
     First version prepared by Martin Kacer <M.Kacer@sh.cvut.cz>
 
     Following table contains triplets:
     first unicode byte, second unicode byte, iso-8859-2 character*/
-    unsigned char unicode_table[][3] =
+    static unsigned char unicode_table[][3] =
     {
 	/* C< D< E< N< R< S< T< Uo Z< */
 	{0x01, 0x0C, 0xC8}, {0x01, 0x0E, 0xCF}, {0x01, 0x1A, 0xCC},
@@ -119,6 +126,8 @@
     };
   #endif
 
+#ifndef UCLINUX
+
 unsigned char EncodeWithDefaultAlphabet(unsigned char value)
 {
 	unsigned char i;
@@ -137,6 +146,11 @@
 	return GSM_DefaultAlphabet[value];
 }
 
+#endif /* UCLINUX */
+
+#ifdef UCLINUX
+static
+#endif /* UCLINUX */
 wchar_t EncodeWithUnicodeAlphabet(unsigned char value)
 {
 	wchar_t retval;
@@ -157,6 +171,9 @@
 	return retval;
 }
 
+#ifdef UCLINUX
+static
+#endif /* UCLINUX */
 unsigned char DecodeWithUnicodeAlphabet(wchar_t value)
 {
 	unsigned char retval;
@@ -177,6 +194,8 @@
 
 #else
 
+#ifndef UCLINUX
+
   /* ETSI GSM 03.38, version 6.0.1, section 6.2.1; Default alphabet */
   unsigned char GSM_DefaultAlphabetUnicode[NUMBER_OF_7_BIT_ALPHABET_ELEMENTS+1][2] =
   {
@@ -259,8 +278,12 @@
 	else return retval;
 }
 
+#endif /* UCLINUX */
+
 #endif
 
+#ifndef UCLINUX
+
 void DecodeDefault (unsigned char* dest, const unsigned char* src, int len)
 {
 	int i;
@@ -279,6 +302,8 @@
 	return;
 }
 
+#endif /* UCLINUX */
+
 void DecodeUnicode (unsigned char* dest, const unsigned char* src, int len)
 {
 	int i;
@@ -304,6 +329,9 @@
 	}
 }
 
+#ifdef UCLINUX
+static
+#endif /* UCLINUX */
 bool EncodeWithUTF8Alphabet(u8 mychar, u8 *ret1, u8 *ret2)
 {
       u8 mychar1,mychar2,mychar3,mychar4;
@@ -334,6 +362,8 @@
       return false;
 }
 
+#ifndef UCLINUX
+
 void DecodeWithUTF8Alphabet(u8 mychar3, u8 mychar4, u8 *ret)
 {
     u8 mychar1, mychar2;
@@ -356,6 +386,8 @@
     j=-1;
 }
 
+#endif /* UCLINUX */
+
 void EncodeUTF8 (unsigned char* dest, const unsigned char* src, int len)
 {
 	int i,j=0,z;
@@ -373,6 +405,8 @@
 	dest[j++]=0;
 }
 
+#ifndef UCLINUX
+
 void DecodeUTF8 (unsigned char* dest, const unsigned char* src, int len)
 {
 	int i=0,j=0;
@@ -471,13 +505,12 @@
 
 unsigned char EncodeWithBCDAlphabet(int value)
 {
-  div_t division;
-
-  division=div(value,10);
-  return ( ( (value-division.quot*10) & 0x0f) << 4) | (division.quot & 0xf);
+  return ((value%10) << 4) | ((value/10) & 0xf);
 }
 
 int DecodeWithBCDAlphabet(unsigned char value)
 {
 	return 10*(value & 0x0f)+(value >> 4);
 }
+
+#endif /* UCLINUX */
Index: common/gsm-datetime.c
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/common/gsm-datetime.c,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.6 -r1.1.1.1.2.1
--- common/gsm-datetime.c	17 Mar 2002 20:35:49 -0000	1.1.1.6
+++ common/gsm-datetime.c	25 Feb 2002 02:49:24 -0000	1.1.1.1.2.1
@@ -8,6 +8,8 @@
 
 */
 
+#include "config.h"
+
 #include <string.h>
 #include <time.h>
 
@@ -15,7 +17,7 @@
 #include "gsm-datetime.h"
 #include "gsm-common.h"
 
-char DayOfWeekChar;
+static char DayOfWeekChar;
 
 /* Based on article in Polish PC-Kurier 8/1998 page 104 */
 /* Archive on http://www.pckurier.pl */
@@ -39,6 +41,8 @@
   return &DayOfWeekChar;
 }
 
+#ifndef UCLINUX
+
 /* GetMachineDateTime ----------------------------------------------------------
 Purpose:    Gets system date and time.
 Use: -
@@ -47,7 +51,7 @@
           time  - System time in the format "hh:mm:ss".
 Return:  -
 ----------------------------------------------------------------------------- */
-void GetMachineDateTime( char nowdate[], char nowtime[] )
+static void GetMachineDateTime( char nowdate[], char nowtime[] )
 {
   struct tm *now;
   time_t nowh;
@@ -75,6 +79,8 @@
   buffer[4] = datetime->Hour;
   buffer[5] = datetime->Minute;
 }
+
+#endif /* UCLINUX */
 
 void DecodeDateTime(unsigned char* buffer, GSM_DateTime *datetime)
 {
Index: common/gsm-networks.c
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/common/gsm-networks.c,v
retrieving revision 1.1.1.7
retrieving revision 1.1.1.2.2.3
diff -u -r1.1.1.7 -r1.1.1.2.2.3
--- common/gsm-networks.c	17 Mar 2002 20:35:41 -0000	1.1.1.7
+++ common/gsm-networks.c	28 Feb 2002 02:26:11 -0000	1.1.1.2.2.3
@@ -10,13 +10,15 @@
 
 */
 
+#include "config.h"
+
 #include <string.h>
 
 #include "gsm-common.h"
 #include "gsm-networks.h"
 #include "gsm-coding.h"
 
-GSM_Country GSM_Countries[] =
+static GSM_Country GSM_Countries[] =
 {
   { "202", "Greece" },
   { "204", "Netherlands" },
@@ -454,7 +456,7 @@
   return GSM_Countries[index].Name;
 }
 
-char *GSM_GetCountryCode(char *CountryName)
+static char *GSM_GetCountryCode(char *CountryName)
 {
 
   int index=0;
Index: common/gsm-phonebook.c
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/common/gsm-phonebook.c,v
retrieving revision 1.1.1.1
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.1 -r1.1.1.1.2.1
--- common/gsm-phonebook.c	18 Feb 2002 02:06:18 -0000	1.1.1.1
+++ common/gsm-phonebook.c	25 Feb 2002 02:49:24 -0000	1.1.1.1.2.1
@@ -10,6 +10,8 @@
   
 */
 
+#include "config.h"
+
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
Index: common/gsm-ringtones.c
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/common/gsm-ringtones.c,v
retrieving revision 1.1.1.7
retrieving revision 1.1.1.2.2.2
diff -u -r1.1.1.7 -r1.1.1.2.2.2
Index: common/gsm-sms.c
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/common/gsm-sms.c,v
retrieving revision 1.1.1.7
retrieving revision 1.1.1.5.2.2
diff -u -r1.1.1.7 -r1.1.1.5.2.2
--- common/gsm-sms.c	17 Mar 2002 20:27:12 -0000	1.1.1.7
+++ common/gsm-sms.c	17 Mar 2002 21:51:18 -0000	1.1.1.5.2.2
@@ -8,6 +8,8 @@
 	
 */
 
+#include "config.h"
+
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
@@ -18,7 +20,7 @@
 #include "gsm-coding.h"
 
 /* User data headers */
-GSM_UDHHeader UDHHeaders[] = {
+static GSM_UDHHeader UDHHeaders[] = {
   { GSM_ConcatenatedMessages, 0x05, "\x00\x03\x01\x00\x00" },
       /* See GSM 03.40 section 9.2.3.24.1 */
   { GSM_DisableVoice,         0x04, "\x01\x02\x00\x00" },
@@ -67,7 +69,8 @@
 
 #define ByteMask ((1 << Bits) - 1)
 
-int GSM_PackSevenBitsToEight(int offset, unsigned char *input, unsigned char *output)
+#ifndef UCLINUX
+static int GSM_PackSevenBitsToEight(int offset, unsigned char *input, unsigned char *output)
 {
         unsigned char *OUT = output; /* Current pointer to the output buffer */
         unsigned char *IN  = input;  /* Current pointer to the input buffer */
@@ -259,7 +262,7 @@
 }
 
 /* See GSM 03.40 section 9.2.3.11 */
-GSM_Error GSM_DecodeSMSDateTime(GSM_DateTime *DT, unsigned char *req)
+static GSM_Error GSM_DecodeSMSDateTime(GSM_DateTime *DT, unsigned char *req)
 {
   DT->Year    = DecodeWithBCDAlphabet(req[0]);
   DT->Month   = DecodeWithBCDAlphabet(req[1]);
@@ -292,7 +295,7 @@
   return GE_NONE;
 }
 
-int GSM_EncodeETSISMSSubmitData(GSM_SMSMessage *SMS, GSM_ETSISMSMessage *ETSI)
+static int GSM_EncodeETSISMSSubmitData(GSM_SMSMessage *SMS, GSM_ETSISMSMessage *ETSI)
 {
   int off,size=0,size2=0,w,i;
 
@@ -347,7 +350,7 @@
       ETSI->TPDCS |= 0x08;
 
 #ifdef DEBUG
-      fprintf(stdout,_("SMS Length is %i\n"),strlen(SMS->MessageText));
+      fprintf(stdout,_("SMS Length is %ld\n"),(long)strlen(SMS->MessageText));
 #endif
 
       EncodeUnicode (ETSI->MessageText+off,SMS->MessageText,strlen(SMS->MessageText));
@@ -825,8 +828,9 @@
 
   return GE_NONE;
 }
+#endif /* UCLINUX */
 
-void GSM_SetDefaultSMSData (GSM_SMSMessage *SMS)
+static void GSM_SetDefaultSMSData (GSM_SMSMessage *SMS)
 {
   struct tm *now;
   time_t nowh;
@@ -891,6 +895,9 @@
    - GSM 03.40 version 6.1.0 Release 1997, section 9.2.3.24
    - Smart Messaging Specification, Revision 1.0.0, September 15, 1997
 */
+#ifdef UCLINUX
+static
+#endif /* UCLINUX */
 GSM_Error EncodeUDHHeader(char *text, GSM_UDH UDHType)
 {
 	int i=0;
@@ -914,7 +921,7 @@
 	return GE_NONE;
 }
 
-int GSM_MakeSinglePartSMS2(GSM_SMSMessage *SMS,
+static int GSM_MakeSinglePartSMS2(GSM_SMSMessage *SMS,
     unsigned char *MessageBuffer,int cur, GSM_UDH UDHType, GSM_Coding_Type Coding){
 
   int j;
Index: common/gsm-wap.c
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/common/gsm-wap.c,v
retrieving revision 1.1.1.1
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.1 -r1.1.1.1.2.1
--- common/gsm-wap.c	18 Feb 2002 02:06:18 -0000	1.1.1.1
+++ common/gsm-wap.c	25 Feb 2002 02:49:24 -0000	1.1.1.1.2.1
@@ -10,6 +10,8 @@
   
 */
 
+#include "config.h"
+
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
Index: common/misc.c
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/common/misc.c,v
retrieving revision 1.1.1.8
retrieving revision 1.1.1.3.2.3
diff -u -r1.1.1.8 -r1.1.1.3.2.3
--- common/misc.c	17 Mar 2002 20:35:42 -0000	1.1.1.8
+++ common/misc.c	17 Mar 2002 21:51:18 -0000	1.1.1.3.2.3
@@ -8,6 +8,8 @@
 
 */
 
+#include "config.h"
+
 #include <string.h>
 #include <ctype.h>
 #include <time.h>
@@ -57,6 +59,8 @@
   } else return -1;
 }
 
+#ifndef UCLINUX
+
 /*
  * like atoi, but of a non-null-terminated string of a specified portion
  */
@@ -68,6 +72,8 @@
   aux[len]=0;
   return( atoi(aux) );
 } 
+
+#endif /* UCLINUX */
 
 /*
  * make hexdump of Message
Index: common/data/at-emulator.c
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/common/data/at-emulator.c,v
retrieving revision 1.1.1.4
retrieving revision 1.1.1.4.2.1
diff -u -r1.1.1.4 -r1.1.1.4.2.1
--- common/data/at-emulator.c	18 Feb 2002 02:06:22 -0000	1.1.1.4
+++ common/data/at-emulator.c	25 Feb 2002 02:49:24 -0000	1.1.1.4.2.1
@@ -14,6 +14,8 @@
   
 */
 
+#include "config.h"
+
 #define		__data_at_emulator_c
 
 
@@ -50,28 +52,32 @@
 extern bool    CommandMode;
 extern int ConnectCount;
 
-char ModelName[80]; /* This seems to be needed to avoid seg-faults */
-char PortName[80];
+static char ModelName[80]; /* This seems to be needed to avoid seg-faults */
+static char PortName[80];
 
 
 	/* Local variables */
-int	PtyRDFD;	/* File descriptor for reading and writing to/from */
-int	PtyWRFD;	/* pty interface - only different in debug mode. */ 
+extern int	PtyRDFD;	/* File descriptor for reading and writing to/from */
+extern int	PtyWRFD;	/* pty interface - only different in debug mode. */ 
+
+static u8	ModemRegisters[MAX_MODEM_REGISTERS];
+static char	CmdBuffer[MAX_CMD_BUFFERS][CMD_BUFFER_LENGTH];
+static int	CurrentCmdBuffer;
+static int	CurrentCmdBufferIndex;
+static bool	VerboseResponse; 	/* Switch betweek numeric (4) and text responses (ERROR) */
+static char    IncomingCallNo;
+static int     MessageFormat;          /* Message Format (text or pdu) */
 
-u8	ModemRegisters[MAX_MODEM_REGISTERS];
-char	CmdBuffer[MAX_CMD_BUFFERS][CMD_BUFFER_LENGTH];
-int	CurrentCmdBuffer;
-int	CurrentCmdBufferIndex;
-bool	VerboseResponse; 	/* Switch betweek numeric (4) and text responses (ERROR) */
-char    IncomingCallNo;
-int     MessageFormat;          /* Message Format (text or pdu) */
+static void	ATEM_ParseAT(char *cmd_buffer);
 
  	/* Current command parser */
-void 	(*Parser)(char *);
+static void 	(*Parser)(char *);
 //void 	(*Parser)(char *) = ATEM_ParseAT; /* Current command parser */
 
-GSM_MemoryType 	SMSType;
-int 	SMSNumber;
+static GSM_MemoryType 	SMSType;
+static int 	SMSNumber;
+
+static void	ATEM_InitRegisters(void);
 
 	/* If initialised in debug mode, stdin/out is used instead
 	   of ptys for interface. */
@@ -112,7 +118,7 @@
 }
 
 	/* Initialise the "registers" used by the virtual modem. */
-void	ATEM_InitRegisters(void) 
+static void	ATEM_InitRegisters(void) 
 {
 
 	ModemRegisters[REG_RINGATA] = 0;
@@ -137,6 +143,7 @@
 	}
 }
 
+static void	ATEM_StringOut(char *buffer);
 
     /* Handler called when characters received from serial port.
        calls state machine code to process it. */
@@ -177,9 +184,13 @@
 	}
 }     
 
+static bool	ATEM_CommandPlusC(char **buf);
+static bool	ATEM_CommandPlusG(char **buf);
+static int		ATEM_GetNum(char **p);
+static void	ATEM_ParseSMS(char *cmd_buffer);
 
 	/* Parser for standard AT commands.  cmd_buffer must be null terminated. */
-void	ATEM_ParseAT(char *cmd_buffer)
+static void	ATEM_ParseAT(char *cmd_buffer)
 {
 	char *buf;
 	char number[30];
@@ -365,8 +376,10 @@
 	return;
 }
 
+static void	ATEM_ParseDIR(char *cmd_buffer);
+
 	/* Parser for SMS interactive mode */
-void	ATEM_ParseSMS(char *buff)
+static void	ATEM_ParseSMS(char *buff)
 {
 	if (!strcasecmp(buff, "HELP")) {
 		ATEM_StringOut(_("\n\rThe following commands work...\n\r"));
@@ -391,7 +404,7 @@
 }
 
 	/* Parser for DIR sub mode of SMS interactive mode. */
-void	ATEM_ParseDIR(char *buff)
+static void	ATEM_ParseDIR(char *buff)
 {
 	switch (toupper(*buff)) {
 		case 'P':
@@ -415,7 +428,7 @@
  
 	/* Handle AT+C commands, this is a quick hack together at this
 	   stage. */
-bool	ATEM_CommandPlusC(char **buf)
+static bool	ATEM_CommandPlusC(char **buf)
 {
 	float		rflevel;
 	GSM_RFUnits	rfunits = GRF_CSQ;
@@ -515,7 +528,7 @@
 		switch (**buf) {
 		case '=':
 			buf[0]++;
-			sscanf(*buf, "%d", &index);
+			index = atoi(*buf);
 			buf[0] += strlen(*buf);
 
 			error = ATEM_ReadSMS(index, SMSType, &message);
@@ -599,7 +612,7 @@
 }
 
 	/* AT+G commands.  Some of these responses are a bit tongue in cheek... */
-bool	ATEM_CommandPlusG(char **buf)
+static bool	ATEM_CommandPlusG(char **buf)
 {
 	char		buffer[MAX_LINE_LENGTH];
 
@@ -685,7 +698,7 @@
 
 	/* Get integer from char-pointer, set pointer to end of number
 	   stolen basically verbatim from ISDN code.  */
-int ATEM_GetNum(char **p)
+static int ATEM_GetNum(char **p)
 {
 	int v = -1;
 
@@ -699,7 +712,7 @@
 	/* Write string to virtual modem port, either pty or
 	   STDOUT as appropriate.  This function is only used during
 	   command mode - data pump is used when connected.  */
-void	ATEM_StringOut(char *buffer)
+static void	ATEM_StringOut(char *buffer)
 {
 	int		count = 0;
 	char	out_char;
Index: common/data/datapump.c
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/common/data/datapump.c,v
retrieving revision 1.1.1.2
retrieving revision 1.1.1.2.2.1
diff -u -r1.1.1.2 -r1.1.1.2.2.1
--- common/data/datapump.c	18 Feb 2002 02:06:22 -0000	1.1.1.2
+++ common/data/datapump.c	25 Feb 2002 02:49:24 -0000	1.1.1.2.2.1
@@ -14,6 +14,8 @@
 
 */
 
+#include "config.h"
+
 #define		__data_datapump_c
 
 
@@ -27,7 +29,9 @@
 #include <string.h>
 #include <sys/types.h>
 #include <sys/stat.h>
+#ifndef UCLINUX
 #include <sys/poll.h>
+#endif
 #include <unistd.h>
 
 
@@ -43,18 +47,17 @@
 extern bool CommandMode;
 
 /* Local variables */
-int		PtyRDFD;	/* File descriptor for reading and writing to/from */
-int		PtyWRFD;	/* pty interface - only different in debug mode. */ 
-struct pollfd ufds;
-u8 pluscount;
-bool connected;
+extern int		PtyRDFD;	/* File descriptor for reading and writing to/from */
+extern int		PtyWRFD;	/* pty interface - only different in debug mode. */ 
+static u8 pluscount;
+static bool connected;
+
+static int DP_CallBack(RLP_UserInds ind, u8 *buffer, int length);
 
 bool DP_Initialise(int read_fd, int write_fd)
 {
 	PtyRDFD = read_fd;
 	PtyWRFD = write_fd;
-	ufds.fd=PtyRDFD;
-	ufds.events=POLLIN;
 	RLP_Initialise(GSM->SendRLPFrame, DP_CallBack);
 	RLP_SetUserRequest(Attach_Req,true);
 	pluscount=0;
@@ -63,7 +66,7 @@
 }
 
 
-int DP_CallBack(RLP_UserInds ind, u8 *buffer, int length)
+static int DP_CallBack(RLP_UserInds ind, u8 *buffer, int length)
 {
 	int temp;
 
@@ -91,15 +94,23 @@
 	case Reset_Ind:
 		RLP_SetUserRequest(Reset_Resp,true);
 		break;
-	case GetData:
-		if (poll(&ufds,1,0)) {
+	case GetData: {
+		fd_set readfds;
+		struct timeval timeout;
+
+		FD_ZERO(&readfds);
+		FD_SET(PtyRDFD,&readfds);
+		timeout.tv_sec=0;
+		timeout.tv_usec=0;
+
+		if (select(PtyRDFD+1,&readfds,NULL/*writefds*/,NULL/*exceptfds*/,&timeout)) {
 
 			/* Check if the program has closed */
 			/* Return to command mode */
 			/* Note that the call will still be in progress, */
 			/* as with a normal modem (I think) */
 
-			if (ufds.revents!=POLLIN) { 
+			if (!FD_ISSET(PtyRDFD,&readfds)) { 
 				CommandMode=true;
 				/* Set the call passup back to the at emulator */
 				GSM->DialData(NULL,-1,&ATEM_CallPassup);
@@ -137,7 +148,7 @@
 			return temp;
 		}
 		return 0;
-		break;
+		} break;
 
 	default:
 
Index: common/data/rlp-common.c
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/common/data/rlp-common.c,v
retrieving revision 1.1.1.2
retrieving revision 1.1.1.2.2.1
diff -u -r1.1.1.2 -r1.1.1.2.2.1
--- common/data/rlp-common.c	18 Feb 2002 02:06:21 -0000	1.1.1.2
+++ common/data/rlp-common.c	25 Feb 2002 02:49:24 -0000	1.1.1.2.2.1
@@ -16,6 +16,8 @@
 
 */
 
+#include "config.h"
+
 #include <stdio.h>
 #include <string.h>
 #include <ctype.h>
@@ -34,59 +36,64 @@
 
 /* Our state machine which handles all of nine possible states of RLP
    machine. */
-void MAIN_STATE_MACHINE(RLP_F96Frame *frame, RLP_F96Header *header);
+static void MAIN_STATE_MACHINE(RLP_F96Frame *frame, RLP_F96Header *header);
 
 /* This is the type we are just handling. */
-RLP_FrameTypes CurrentFrameType;
+static RLP_FrameTypes CurrentFrameType;
 
 /* Current state of RLP state machine. */
-RLP_State      CurrentState=RLP_S0; /* We start at ADM and Detached */
+static RLP_State      CurrentState=RLP_S0; /* We start at ADM and Detached */
 
 /* Next state of RLP state machine. */
-RLP_State      NextState;
+static RLP_State      NextState;
 
 /* Pointer to Send function that sends frame to phone. */
-bool      (*RLPSendFunction)(RLP_F96Frame *frame, bool out_dtx);
+static bool      (*RLPSendFunction)(RLP_F96Frame *frame, bool out_dtx);
 
 /* Pointer to Passup function which returns data/inds */
-int      (*RLP_Passup)(RLP_UserInds ind, u8 *buffer, int length);
+static int      (*RLP_Passup)(RLP_UserInds ind, u8 *buffer, int length);
 
 
 /* State variables - see GSM 04.22, Annex A, section A.1.2 */
 
-RLP_StateVariable UA_State;
-RLP_StateVariable UI_State;
-RLP_StateVariable Ackn_State;
-RLP_StateVariable Poll_State;
-RLP_StateVariable Poll_xchg;
-RLP_StateVariable SABM_State;
-RLP_StateVariable DISC_State;
-RLP_StateVariable DM_State;  /* FIXME - not handled */
-RLP_StateVariable XI_R_State;
-RLP_StateVariable XID_C_State;
-RLP_StateVariable XID_R_State;
-RLP_StateVariable TEST_R_State;
-
-u8 VR=0;
-u8 VA=0;
-u8 VS=0;
-u8 VD=0;
-u8 DISC_Count;
+static RLP_StateVariable UA_State;
+/*
+static RLP_StateVariable UI_State;
+*/
+static RLP_StateVariable Ackn_State;
+static RLP_StateVariable Poll_State;
+static RLP_StateVariable Poll_xchg;
+static RLP_StateVariable SABM_State;
+static RLP_StateVariable DISC_State;
+static RLP_StateVariable DM_State;  /* FIXME - not handled */
+/*
+static RLP_StateVariable XID_C_State;
+*/
+static RLP_StateVariable XID_R_State;
+/*
+static RLP_StateVariable TEST_R_State;
+*/
+
+static u8 VR=0;
+static u8 VA=0;
+static u8 VS=0;
+static u8 VD=0;
+static u8 DISC_Count;
 
-u8 DTX_VR;
-RLP_FrameTypes DTX_SF;
+static u8 DTX_VR;
+static RLP_FrameTypes DTX_SF;
 
 #define RLP_M 62
 
-RLP_Data R[RLP_M];
-RLP_Data S[RLP_M];
+static RLP_Data R[RLP_M];
+static RLP_Data S[RLP_M];
 
-RLP_StateVariable SABM_State;
-int SABM_Count;
+static RLP_StateVariable SABM_State;
+static int SABM_Count;
 
-RLP_UserRequestStore UserRequests;
+static RLP_UserRequestStore UserRequests;
 
-u8 Poll_Count=0;
+static u8 Poll_Count=0;
 
 /* For now timing is done based on a frame reception rate of 20ms */
 /* Serge has measured it as 18.4ms */
@@ -96,28 +103,28 @@
 /* To set, timer is loaded with RLP_Timeout1_Limit/RLP_T_Scaling. */
 /* Each received frame (including NULLS / errors) any >0 timer is decrease */
 
-int T;
-int T_RCVS[RLP_M];
+static int T;
+static int T_RCVS[RLP_M];
 
-bool UA_FBit=true;
-bool Ackn_FBit=false;
-bool DM_FBit=false;  /* FIXME - not handled */
-bool RRReady=false;
-bool LRReady=true;   /* FIXME - not handled (as if we couldn't keep up with 9600bps :-) */
-bool DISC_PBit=false;
+static bool UA_FBit=true;
+static bool Ackn_FBit=false;
+static bool DM_FBit=false;  /* FIXME - not handled */
+static bool RRReady=false;
+static bool LRReady=true;   /* FIXME - not handled (as if we couldn't keep up with 9600bps :-) */
+static bool DISC_PBit=false;
 
-u8 LastStatus=0xff;   /* Last Status byte */
+static u8 LastStatus=0xff;   /* Last Status byte */
 
 
 /* RLP Parameters. FIXME: Reset these - e.g. when entering state 0 */
 
-u8 RLP_SEND_WS = RLP_M-1;
-u8 RLP_RCV_WS = RLP_M-1;
-u8 RLP_Timeout1_Limit = 55;
-u8 RLP_N2 = 15; /* Maximum number of retransmisions. GSM spec says 6 here, but
-                   Nokia will XID this. */
-u8 RLP_T2=0;
-u8 RLP_VersionNumber=0;
+static u8 RLP_SEND_WS = RLP_M-1;
+static u8 RLP_RCV_WS = RLP_M-1;
+static u8 RLP_Timeout1_Limit = 55;
+static u8 RLP_N2 = 15; /* Maximum number of retransmisions. GSM spec says 6 here, but
+                          Nokia will XID this. */
+static u8 RLP_T2=0;
+static u8 RLP_VersionNumber=0;
 
 
 
@@ -197,7 +204,7 @@
 
 /* Check whether a user event is set */
 
-bool RLP_GetUserRequest(RLP_UserRequests type) {
+static bool RLP_GetUserRequest(RLP_UserRequests type) {
 
 	bool result=false, *x;
 
@@ -230,7 +237,7 @@
 	return result;
 }
 
-void RLP_SetTimer(int *timer)
+static void RLP_SetTimer(int *timer)
 {
 	*timer=(int)(RLP_Timeout1_Limit/RLP_T_Scaling);
 }
@@ -280,7 +287,7 @@
 	return (val <= upper) || (val >= lower);
 }
 
-void RLP_Init_link_vars(void)
+static void RLP_Init_link_vars(void)
 {
 	int i;
   
@@ -305,7 +312,7 @@
 }
 
 
-void RLP_AddRingBufferDataToSlots(void)
+static void RLP_AddRingBufferDataToSlots(void)
 {
 	u8 buffer[24];
 	int size;
@@ -329,9 +336,11 @@
 }
 
 
+#ifndef UCLINUX
+
 /* FIXME: Remove this after finishing. */
 
-void X(RLP_F96Frame *frame) {
+static void X(RLP_F96Frame *frame) {
 
 	int i;
 
@@ -340,9 +349,10 @@
    
 }
 
+#endif /* UCLINUX */
 
  
-void ResetAllT_RCVS(void)
+static void ResetAllT_RCVS(void)
 {
 
 	int i;
@@ -353,7 +363,7 @@
 
 /* This function is used for sending RLP frames to the phone. */
 
-void RLP_SendF96Frame(RLP_FrameTypes FrameType,
+static void RLP_SendF96Frame(RLP_FrameTypes FrameType,
                       bool OutCR, bool OutPF,
                       u8 OutNR, u8 OutNS,
                       u8 *OutData, u8 OutDTX)
@@ -594,6 +604,8 @@
 
 }
 
+static void RLP_DecodeF96Header(RLP_F96Frame *frame, RLP_F96Header *header);
+
 /* Check_input_PDU in Serge's code. */
 
 void RLP_DisplayF96Frame(RLP_F96Frame *frame)
@@ -930,14 +942,14 @@
 
 /* FIXME: real TEST_Handling - we do not handle TEST yet. */
 
-void TEST_Handling() {
+static void TEST_Handling() {
 }
 
 
 
 /* FIXME: better XID_handling - but this will answer a XID command. */
 
-bool XID_Handling (RLP_F96Frame *frame, RLP_F96Header *header) {
+static bool XID_Handling (RLP_F96Frame *frame, RLP_F96Header *header) {
   
 	u8 count;
 	u8 type;
@@ -1026,7 +1038,7 @@
 }
 
 
-bool Send_TXU(RLP_F96Frame *frame, RLP_F96Header *header) {
+static bool Send_TXU(RLP_F96Frame *frame, RLP_F96Header *header) {
 
 #ifdef DEBUG
 	//    fprintf(stdout, _("Send_TXU()\n"));
@@ -1070,7 +1082,7 @@
 
 /* Deliver data */
 
-void RLP_DeliverAllInSeqIF()
+static void RLP_DeliverAllInSeqIF()
 {
 	int i,j;
 
@@ -1098,7 +1110,7 @@
 
 
 /* Mark any missing information frames between VR and Ns*/
-void RLP_MarkMissingIF(u8 Ns)
+static void RLP_MarkMissingIF(u8 Ns)
 {
 	u8 i;
 	for (i=VR; i!=Ns; i=Incr(i)) {
@@ -1109,7 +1121,7 @@
 
 /* Information frame handler */
 
-bool RLP_I_Handler(RLP_F96Frame *frame, RLP_F96Header *header)
+static bool RLP_I_Handler(RLP_F96Frame *frame, RLP_F96Header *header)
 {
 
 	if ((header->CR) && (header->PF))
@@ -1142,7 +1154,7 @@
 
 /* Mark acknowledged send frames */
 
-void RLP_AdvanceVA(u8 Nr)
+static void RLP_AdvanceVA(u8 Nr)
 {
 	while (VA!=Nr) {
 		S[VA].State=_idle;
@@ -1153,7 +1165,7 @@
 
 /* Decrease VS back down to Nr since these have not been acknowledged */
 
-void RLP_DecreaseVS(u8 Nr)
+static void RLP_DecreaseVS(u8 Nr)
 {
 	while (VS!=Nr) {
 		VS=Decr(VS);
@@ -1163,7 +1175,7 @@
 
 /* Supervisory frame handling */
 
-void RLP_S_Handler(RLP_F96Frame *frame, RLP_F96Header *header)
+static void RLP_S_Handler(RLP_F96Frame *frame, RLP_F96Header *header)
 {
 	u8 i;
 
@@ -1219,7 +1231,7 @@
 
 /* Find the first SREJ frame */
 
-bool RLP_SREJSlot(u8 *x)
+static bool RLP_SREJSlot(u8 *x)
 {
 	u8 i;
 
@@ -1235,7 +1247,7 @@
 
 /* Check if any SREJ frames need sending, if not send the next in line */
 
-bool RLP_PrepareDataToTransmit(u8 *p)
+static bool RLP_PrepareDataToTransmit(u8 *p)
 {
 	u8 i;
 
@@ -1258,7 +1270,7 @@
 
 /* Send a SREJ command */
 
-void RLP_SendSREJ(u8 x)
+static void RLP_SendSREJ(u8 x)
 {
 	u8 k;
   
@@ -1298,7 +1310,7 @@
 
 /* Send a command */
 
-void RLP_Send_XX_Cmd(RLP_FrameTypes type)
+static void RLP_Send_XX_Cmd(RLP_FrameTypes type)
 {
 	u8 k;
 
@@ -1336,7 +1348,7 @@
 
 /* Send a Response */
 
-void RLP_Send_XX_Resp(RLP_FrameTypes type)
+static void RLP_Send_XX_Resp(RLP_FrameTypes type)
 {
 	u8 k;
   
@@ -1362,7 +1374,7 @@
 
 /* Decide which frame to use and send it - currently only used in state 4 */
 
-void RLP_SendData()
+static void RLP_SendData()
 {
 	u8 x;
 
@@ -1382,7 +1394,7 @@
 	else RLP_Send_XX_Cmd(RLPFT_S_RNR);
 }
 
-void MAIN_STATE_MACHINE(RLP_F96Frame *frame, RLP_F96Header *header) {
+static void MAIN_STATE_MACHINE(RLP_F96Frame *frame, RLP_F96Header *header) {
 	int i;
 
 	switch (CurrentState) {
@@ -1743,7 +1755,6 @@
 			if(SABM_State!=_idle) printf("[SABM_State %d]",SABM_State);
 			if(DISC_State!=_idle) printf("[DISC_State %d]",DISC_State);
 			if(DM_State!=_idle) printf("[DM_State %d]",DM_State);
-			if(XI_R_State!=_idle) printf("[XI_R_State %d]",XI_R_State);
 			if(XID_C_State!=_idle) printf("[XID_C_State %d]",XID_C_State);
 			if(XID_R_State!=_idle) printf("[XID_R_State %d]",XID_R_State);
 			if(TEST_R_State!=_idle) printf("[TEST_R_State %d]",TEST_R_State);
@@ -1925,7 +1936,9 @@
    exact implementation of section 5.2.2.6, Exchange Identification, XID of
    the GSM specification 04.22. */
 
-void RLP_DisplayXID(u8 *frame) 
+#ifdef RLP_DEBUG
+
+static void RLP_DisplayXID(u8 *frame) 
 {
 
 	int count = 25;  /* Sanity check */
@@ -2005,10 +2018,12 @@
 	return;
 }
 
+#endif /* RLP_DEBUG */
+
 /* Given a pointer to an F9.6 Frame, split data out into component parts of
    header and determine frame type. */
 
-void RLP_DecodeF96Header(RLP_F96Frame *frame, RLP_F96Header *header)
+static void RLP_DecodeF96Header(RLP_F96Frame *frame, RLP_F96Header *header)
 {
 
 	/* Poll/Final bit. */
Index: common/data/rlp-crc24.c
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/common/data/rlp-crc24.c,v
retrieving revision 1.1.1.2
retrieving revision 1.1.1.2.2.1
diff -u -r1.1.1.2 -r1.1.1.2.2.1
--- common/data/rlp-crc24.c	18 Feb 2002 02:06:22 -0000	1.1.1.2
+++ common/data/rlp-crc24.c	25 Feb 2002 02:49:24 -0000	1.1.1.2.2.1
@@ -16,7 +16,7 @@
 
 /* CRC-24 table is used for computation of RLP checksum. */
 
-const u32 CRC24_Table[256] = {
+static const u32 CRC24_Table[256] = {
     0x00000000, 0x00D6A776, 0x00F64557, 0x0020E221, 0x00B78115, 0x00612663,
     0x0041C442, 0x00976334, 0x00340991, 0x00E2AEE7, 0x00C24CC6, 0x0014EBB0,
     0x00838884, 0x00552FF2, 0x0075CDD3, 0x00A36AA5, 0x00681322, 0x00BEB454,
@@ -62,7 +62,7 @@
     0x006D7F0C, 0x00BBD87A, 0x009B3A5B, 0x004D9D2D
 };
 
-void    RLP_CalculateCRC24Polinomial(u8 *data, int length, u32 *polinomial)
+static void    RLP_CalculateCRC24Polinomial(u8 *data, int length, u32 *polinomial)
 {
 
     int     i;
Index: common/data/virtmodem.c
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/common/data/virtmodem.c,v
retrieving revision 1.1.1.2
retrieving revision 1.1.1.2.2.8
diff -u -r1.1.1.2 -r1.1.1.2.2.8
--- common/data/virtmodem.c	18 Feb 2002 02:06:22 -0000	1.1.1.2
+++ common/data/virtmodem.c	14 Mar 2002 19:31:27 -0000	1.1.1.2.2.8
@@ -35,8 +35,10 @@
 #include <sys/types.h>
 #include <sys/stat.h>
 #include <sys/time.h>
+#ifndef UCLINUX
 #include <sys/poll.h>
 #include <pthread.h>
+#endif /* UCLINUX */
 #include <unistd.h>
 
 #include "misc.h"
@@ -49,31 +51,28 @@
 
 	/* Global variables */
 
+
+#define GNOKII_DEV "/var/gnokii-dev"
+
 //extern bool TerminateThread;
-int ConnectCount;
 
 	/* Local variables */
 
 int		PtyRDFD;	/* File descriptor for reading and writing to/from */
 int		PtyWRFD;	/* pty interface - only different in debug mode. */ 
 
-bool	UseSTDIO;	/* Use STDIO for debugging purposes instead of pty */
+static bool	UseSTDIO;	/* Use STDIO for debugging purposes instead of pty */
 bool	CommandMode;
 
-pthread_t		Thread;
-bool			RequestTerminate;
-
+static GSM_Error 	VM_GSMInitialise(char *model, char *port, char *initlength, GSM_ConnectionType connection, char *synchronizetime);
+static int		VM_PtySetup(char *bindir);
 
 	/* If initialised in debug mode, stdin/out is used instead
 	   of ptys for interface. */
-bool	VM_Initialise(char *model,char *port, char *initlength, GSM_ConnectionType connection, char *bindir, bool debug_mode, bool GSMInit,char *synchronizetime)
+bool VM_Initialise(char *model,char *port, char *initlength, GSM_ConnectionType connection, char *bindir, bool debug_mode, bool GSMInit,char *synchronizetime)
 {
-	int		rtn;
-
 	CommandMode = true;
 
-	RequestTerminate = false;
-
 	if (debug_mode == true) {
 		UseSTDIO = true;
 	}
@@ -108,47 +107,62 @@
 		return (false);
 	}
 
-		/* Create and start thread, */
-	rtn = pthread_create(&Thread, NULL, (void *) VM_ThreadLoop, (void *)NULL);
-
-    if (rtn == EAGAIN || rtn == EINVAL) {
-        return (false);
-    }
-	return (true);
+#ifndef UCLINUX
+	/* Create and start thread, */
+	return VM_ThreadLoop();
+#else
+	return true;
+#endif
 }
 
-void	VM_ThreadLoop(void)
+static void    VM_CharHandler(void);
+extern GSM_Error N6110_SendStatusRequest(void);
+
+bool VM_ThreadLoop(void)
 {
 	int res;
-	struct pollfd ufds;
+	fd_set readfds;
+	struct timeval timeout;
 
 		/* Note we can't use signals here as they are already used
 		   in the FBUS code.  This may warrant changing the FBUS
 		   code around sometime to use select instead to free up
 		   the SIGIO handler for mainline code. */
 
-	ufds.fd=PtyRDFD;
-	ufds.events=POLLIN;
-
-	while (!RequestTerminate) {
+	for (;;) {
 	  if (!CommandMode) {
 	    sleep(1);
 	  } else {  /* If we are in data mode, leave it to datapump to get the data */
 
-		res=poll(&ufds,1,500);
+		FD_ZERO(&readfds);
+		FD_SET(PtyRDFD,&readfds);
+		FD_SET(device_portfd,&readfds);
+		timeout.tv_sec=2;
+		timeout.tv_usec=0;/*500*1000;*/
+
+		res = select((device_portfd > PtyRDFD ? device_portfd : PtyRDFD)+1,
+				&readfds,NULL/*writefds*/,NULL/*exceptfds*/,&timeout);
 
 		switch (res) {
 		        case 0: /* Timeout */
+#if 0
+				N6110_SendStatusRequest();
+#endif
 				break;
 
 			case -1:
+				if (errno==EINTR)
+					continue;
 				perror("VM_ThreadLoop - select");
-				exit (-1);
+				return (false);
 
 			default:
-			  if (ufds.revents==POLLIN) {
+			  if (FD_ISSET(PtyRDFD,&readfds))
 			    VM_CharHandler();
-			  } else usleep(500); /* Probably the file has been closed */
+			  if (FD_ISSET(device_portfd,&readfds))
+			    SigHandler(0);
+			  if (!FD_ISSET(PtyRDFD,&readfds) && !FD_ISSET(device_portfd,&readfds))
+			    usleep(500); /* Probably the file has been closed */
 			  break;
 		}
 	  }
@@ -160,34 +174,35 @@
 	   the virtual modem thread */
 void		VM_Terminate(void)
 {
-     
-	/* Request termination of thread */
-	RequestTerminate = true;
-
-	/* Now wait for thread to terminate. */
-	pthread_join(Thread, NULL);
-
 	if (!UseSTDIO) {
 		close (PtyRDFD);
 		close (PtyWRFD);
 	}
 }
 
+static int	VM_GetMasterPty(char **name);
+
 	/* Open pseudo tty interface and (in due course create a symlink
 	   to be /dev/gnokii etc. ) */
 
-int		VM_PtySetup(char *bindir)
+static int		VM_PtySetup(char *bindir)
 {
 	int			err;
+#ifndef UCLINUX
 	char		mgnokiidev[200];
+#endif /* UCLINUX */
 	char		*slave_name;
+#ifndef UCLINUX
 	char		cmdline[200];
+#endif /* UCLINUX */
 
+#ifndef UCLINUX
 	if (bindir) {
 		strncpy(mgnokiidev, bindir, 200);
 		strcat(mgnokiidev, "/");
 	}
 	strncat(mgnokiidev, "mgnokiidev", 200 - strlen(bindir));
+#endif /* UCLINUX */
 
 	if (UseSTDIO) {
 		PtyRDFD = STDIN_FILENO;
@@ -202,22 +217,40 @@
 	}
 	PtyWRFD = PtyRDFD;
 
+#ifndef UCLINUX
 		/* Check we haven't been installed setuid root for some reason
 		   if so, don't create /dev/gnokii */
 	if (getuid() != geteuid()) {
 		fprintf(stderr, _("gnokiid should not be installed setuid root!\n"));
 		return (0);
 	}
+#endif
 
 #ifdef DEBUG
-	fprintf (stderr, _("Slave pty is %s, calling %s to create /dev/gnokii.\n"), slave_name, mgnokiidev);
+	fprintf (stderr, _("Slave pty is %s, calling %s to create \"%s\".\n"), slave_name,
+#ifndef UCLINUX
+			mgnokiidev
+#else /* UCLINUX */
+			"<uClinux>"
+#endif /* UCLINUX */
+			,GNOKII_DEV);
 #endif /* DEBUG */
 
+#ifndef UCLINUX
 		/* Create command line, something line ./mkgnokiidev ttyp0 */
 	sprintf(cmdline, "%s %s", mgnokiidev, slave_name);
 
 		/* And use system to call it. */	
 	err = system (cmdline);
+#else /* UCLINUX */
+
+	/* Remove symlink in case it already exists. Don't care if it fails.  */
+	unlink (GNOKII_DEV);
+
+	/* Create symlink */
+	err = symlink(slave_name, GNOKII_DEV);
+
+#endif /* UCLINUX */
 	
 	return (err);
 
@@ -225,7 +258,7 @@
 
     /* Handler called when characters received from serial port.
        calls state machine code to process it. */
-void    VM_CharHandler(void)
+static void    VM_CharHandler(void)
 {
     unsigned char   buffer[255];
     int             res;
@@ -250,7 +283,7 @@
 }     
 
 	/* Initialise GSM interface, returning GSM_Error as appropriate  */
-GSM_Error 	VM_GSMInitialise(char *model, char *port, char *initlength, GSM_ConnectionType connection, char *synchronizetime)
+static GSM_Error 	VM_GSMInitialise(char *model, char *port, char *initlength, GSM_ConnectionType connection, char *synchronizetime)
 {
 	int 		count=0;
 	GSM_Error 	error;
@@ -289,7 +322,7 @@
    Applications by Troan and Johnson */
 
 
-int	VM_GetMasterPty(char **name) { 
+static int	VM_GetMasterPty(char **name) { 
 
 #ifdef USE_UNIX98PTYS
 	int master, err;
@@ -315,8 +348,11 @@
    /* search for an unused pty */
    for (i=0; i<16 && master <= 0; i++) {
       for (j=0; j<16 && master <= 0; j++) {
-         (*name)[8] = "pqrstuvwxyzPQRST"[i];
-         (*name)[9] = "0123456789abcdef"[j];
+static const char *ptyp8="pqrstuvwxyzPQRST";
+static const char *ptyp9="0123456789abcdef";
+
+         (*name)[8] = ptyp8[i];
+         (*name)[9] = ptyp9[j];
          /* open the master pty */
          if ((master = open(*name, O_RDWR | O_NOCTTY | O_NONBLOCK )) < 0) {
             if (errno == ENOENT) {
Index: common/devices/device.c
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/common/devices/device.c,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.7
diff -u -r1.1.1.6 -r1.1.1.1.2.7
--- common/devices/device.c	17 Mar 2002 20:36:33 -0000	1.1.1.6
+++ common/devices/device.c	17 Mar 2002 21:51:18 -0000	1.1.1.1.2.7
@@ -8,15 +8,15 @@
 
 */
 
+#include "config.h"
+
 #ifndef WIN32
   #include "devices/unixserial.h"
-  #include "devices/unixirda.h"
-  #include "devices/tekram.h"
   #include <sys/ioctl.h>
-  #include <pthread.h>
   #include <termios.h>
   #include <signal.h>
   #include <errno.h>
+  #include <fcntl.h>
 #else
   #include <windows.h>
   #include "devices/winserial.h"
@@ -33,13 +33,15 @@
   #include "mversion.h"
 #endif
 
-char PortDevice[GSM_MAX_DEVICE_NAME_LENGTH]={0x00};
+static char PortDevice[GSM_MAX_DEVICE_NAME_LENGTH]={0x00};
 
-bool duringwrite;
+static bool duringwrite;
 
 #ifndef WIN32
 
+#ifndef UCLINUX
 char *lockfile;
+#endif /* UCLINUX */
 
 //pthread_t Thread;
 #if defined(__svr4__) || defined(__FreeBSD__)
@@ -51,6 +53,8 @@
 #define max_buf_len 128
 #define lock_path "/var/lock/LCK.."
 
+#ifndef UCLINUX
+
 /* Lock the device. Return allocated string with a lock name */
 char *lock_device(const char* port)
 {
@@ -91,7 +95,7 @@
 			else {
 				/* Ascii lockfile. */
 				buf[n] = 0;
-				sscanf(buf, "%d", &pid);
+				pid = atoi(buf);
 			}
 			if (pid > 0 && kill((pid_t)pid, 0) < 0 && errno == ESRCH) {
 				fprintf(stderr, _("Lockfile %s is stale. Overriding it..\n"), lock_file);
@@ -152,16 +156,21 @@
 	return (err + 1);
 }
 
+#endif /* UCLINUX */
+
 /*
  * Structure to store the filedescriptor we use.
  *
  */
-int device_getfd(void)
+#ifdef DEBUG
+static int device_getfd(void)
 {
   return device_portfd;
 }
+#endif /* DEBUG */
 
-int device_open(__const char *__file, int __with_odd_parity) {
+static int device_open(__const char *__file, int __with_odd_parity) {
+#ifndef UCLINUX
   struct CFG_Header *cfg_info;
   char *aux;	
 
@@ -175,14 +184,9 @@
       }
     }
   }
+#endif /* UCLINUX */
   
   switch (CurrentConnectionType) {
-    case GCT_Tekram:
-      device_portfd = tekram_open(__file);
-      break;
-    case GCT_Irda:
-      device_portfd = irda_open();
-      break;
     default:
       device_portfd = serial_opendevice(__file, __with_odd_parity, true, false);
       break;
@@ -198,26 +202,31 @@
   /* Now wait for thread to terminate. */
   //pthread_join(Thread, NULL);
 
+#ifndef UCLINUX
   unlock_device(lockfile);
+#endif /* UCLINUX */
   
   switch (CurrentConnectionType) {
-    case GCT_Tekram: tekram_close(device_portfd); break;
-    case GCT_Irda  :   irda_close(device_portfd); break;
     default        : serial_close(device_portfd); break;
   }
 
   PortDevice[0]=0x00;
 }
 
+#ifndef UCLINUX
+
 void device_reset(void) {
 }
 
+#endif /* UCLINUX */
+
+#ifdef DEBUG
+static void device_dumpserial(void);
+#endif /* DEBUG */
+
 void device_setdtrrts(int __dtr, int __rts)
 {
   switch (CurrentConnectionType) {
-    case GCT_Tekram:
-    case GCT_Irda:
-      break;
     default:
       serial_setdtrrts(device_portfd, __dtr, __rts);
 #ifdef DEBUG
@@ -230,11 +239,6 @@
 void device_changespeed(int __speed)
 {
   switch (CurrentConnectionType) {
-    case GCT_Irda:
-      break;
-    case GCT_Tekram:
-      tekram_changespeed(device_portfd, __speed);
-      break;
     default:
       serial_changespeed(device_portfd, __speed);
 #ifdef DEBUG
@@ -244,11 +248,9 @@
   }
 }
 
-size_t device_read(__ptr_t __buf, size_t __nbytes)
+static size_t device_read(__ptr_t __buf, size_t __nbytes)
 {
   switch (CurrentConnectionType) {
-    case GCT_Tekram: return (tekram_read(device_portfd, __buf, __nbytes)); break;
-    case GCT_Irda  : return (  irda_read(device_portfd, __buf, __nbytes)); break;
     default        : return (serial_read(device_portfd, __buf, __nbytes)); break;
   }
 }
@@ -257,23 +259,26 @@
   u8 buffer[300];
   size_t mysize;
   
-  while (duringwrite) {}
+  while (duringwrite) {
+    fprintf(stderr,"device_write: reentrance violation!\n");
+    _exit(1);
+  }
 
   memcpy(buffer,__buf,__n);
   AppendLog(buffer,__n,true);
 
   duringwrite=true;
   switch (CurrentConnectionType) {
-    case GCT_Irda  : mysize =   irda_write(device_portfd, __buf, __n); break;
-    case GCT_Tekram: mysize = tekram_write(device_portfd, __buf, __n); break;      
     default        : mysize = serial_write(device_portfd, __buf, __n); break;
   }
   duringwrite=false;
+  if (mysize!=__n)
+    fprintf(stderr,"WARNING: device_write(__n=%ld)=%ld\n",(long)__n,(long)mysize);
   return mysize;
 }
 
 #ifdef DEBUG
-void device_dumpserial(void)
+static void device_dumpserial(void)
 {
   int PortFD;
   unsigned int Flags=0;
@@ -290,20 +295,71 @@
 }
 #endif /* DEBUG */
 
+static char SigHandler_buffer[255];
+
 void SigHandler(int status)
 {
-
-  unsigned char buffer[2048];
-
   int count, res;
 
-  res = device_read(buffer, 255);
+  LIVE_DISABLE;
+  LIVE;
+
+  res = device_read(SigHandler_buffer, sizeof(SigHandler_buffer));
 
   for (count = 0; count < res ; count ++) {
-    Protocol->StateMachine(buffer[count]);
+    Protocol->StateMachine(SigHandler_buffer[count]);
   }
+  LIVE_ENABLE;
 }
 
+#ifdef UCLINUX
+void usleep_watchdevice(unsigned long usecs)
+{
+int err;
+fd_set readfds;
+struct timeval target,timeout;
+long timeout_sec,timeout_usec; /* signed! */
+
+  if (gettimeofday(&target/*tv*/,NULL/*tz*/))
+    perror("usleep_watchdevice()/gettimeofday(2) init");
+  target.tv_usec+=usecs%1000000;
+  target.tv_sec +=usecs/1000000 + (target.tv_usec/1000000);
+  target.tv_usec%=1000000;
+
+  for (;;) {
+    if (gettimeofday(&timeout/*tv*/,NULL/*tz*/))
+      perror("usleep_watchdevice()/gettimeofday(2) loop");
+
+    timeout_sec =target.tv_sec -(long)timeout.tv_sec ;
+    timeout_usec=target.tv_usec-(long)timeout.tv_usec;
+
+    if (timeout_usec<0) {
+      timeout_sec--;
+      timeout_usec+=1000000;
+    }
+    if (timeout_sec<0)
+      return;
+
+    timeout.tv_sec =timeout_sec ;
+    timeout.tv_usec=timeout_usec;
+
+    FD_ZERO(&readfds);
+    if (device_portfd>=0)
+      FD_SET(device_portfd,&readfds);
+
+    err=select((device_portfd<0 ? 0 : device_portfd+1),&readfds,NULL,NULL,&timeout);
+    if ( err > 0 ) {
+      if (device_portfd>=0 && FD_ISSET(device_portfd,&readfds)) {
+	/* call singal handler to process incoming data */
+	SigHandler(0);
+      }
+    } else {
+      if (err == -1)
+      perror("Error in SelectLoop");
+    }
+  }
+}
+#endif
 
 #if defined(__svr4__) || defined(__FreeBSD__)
 /* thread for handling incoming data */
@@ -339,12 +395,15 @@
 
   char text[100];
 
+#ifndef UCLINUX
 #if defined(__svr4__) || defined(__FreeBSD__)
   int rtn;
 #else
   struct sigaction sig_io;
 #endif
+#endif /* UCLINUX */
 
+#ifndef UCLINUX
 #ifdef DEBUG
       if ((strstr(GSM_Info->IrdaModels,"decode")!=NULL) &&  (CurrentConnectionType == GCT_Irda))
        {
@@ -352,6 +411,7 @@
          return true;
        }
 #endif 
+#endif /* UCLINUX */
 
   if (PortDevice[0]!=0x00) return true;
 
@@ -376,13 +436,12 @@
   strcpy(text,"Connection ");
   switch (con) {
     case GCT_FBUS    :strcpy(text+strlen(text),"FBUS");break;
-    case GCT_Infrared:strcpy(text+strlen(text),"infrared");break;
-    case GCT_Irda    :strcpy(text+strlen(text),"irda sockets");break;
+#ifndef UCLINUX
     case GCT_MBUS    :strcpy(text+strlen(text),"MBUS");break;
     case GCT_DLR3    :strcpy(text+strlen(text),"DLR3");break;
-    case GCT_Tekram  :strcpy(text+strlen(text),"Tekram");break;
     case GCT_AT      :strcpy(text+strlen(text),"AT");break;
     default          :strcpy(text+strlen(text),"unknown");break;
+#endif /* UCLINUX */
   }
   strcpy(text+strlen(text),"\n");
   AppendLogText(text,false);
@@ -399,6 +458,7 @@
 //    return false;
 //  }
 
+#ifndef UCLINUX
 #if defined(__svr4__) || defined(__FreeBSD__)
 #else
         /* Set up and install handler before enabling async IO on port. */
@@ -406,6 +466,7 @@
         sig_io.sa_flags = 0;
         sigaction (SIGIO, &sig_io, NULL);
 #endif
+#endif /* UCLINUX */
 
     /* Open device. */
     result = device_open(PortDevice, with_odd_parity);
@@ -415,6 +476,7 @@
       return false;
     }
 
+#ifndef UCLINUX
 #if defined(__svr4__) || defined(__FreeBSD__)
     /* create a thread to handle incoming data from mobile phone */
     rtn=pthread_create(&selThread,NULL,(void*)SelectLoop,(void*)NULL);
@@ -423,6 +485,7 @@
       return false;
     }
 #endif
+#endif /* UCLINUX */
 
   return true;
 }
@@ -537,11 +600,8 @@
   strcpy(text,"Connection ");
   switch (con) {
     case GCT_FBUS    :strcpy(text+strlen(text),"FBUS");break;
-    case GCT_Infrared:strcpy(text+strlen(text),"infrared");break;
-    case GCT_Irda    :strcpy(text+strlen(text),"irda sockets");break;
     case GCT_MBUS    :strcpy(text+strlen(text),"MBUS");break;
     case GCT_DLR3    :strcpy(text+strlen(text),"DLR3");break;
-    case GCT_Tekram  :strcpy(text+strlen(text),"Tekram");break;
     case GCT_AT      :strcpy(text+strlen(text),"AT");break;
     default          :strcpy(text+strlen(text),"unknown");break;
   }
Index: common/devices/unixserial.c
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/common/devices/unixserial.c,v
retrieving revision 1.1.1.4
retrieving revision 1.1.1.4.2.3
diff -u -r1.1.1.4 -r1.1.1.4.2.3
--- common/devices/unixserial.c	18 Feb 2002 02:06:29 -0000	1.1.1.4
+++ common/devices/unixserial.c	14 Mar 2002 19:31:27 -0000	1.1.1.4.2.3
@@ -62,10 +62,13 @@
 
 /* Structure to backup the setting of the terminal. */
 
-struct termios serial_termios;
+static struct termios serial_termios;
 
 /* Open the serial port and store the settings. */
 
+#ifdef UCLINUX
+static
+#endif /* UCLINUX */
 int serial_open(__const char *__file, int __oflag) {
 
   int __fd;
@@ -113,6 +116,7 @@
   if (fd < 0) 
     return fd;
 
+#ifndef UCLINUX
   /* Allow process/thread to receive SIGIO */
 
 #if !(__unices__)
@@ -134,6 +138,7 @@
       return(-1);
     }
   }
+#endif /* UCLINUX */
   
   /* Initialise the port settings */
 
@@ -193,6 +198,8 @@
 }
 
 
+#ifndef UCLINUX
+
 int serial_select(int fd, struct timeval *timeout) {
 
   fd_set readfds;
@@ -204,6 +211,8 @@
 
 }
 
+#endif /* UCLINUX */
+
 
 /* Change the speed of the serial device. */
 
@@ -226,19 +235,28 @@
   }
 
 #ifndef SGTTY
+#ifdef DEBUG
+  fprintf(stdout,_("Serial port speed setting: tcgetattr()...\n"));
+#endif /* DEBUG */
   tcgetattr(__fd, &t);
 
   // This is not needed! We set up the speed via cfsetspeed
   //  t.c_cflag &= ~CBAUD;
   //  t.c_cflag |= speed;
 #ifdef DEBUG
+  fprintf(stdout,_("Serial port speed setting: cfsetspeed()...\n"));
+#endif /* DEBUG */
+#ifdef DEBUG
   if (cfsetspeed(&t, speed) == -1)
   	fprintf(stdout,_("Serial port speed setting failed\n"));
 #else
-  cfsetspeed(&t, speed);
+  (void)cfsetspeed(&t, speed);
 #endif
 
-  tcsetattr(__fd, TCSADRAIN, &t);
+#ifdef DEBUG
+  fprintf(stdout,_("Serial port speed setting: tcsetattr()...\n"));
+#endif /* DEBUG */
+  tcsetattr(__fd, TCSANOW, &t);
 #else
   ioctl(__fd, TIOCGETP, &t);
 
@@ -247,12 +265,16 @@
 
   ioctl(__fd, TIOCSETN, &t);
 #endif
+#ifdef DEBUG
+  fprintf(stdout,_("Serial port speed setting done\n"));
+#endif /* DEBUG */
 }
 
 /* Read from serial device. */
 
 size_t serial_read(int __fd, __ptr_t __buf, size_t __nbytes) {
 
+  LIVE;
   return (read(__fd, __buf, __nbytes));
 }
 
@@ -260,6 +282,7 @@
 
 size_t serial_write(int __fd, __const __ptr_t __buf, size_t __n) {
 	
+	LIVE;
 	return (write(__fd, __buf, __n));
 }
 
Index: common/files/cfgreader.c
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/common/files/cfgreader.c,v
retrieving revision 1.1.1.2
retrieving revision 1.1.1.1.2.2
diff -u -r1.1.1.2 -r1.1.1.1.2.2
--- common/files/cfgreader.c	17 Mar 2002 20:27:27 -0000	1.1.1.2
+++ common/files/cfgreader.c	17 Mar 2002 21:51:18 -0000	1.1.1.1.2.2
@@ -27,8 +27,10 @@
 
 #include "files/cfgreader.h"
 
+#ifndef UCLINUX
+
 /* Read configuration information from a ".INI" style file */
-struct CFG_Header *CFG_ReadFile(char *filename)
+static struct CFG_Header *CFG_ReadFile(char *filename)
 {
         FILE *handle;
         char *line;
@@ -169,7 +171,7 @@
 
 /*  Write configuration information to a config file */
 
-int CFG_WriteFile(struct CFG_Header *cfg, char *filename)
+static int CFG_WriteFile(struct CFG_Header *cfg, char *filename)
 {
   /* Not implemented - tricky to do and preserve comments */
 
@@ -209,7 +211,7 @@
 /*  Set the value of a key in a config file.  Return the new value if
     the section/key can be found, else return NULL.  */
 
-char *CFG_Set(struct CFG_Header *cfg, char *section, char *key, 
+static char *CFG_Set(struct CFG_Header *cfg, char *section, char *key, 
                     char *value)
 {
         struct CFG_Header *h;
@@ -287,10 +289,21 @@
 	return cfg_info;
 }
 
+#endif /* UCLINUX */
+
 int CFG_ReadConfig(char **model, char **port, char **initlength,
-               char **connection, char **bindir, char **synchronizetime,
+               char **connection, char **bindir,
 	       bool isgnokiid)
 {
+#ifdef UCLINUX
+
+	*model=strdup(CONFIG_CFG_MODEL);
+	*port=strdup(CONFIG_CFG_PORT);
+	*initlength=strdup(CONFIG_CFG_INITLENGTH);
+	*connection=strdup("fbus");
+	*bindir=NULL;
+
+#else /* UCLINUX */
         struct CFG_Header *cfg_info;
 #ifdef WIN32
         char *DefaultPort            = "com2:";
@@ -300,7 +313,6 @@
         char *DefaultModel           = "auto";
         char *DefaultConnection      = "fbus";
         char *DefaultBindir          = "/usr/local/sbin/";
-	char *DefaultSynchronizeTime = "yes";
 	char *DefaultInitLength      = "30";
 
 	char *section = "global";
@@ -309,7 +321,6 @@
         (char *)*port = DefaultPort;
         (char *)*connection = DefaultConnection;
         (char *)*bindir = DefaultBindir;
-        (char *)*synchronizetime = DefaultSynchronizeTime;
         (char *)*initlength = DefaultInitLength;
 	
 	cfg_info=CFG_FindGnokiirc();
@@ -329,11 +340,9 @@
         (char *)*bindir = CFG_Get(cfg_info, section, "bindir");
         if (!*bindir) (char *)*bindir = DefaultBindir;
 
-        (char *)*synchronizetime = CFG_Get(cfg_info, section, "synchronizetime");
-        if (!*synchronizetime) (char *)*synchronizetime = DefaultSynchronizeTime;
-
         (char *)*initlength = CFG_Get(cfg_info, section, "initlength");
         if (!*initlength) (char *)*initlength = "default";
+#endif /* UCLINUX */
 
         return 0;
 }
Index: common/files/gsm-filetypes.c
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/common/files/gsm-filetypes.c,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.2
diff -u -r1.1.1.6 -r1.1.1.1.2.2
Index: common/files/midifile.c
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/common/files/midifile.c,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.2
diff -u -r1.1.1.6 -r1.1.1.1.2.2
--- common/files/midifile.c	17 Mar 2002 20:35:58 -0000	1.1.1.6
+++ common/files/midifile.c	28 Feb 2002 02:26:11 -0000	1.1.1.1.2.2
@@ -2,6 +2,8 @@
 
 /* embedding modified midifile.h and midifile.c into this file */
 
+#include "config.h"
+
 /***** midifile.h ******/
 
 struct MF {
Index: common/newmodules/n3110.c
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/common/newmodules/n3110.c,v
retrieving revision 1.1.1.2
retrieving revision 1.1.2.1
diff -u -r1.1.1.2 -r1.1.2.1
Index: common/newmodules/n6110.c
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/common/newmodules/n6110.c,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.8
diff -u -r1.1.1.6 -r1.1.1.1.2.8
--- common/newmodules/n6110.c	17 Mar 2002 20:36:18 -0000	1.1.1.6
+++ common/newmodules/n6110.c	17 Mar 2002 21:51:18 -0000	1.1.1.1.2.8
@@ -11,6 +11,8 @@
 
 */
 
+#include "config.h"
+
 /* "Turn on" prototypes in n-6110.h */
 
 #define __n_6110_c 
@@ -39,11 +41,6 @@
    supported by this model of phone. */
 
 
-
-
-
-
-
 /* Here we initialise model specific functions. */
 GSM_Functions N6110_Functions = {
   N6110_Initialise,
@@ -55,6 +52,7 @@
   N6110_GetSpeedDial,
   N6110_SetSpeedDial,
   N6110_GetMemoryStatus,
+#ifndef UCLINUX
   N6110_GetSMSStatus,
   N6110_GetSMSCenter,
   N6110_SetSMSCenter,
@@ -62,22 +60,47 @@
   N6110_DeleteSMSMessage,
   N6110_SendSMSMessage,
   N6110_SaveSMSMessage,
+#else /* UCLINUX */
+  NULL,
+  NULL,
+  NULL,
+  NULL,
+  NULL,
+  NULL,
+  NULL,
+#endif /* UCLINUX */
   N6110_GetRFLevel,
   N6110_GetBatteryLevel,
   N6110_GetPowerSource,
+#ifndef UCLINUX
   N6110_GetDisplayStatus,
   N6110_EnterSecurityCode,
   N6110_GetSecurityCodeStatus,
   N6110_GetSecurityCode,
+#else /* UCLINUX */
+  NULL,
+  NULL,
+  NULL,
+  NULL,
+#endif /* UCLINUX */
   N6110_GetIMEI,
   N6110_GetRevision,
   N6110_GetModel,
+#ifndef UCLINUX
   N6110_GetDateTime,
   N6110_SetDateTime,
   N6110_GetAlarm,
   N6110_SetAlarm,
   N6110_DialVoice,
+#else /* UCLINUX */
+  NULL,
+  NULL,
+  NULL,
+  NULL,
+  NULL,
+#endif /* UCLINUX */
   N6110_DialData,
+#ifndef UCLINUX
   N6110_GetIncomingCallNr,
   N6110_GetNetworkInfo,
   N6110_GetCalendarNote,
@@ -90,11 +113,31 @@
   N6110_SetRingTone,
   N6110_SetBinRingTone,
   N6110_GetBinRingTone,
+#else /* UCLINUX */
+  NULL,
+  NULL,
+  NULL,
+  NULL,
+  NULL,
+  NULL,
+  NULL,
+  NULL,
+  NULL,
+  NULL,
+  NULL,
+  NULL,
+#endif /* UCLINUX */
   N6110_Reset,
+#ifndef UCLINUX
   N6110_GetProfile,
   N6110_SetProfile,
+#else /* UCLINUX */
+  NULL,
+  NULL,
+#endif /* UCLINUX */
   N6110_SendRLPFrame,
   N6110_CancelCall,
+#ifndef UCLINUX
   N6110_PressKey,
   N6110_EnableDisplayOutput,
   N6110_DisableDisplayOutput,
@@ -116,6 +159,29 @@
   N7110_GetWAPSettings,
   N6110_CallDivert,
   N6110_AnswerCall,
+#else /* UCLINUX */
+  NULL,
+  NULL,
+  NULL,
+  NULL,
+  NULL,
+  NULL,
+  NULL,
+  NULL,
+  NULL,
+  NULL,
+  NULL,
+  NULL,  NULL,
+  NULL,
+  NULL,                 //GetCalendarNotesInfo
+  NULL,
+  NULL,
+  NULL,
+  NULL,
+  NULL,
+  NULL,
+  NULL,
+#endif /* UCLINUX */
   N6110_GetManufacturer
 };
 
@@ -147,7 +213,8 @@
   1                      /* Only one alarm available */
 };
 
-const char *N6110_MemoryType_String [] = {
+#ifdef DEBUG
+static const char *N6110_MemoryType_String [] = {
   "", 	/* 0x00 */
   "MT", /* 0x01 */
   "ME", /* 0x02 */
@@ -159,13 +226,16 @@
   "RC", /* 0x08 */
   "MC", /* 0x09 */
 };
+#endif /* DEBUG */
 
 /* Magic bytes from the phone. */
-unsigned char MagicBytes[4] = { 0x00, 0x00, 0x00, 0x00 };
+static unsigned char MagicBytes[4] = { 0x00, 0x00, 0x00, 0x00 };
 
 /* For DisplayOutput */
-char               PhoneScreen[5+1][27+1];
-int                OldX=1000,OldY=0,NewX=0,NewY=0;
+#ifndef UCLINUX
+static char               PhoneScreen[5+1][27+1];
+static int                OldX=1000,OldY=0,NewX=0,NewY=0;
+#endif /* UCLINUX */
 
 void N6110_ReplyEnableExtendedCommands(u16 MessageLength, u8 *MessageBuffer, u8 MessageType) {
 
@@ -359,7 +429,9 @@
   return (GE_NONE);
 }
 
-void N6110_ReplyGetAuthentication(u16 MessageLength, u8 *MessageBuffer, u8 MessageType) {
+static void N6110_ReplyGetAuthentication(u16 MessageLength, u8 *MessageBuffer, u8 MessageType) {
+
+  LIVE;
 
 #if defined WIN32 || !defined HAVE_SNPRINTF
   sprintf(Current_IMEI, "%s", MessageBuffer+9);
@@ -413,7 +485,7 @@
    supported" and some functions will not be available for use.
 
    The specification of the protocol is not publicly available, no comment. */
-void N6110_GetNokiaAuth(unsigned char *Imei, unsigned char *MagicBytes, unsigned char *MagicResponse)
+static void N6110_GetNokiaAuth(unsigned char *Imei, unsigned char *MagicBytes, unsigned char *MagicResponse)
 {
 
   int i, j, CRC=0;
@@ -501,7 +573,7 @@
   }
 }
 
-GSM_Error N6110_Authentication()
+static GSM_Error N6110_Authentication()
 {
   unsigned char connect1[] = {N6110_FRAME_HEADER, 0x0d, 0x00, 0x00, 0x02};
   unsigned char connect2[] = {N6110_FRAME_HEADER, 0x20, 0x02};
@@ -524,6 +596,14 @@
   
   0x00, 0x00, 0x00, 0x00};
 
+  unsigned char req3_55[]  = { N6110_FRAME_HEADER, 0x42,0x05,0x01,
+			       0x07,0xa2,0x88,0x81,0x21,0x55,0x63,0xa8,0x00,0x00,
+			       0x07,0xa3,0xb8,0x81,0x20,0x15,0x63,0x80 };
+  unsigned char req3[]     = { N6110_FRAME_HEADER, 0x42,0x05,0x01,
+			       0x07,0xa2,0x88,0x81,0x21,0x15,0x63,0xa8,0x00,0x00,
+			       0x07,0xa3,0xb8,0x81,0x20,0x15,0x63,0x80 };
+  unsigned char unknown_05[] = {N6110_FRAME_HEADER, 0x05};
+
 #ifdef DEBUG
   fprintf(stdout,_("Making authentication!\n"));
 #endif
@@ -532,15 +612,23 @@
   usleep(100); Protocol->SendMessage(5, 0x02, connect2);
   usleep(100); Protocol->SendMessage(7, 0x02, connect3);
       
+  usleep(100); Protocol->SendMessage(sizeof(req3_55), 0x01, req3_55);	/* Lace */
+
   CurrentMagicError = GE_BUSY;
 
   usleep(100); Protocol->SendMessage(4, 0x64, connect4);
+
+  usleep(100); Protocol->SendMessage(sizeof(req3_55), 0x01, req3_55);	/* Lace */
+  usleep(100); Protocol->SendMessage(sizeof(req3), 0x01, req3);	/* Lace */
+
   if (NULL_WaitUntil(50,&CurrentMagicError)!=GE_NONE) return GE_TIMEOUT;
 
   N6110_GetNokiaAuth(Current_IMEI, MagicBytes, magic_connect+4);
 
   Protocol->SendMessage(45, 0x64, magic_connect);
 
+  usleep(100); Protocol->SendMessage(4, 0x04, unknown_05); /* Lace */
+
 #ifdef DEBUG
   fprintf(stdout,_("End of authentication!\n"));
 #endif
@@ -554,7 +642,9 @@
                           void (*rlp_callback)(RLP_F96Frame *frame))
 {
   unsigned char init_char = N6110_SYNC_BYTE;
+#ifndef UCLINUX
   unsigned char end_init_char = N6110_IR_END_SYNC_BYTE;
+#endif /* UCLINUX */
 
   int count;
   int InitLength;
@@ -565,6 +655,7 @@
   }
 
   switch (CurrentConnectionType) {
+#ifndef UCLINUX
     case GCT_Irda:
     case GCT_MBUS:
       /* We don't think about authentication in Irda, because
@@ -580,16 +671,20 @@
 
       CurrentLinkOK = true;                                 
       break;
+#endif /* UCLINUX */
       
     case GCT_FBUS:
+#ifndef UCLINUX
     case GCT_Infrared:
     case GCT_Tekram:
+#endif /* UCLINUX */
       InitLength = atoi(initlength);
 
       if ((strcmp(initlength, "default") == 0) || (InitLength == 0)) {
         InitLength = 250;	/* This is the usual value, lower may work. */
       }
 
+#ifndef UCLINUX
       if (CurrentConnectionType==GCT_Infrared ||
           CurrentConnectionType==GCT_Tekram) {
 #ifdef DEBUG
@@ -597,6 +692,7 @@
 #endif
         device_changespeed(9600);
       }
+#endif /* UCLINUX */
 
 #ifdef DEBUG
       fprintf(stdout,_("Writing init chars...."));
@@ -606,25 +702,32 @@
       /* Send init string to phone, this is a bunch of 0x55 characters. Timing is
          empirical. */
       for (count = 0; count < InitLength; count ++) {
+#ifndef UCLINUX
         if (CurrentConnectionType!=GCT_Infrared &&
-            CurrentConnectionType!=GCT_Tekram)         usleep(100);
+            CurrentConnectionType!=GCT_Tekram)
+#endif /* UCLINUX */
+					usleep(100);
         Protocol->WritePhone(1,&init_char);
       }
 
+#ifndef UCLINUX
       if (CurrentConnectionType==GCT_Infrared ||
           CurrentConnectionType==GCT_Tekram)      {
         Protocol->WritePhone(1,&end_init_char);
         usleep(200000);
       }
+#endif /* UCLINUX */
 
 #ifdef DEBUG
       fprintf(stdout,_("Done\n"));  
 #endif
 
+#ifndef UCLINUX
       if (CurrentConnectionType==GCT_Infrared ||
           CurrentConnectionType==GCT_Tekram)      {
         device_changespeed(115200);    
       }
+#endif /* UCLINUX */
 
       N6110_SendStatusRequest();
     
@@ -636,7 +739,12 @@
          After making it phone display "Accessory connected"
          and probably give access to some function (I'm not too sure about it !)
          Anyway, I make it now for N51xx/61xx */
-      if (GetModelFeature (FN_AUTHENTICATION)!=0) {
+#if 1
+      if (GetModelFeature (FN_AUTHENTICATION)!=0)
+#else
+      if (0/*Lace-hack:GetModelFeature (FN_AUTHENTICATION)!=0*/)
+#endif
+	{
         if (N6110_Authentication()!=GE_NONE) return GE_TIMEOUT;
       } else {        /* No authentication */
         if (N6110_SendIMEIFrame()!=GE_NONE) return GE_TIMEOUT;    
@@ -679,6 +787,8 @@
    return (result);
 }
 
+#ifndef UCLINUX
+
 void N6110_ReplyCallDivert(u16 MessageLength, u8 *MessageBuffer, u8 MessageType) {
 
   switch (MessageBuffer[3]) {
@@ -999,12 +1109,17 @@
   return NULL_SendMessageSequence
     (50, &CurrentResetPhoneSettingsError, 5, 0x40, req);  
 }
+
+#endif /* UCLINUX */
+
 GSM_Error N6110_GetManufacturer(char *manufacturer)
 {
 	strcpy (manufacturer, "Nokia");
 	return (GE_NONE);
 }
 
+#ifndef UCLINUX
+
 GSM_Error N6110_GetVoiceMailbox ( GSM_PhonebookEntry *entry)
 {
   unsigned char req[] = {N6110_FRAME_HEADER, 0x01, 0x00, 0x00, 0x00};
@@ -1105,7 +1220,9 @@
     (20, &CurrentSetOperatorNameError, 8+strlen(operator->Name), 0x40, req);
 }
 
-void N6110_ReplyGetMemoryStatus(u16 MessageLength, u8 *MessageBuffer, u8 MessageType) {
+#endif /* UCLINUX */
+
+static void N6110_ReplyGetMemoryStatus(u16 MessageLength, u8 *MessageBuffer, u8 MessageType) {
 
   switch (MessageBuffer[3]) {
 
@@ -1175,6 +1292,8 @@
   return error;
 }
 
+#ifndef UCLINUX
+
 void N6110_ReplyGetNetworkInfo(u16 MessageLength, u8 *MessageBuffer, u8 MessageType) {
 
   GSM_NetworkInfo NullNetworkInfo;
@@ -1797,6 +1916,8 @@
   return (GE_NONE);
 }
 
+#endif /* UCLINUX */
+
 bool N6110_SendRLPFrame(RLP_F96Frame *frame, bool out_dtx)
 {
   u8 req[60] = { 0x00, 0xd9 };
@@ -1812,6 +1933,8 @@
   return (Protocol->SendFrame(32, 0xf0, req));
 }
 
+#ifndef UCLINUX
+
 void N6110_ReplyGetCalendarNote(u16 MessageLength, u8 *MessageBuffer, u8 MessageType) {
 
   int i, j;
@@ -2142,7 +2265,9 @@
   return NULL_SendMessageSequence (20, &CurrentCalendarNoteError, 5, 0x13, req);
 }
 
-void N6110_ReplyRFBatteryLevel(u16 MessageLength, u8 *MessageBuffer, u8 MessageType) {
+#endif /* UCLINUX */
+
+static void N6110_ReplyRFBatteryLevel(u16 MessageLength, u8 *MessageBuffer, u8 MessageType) {
 
 #ifdef DEBUG
     fprintf(stdout, _("Message: Phone status received:\n"));
@@ -2201,8 +2326,10 @@
     
   if (GetModelFeature (FN_NOPOWERFRAME)==F_NOPOWER) {
 
+#ifndef UCLINUX
     if (N6110_NetMonitor(1, screen)!=GE_NONE)
       return GE_INTERNALERROR;
+#endif /* UCLINUX */
     
     rf_level=4;
     
@@ -2272,8 +2399,10 @@
 
   if (GetModelFeature (FN_NOPOWERFRAME)==F_NOPOWER) {
 
+#ifndef UCLINUX
     if (N6110_NetMonitor(23, screen)!=GE_NONE)
       return GE_NOLINK;
+#endif /* UCLINUX */
     
     batt_level=4;
     
@@ -2330,8 +2459,10 @@
 
   if (GetModelFeature (FN_NOPOWERFRAME)==F_NOPOWER) {    
 
+#ifndef UCLINUX
     if (N6110_NetMonitor(20, screen)!=GE_NONE)
       return GE_NOLINK;
+#endif /* UCLINUX */
     
     CurrentPowerSource=GPS_ACDC;
 
@@ -2361,7 +2492,9 @@
   }
 }
 
-void N6110_ReplyGetDisplayStatus(u16 MessageLength, u8 *MessageBuffer, u8 MessageType) {
+#ifndef UCLINUX
+
+static void N6110_ReplyGetDisplayStatus(u16 MessageLength, u8 *MessageBuffer, u8 MessageType) {
 
   int i;
 
@@ -2430,6 +2563,8 @@
     (20, &CurrentDialVoiceError, 4+strlen(Number)+1, 0x40, req);  
 }
 
+#endif /* UCLINUX */
+
 /* Dial a data call - type specifies request to use: 
      type 0 should normally be used
      type 1 should be used when calling a digital line - corresponds to ats35=0
@@ -2446,9 +2581,11 @@
 				     0x02,0x01,0x05,0x81,0x01,0x00,0x00,0x01,0x02,0x0a,
 				     0x07,0xa1,0x88,0x89,0x21,0x15,0x63,0xa0,0x00,0x06,
 				     0x88,0x90,0x21,0x48,0x40,0xbb };
+#if 0
 	unsigned char req2[]     = { N6110_FRAME_HEADER, 0x42,0x05,0x01,
 				     0x07,0xa2,0xc8,0x81,0x21,0x15,0x63,0xa8,0x00,0x00,
 				     0x07,0xa3,0xb8,0x81,0x20,0x15,0x63,0x80,0x01,0x60 };
+#endif
 	unsigned char req3[]     = { N6110_FRAME_HEADER, 0x42,0x05,0x01,
 				     0x07,0xa2,0x88,0x81,0x21,0x15,0x63,0xa8,0x00,0x00,
 				     0x07,0xa3,0xb8,0x81,0x20,0x15,0x63,0x80 };
@@ -2464,6 +2601,8 @@
 
 	switch (type) {
 	case 0:
+		usleep(100); Protocol->SendMessage(sizeof(req3), 0x01, req3);	/* Lace */
+		usleep(100);
 		req_end = req_end0;
 		size = sizeof(req_end0);
 		break;
@@ -2494,14 +2633,18 @@
 	Protocol->SendMessage(5 + size + strlen(Number), 0x01, req);
         usleep(1000000);
 
+#if 0
 	if (type != 1) {
           Protocol->SendMessage(26, 0x01, req2);
 	  usleep(1000000);
         }
+#endif
 
 	return (GE_NONE);
 }
 
+#ifndef UCLINUX
+
 GSM_Error N6110_GetIncomingCallNr(char *Number)
 {
 
@@ -2513,6 +2656,8 @@
     return GE_BUSY;
 }
 
+#endif /* UCLINUX */
+
 GSM_Error N6110_CancelCall(void)
 {
 //  This frame & method works only on 61xx/51xx
@@ -2532,6 +2677,8 @@
   return NULL_SendMessageSequence (20, &CurrentDialVoiceError, 4, 0x40, req);   
 }  
 
+#ifndef UCLINUX
+
 void N6110_ReplyEnterSecurityCode(u16 MessageLength, u8 *MessageBuffer, u8 MessageType) {
     
   switch(MessageBuffer[3]) {
@@ -2991,6 +3138,8 @@
   return GE_NONE;
 }
 
+#endif /* UCLINUX */
+
 GSM_Error N6110_GetIMEI(char *imei)
 {
   if (strlen(Current_IMEI)>0) {
@@ -3012,7 +3161,7 @@
     return (GE_TRYAGAIN);
 }
 
-GSM_Error N6110_GetModel(char *model)
+static GSM_Error N6110_GetModel(char *model)
 {
   if (strlen(Current_Model)>0) {
     strncpy (model, Current_Model, GSM_MAX_MODEL_LENGTH);
@@ -3022,6 +3171,8 @@
     return (GE_TRYAGAIN);
 }
 
+#ifndef UCLINUX
+
 void N6110_ReplySetDateTime(u16 MessageLength, u8 *MessageBuffer, u8 MessageType) {
 
   switch (MessageBuffer[4]) {
@@ -3112,7 +3263,9 @@
     (50, &CurrentSetAlarmError, 11, msgtype, req);
 }
 
-void N6110_ReplyGetMemoryLocation(u16 MessageLength, u8 *MessageBuffer, u8 MessageType) {
+#endif /* UCLINUX */
+
+static void N6110_ReplyGetMemoryLocation(u16 MessageLength, u8 *MessageBuffer, u8 MessageType) {
 
   /* Hopefully is 64 larger as FB38_MAX* / N6110_MAX* */
   char model[64];
@@ -3146,8 +3299,13 @@
         
     if (GetModelFeature (FN_PHONEBOOK)==F_PBK33SIM ||
         GetModelFeature (FN_PHONEBOOK)==F_PBK33INT) {//pbk with Unicode
+#ifndef UCLINUX
       DecodeUnicode (CurrentPhonebookEntry->Name, MessageBuffer+6, count/2);
       CurrentPhonebookEntry->Name[count/2] = 0x00;
+#else /* UCLINUX */
+      fprintf(stderr,"FATAL ERROR: DecodeUnicode disabled!\n");
+      exit(1);
+#endif /* UCLINUX */
     } else {
       memcpy(CurrentPhonebookEntry->Name, MessageBuffer + 6, count);
       CurrentPhonebookEntry->Name[count] = 0x00;
@@ -3269,7 +3427,7 @@
     (50, &CurrentPhonebookError, 7, 0x03, req);
 }
 
-void N6110_ReplyWritePhonebookLocation(u16 MessageLength, u8 *MessageBuffer, u8 MessageType) {
+static void N6110_ReplyWritePhonebookLocation(u16 MessageLength, u8 *MessageBuffer, u8 MessageType) {
 
   switch (MessageBuffer[3]) {
 
@@ -3317,6 +3475,7 @@
 
   if (GetModelFeature (FN_PHONEBOOK)==F_PBK33INT ||
       GetModelFeature (FN_PHONEBOOK)==F_PBK33SIM) {
+#ifndef UCLINUX
 
      req[6] = strlen(entry->Name)*2;
 
@@ -3330,6 +3489,13 @@
      }
 
      current+=strlen(entry->Name)*2;
+
+#else /* UCLINUX */
+
+     fprintf(stderr,"FATAL ERROR: EncodeUnicode disabled!\n");
+     exit(1);
+
+#endif /* UCLINUX */
   } else {
 
     req[6] = strlen(entry->Name);
@@ -3364,6 +3530,8 @@
     (50, &CurrentPhonebookError, current, 0x03, req);
 }
 
+#ifndef UCLINUX
+
 void N6110_ReplyNetmonitor(u16 MessageLength, u8 *MessageBuffer, u8 MessageType) {
 
   switch(MessageBuffer[3]) {
@@ -3424,7 +3592,9 @@
     (20, &CurrentSendDTMFError, 5+length, 0x01, req);
 }
 
-void N6110_ReplyGetSpeedDial(u16 MessageLength, u8 *MessageBuffer, u8 MessageType) {
+#endif /* UCLINUX */
+
+static void N6110_ReplyGetSpeedDial(u16 MessageLength, u8 *MessageBuffer, u8 MessageType) {
 
   switch (MessageBuffer[3]) {
 
@@ -3474,7 +3644,7 @@
     (20, &CurrentSpeedDialError, 5, 0x03, req);
 }
 
-void N6110_ReplySetSpeedDial(u16 MessageLength, u8 *MessageBuffer, u8 MessageType) {
+static void N6110_ReplySetSpeedDial(u16 MessageLength, u8 *MessageBuffer, u8 MessageType) {
 
   switch (MessageBuffer[3]) {
 
@@ -3520,6 +3690,8 @@
     (20, &CurrentSpeedDialError, 7, 0x03, req);
 }
 
+#ifndef UCLINUX
+
 /* This function finds parts of SMS in frame used in new Nokia phones
    in internal protocols (they're coded according to GSM 03.40), copies them
    to GSM_ETSISMSMessage and calls GSM_DecodeETSISMS to decode
@@ -4515,6 +4687,8 @@
     (50, &CurrentBinRingtoneError, ringtone->length+3, 0x40, req);
 }
 
+#endif /* UCLINUX */
+
 GSM_Error N6110_Reset(unsigned char type)
 {  
   return N6110_EnableExtendedCommands(type);
@@ -4522,7 +4696,10 @@
 
 void N6110_Dispatch0x01Message(u16 MessageLength, u8 *MessageBuffer, u8 MessageType) {
 
-  int tmp, count;
+  int count;
+#ifdef DEBUG
+	int tmp;
+#endif
     	  
   switch (MessageBuffer[3]) {
 
@@ -4573,7 +4750,9 @@
 #endif /* DEBUG */
     
     CurrentCallSequenceNumber=MessageBuffer[4];
+#ifndef UCLINUX
     CurrentIncomingCall[0]='D';
+#endif /* UCLINUX */
     if (CurrentCallPassup) CurrentCallPassup('D');
 
     break;
@@ -4599,7 +4778,9 @@
     fprintf(stdout,_("\n   If know their meaning, GSM specs decribing them, contact with me on marcin-wiacek@topnet.pl. THX\n"));
 #endif /* DEBUG */
 
+#ifndef UCLINUX
     CurrentIncomingCall[0] = ' ';
+#endif /* UCLINUX */
     if (CurrentCallPassup) CurrentCallPassup(' ');
 
     break;
@@ -4633,9 +4814,11 @@
 
     count=MessageBuffer[6];
 
+#ifndef UCLINUX
     CurrentIncomingCall[0] = 0;
     for (tmp=0; tmp <count; tmp++)
       sprintf(CurrentIncomingCall, "%s%c", CurrentIncomingCall, MessageBuffer[7+tmp]);
+#endif /* UCLINUX */
 
     break;
 
@@ -4683,7 +4866,9 @@
     fprintf(stdout, _("   Exact meaning not known yet, sorry :-(\n"));
 #endif /* DEBUG */
 
+#ifndef UCLINUX
     CurrentIncomingCall[0] = ' ';
+#endif /* UCLINUX */
     if (CurrentCallPassup) CurrentCallPassup(' ');
 
     break;
@@ -4694,7 +4879,9 @@
       fprintf(stdout, _("Message: Answer for send DTMF or dial voice command\n"));
 #endif
 
+#ifndef UCLINUX
     if (CurrentSendDTMFError!=GE_NONE) CurrentSendDTMFError=GE_NONE;
+#endif /* UCLINUX */
 
     if (CurrentDialVoiceError!=GE_NONE) CurrentDialVoiceError=GE_NONE;
 
@@ -4711,7 +4898,9 @@
   }
 }
 
-void N6110_Dispatch0x03Message(u16 MessageLength, u8 *MessageBuffer, u8 MessageType) {
+#ifndef UCLINUX
+
+static void N6110_Dispatch0x03Message(u16 MessageLength, u8 *MessageBuffer, u8 MessageType) {
 
   int tmp, count;
     
@@ -4727,7 +4916,7 @@
 
     /*                                        Marcin-Wiacek@TopNet.PL */
     
-#ifdef WIN32
+#if defined(WIN32) || defined(UCLINUX)
     sprintf(Current_IMEI, "%s", MessageBuffer+5);
     sprintf(Current_Model, "%s", MessageBuffer+21);
     sprintf(Current_Revision, "SW%s, HW%s", MessageBuffer+41, MessageBuffer+35);
@@ -4845,7 +5034,7 @@
   }
 }
 
-void N6110_Dispatch0x05Message(u16 MessageLength, u8 *MessageBuffer, u8 MessageType) {
+static void N6110_Dispatch0x05Message(u16 MessageLength, u8 *MessageBuffer, u8 MessageType) {
 
   int tmp, count, length;
   bool issupported;
@@ -5026,7 +5215,7 @@
   }
 }
 
-void N6110_Dispatch0x06Message(u16 MessageLength, u8 *MessageBuffer, u8 MessageType) {
+static void N6110_Dispatch0x06Message(u16 MessageLength, u8 *MessageBuffer, u8 MessageType) {
 
   int tmp;
   unsigned char output[160];
@@ -5073,7 +5262,7 @@
   }
 }
 
-void N6110_Dispatch0x09Message(u16 MessageLength, u8 *MessageBuffer, u8 MessageType) {
+static void N6110_Dispatch0x09Message(u16 MessageLength, u8 *MessageBuffer, u8 MessageType) {
     
   switch (MessageBuffer[3]) {
     
@@ -5098,7 +5287,7 @@
   }
 }
 
-void N6110_Dispatch0x13Message(u16 MessageLength, u8 *MessageBuffer, u8 MessageType) {
+static void N6110_Dispatch0x13Message(u16 MessageLength, u8 *MessageBuffer, u8 MessageType) {
 
   switch(MessageBuffer[3]) {
     
@@ -5118,6 +5307,8 @@
   }
 }
 
+#endif /* UCLINUX */
+
 void N6110_Dispatch0x40Message(u16 MessageLength, u8 *MessageBuffer, u8 MessageType) {
 
   int i;
@@ -5185,10 +5376,12 @@
     AppendLogText("Unknown msg\n",false);      
     break;
 
+#ifndef UCLINUX
   case 0xcf:
 
     N6110_DisplayTestsInfo(MessageBuffer);
     break;
+#endif /* UCLINUX */
       
   default:
 
@@ -5200,7 +5393,9 @@
   }
 }
 
-void N6110_Dispatch0x47Message(u16 MessageLength, u8 *MessageBuffer, u8 MessageType) {
+#ifndef UCLINUX
+
+static void N6110_Dispatch0x47Message(u16 MessageLength, u8 *MessageBuffer, u8 MessageType) {
 
   int count;
   
@@ -5280,6 +5475,8 @@
   }
 }
 
+#endif /* UCLINUX */
+
 void N6110_DispatchACKMessage(u16 MessageLength, u8 *MessageBuffer, u8 MessageType) {
   char buffer[50];
   
@@ -5294,7 +5491,7 @@
   CurrentLinkOK = true;
 }
 
-void N6110_Dispatch0xD0Message(u16 MessageLength, u8 *MessageBuffer, u8 MessageType) {
+static void N6110_Dispatch0xD0Message(u16 MessageLength, u8 *MessageBuffer, u8 MessageType) {
    
 #ifdef DEBUG
   fprintf(stdout, _("Message: The phone is powered on - seq 1.\n"));
@@ -5313,7 +5510,7 @@
   /* We do not need RLP frame parsing to be done when we do not have callback
      specified. */
   if (CurrentRLP_RXCallback == NULL)
-    exit;
+    return;
     
   /* Anybody know the official meaning of the first two bytes?
      Nokia 6150 sends junk frames starting D9 01, and real frames starting
@@ -5346,7 +5543,7 @@
   CurrentRLP_RXCallback(valid ? &frame : NULL);
 }
 
-void N6110_Dispatch0xF4Message(u16 MessageLength, u8 *MessageBuffer, u8 MessageType) {
+static void N6110_Dispatch0xF4Message(u16 MessageLength, u8 *MessageBuffer, u8 MessageType) {
 
 #ifdef DEBUG
   fprintf(stdout, _("Message: The phone is powered on - seq 2.\n"));
@@ -5354,6 +5551,8 @@
 
 }
 
+#ifndef UCLINUX
+
 void N6110_ReplyIncomingSMS(u16 MessageLength, u8 *MessageBuffer, u8 MessageType) {
 
   GSM_SMSMessage NullSMS;
@@ -5382,6 +5581,8 @@
 #endif /* DEBUG */
 }
 
+#endif /* UCLINUX */
+
 void N6110_DispatchMessage(u16 MessageLength, u8 *MessageBuffer, u8 MessageType) {
 
   bool unknown=false;
@@ -5395,6 +5596,7 @@
     N6110_Dispatch0x01Message(MessageLength, MessageBuffer, MessageType);
     break;
 
+#ifndef UCLINUX
   /* SMS handling */
   case 0x02:
     switch (MessageBuffer[3]) {
@@ -5409,6 +5611,7 @@
       default  :unknown=true;break;
     }
     break;
+#endif /* UCLINUX */
 
   /* Phonebook handling */
   case 0x03:
@@ -5423,7 +5626,9 @@
       case 0x18:N6110_ReplyGetSpeedDial(MessageLength,MessageBuffer,MessageType);break;
       case 0x1a:
       case 0x1b:N6110_ReplySetSpeedDial(MessageLength,MessageBuffer,MessageType);break;
+#ifndef UCLINUX
       default  :N6110_Dispatch0x03Message(MessageLength,MessageBuffer,MessageType);break;
+#endif /* UCLINUX */
     }
     break;
 
@@ -5435,6 +5640,7 @@
     }
     break;
       
+#ifndef UCLINUX
   /* Startup Logo, Operator Logo and Profiles. */
   case 0x05:
     switch (MessageBuffer[3]) {
@@ -5549,13 +5755,17 @@
       default  :unknown=true;break;
     }
     break;
+#endif /* UCLINUX */
 
   /* Internal phone functions? */
   case 0x40:
     switch (MessageBuffer[2]) {
       case 0x64:N6110_ReplyEnableExtendedCommands  (MessageLength,MessageBuffer,MessageType);break;
+#ifndef UCLINUX
       case 0x65:N6110_ReplyResetPhoneSettings      (MessageLength,MessageBuffer,MessageType);break;
+#endif /* UCLINUX */
       case 0x66:N6110_ReplyIMEI                    (MessageLength,MessageBuffer,MessageType);break;
+#ifndef UCLINUX
       case 0x6a:N6110_ReplyGetProductProfileSetting(MessageLength,MessageBuffer,MessageType);break;
       case 0x6b:N6110_ReplySetProductProfileSetting(MessageLength,MessageBuffer,MessageType);break;
       case 0x6e:N6110_ReplyGetSecurityCode         (MessageLength,MessageBuffer,MessageType);break;
@@ -5566,16 +5776,19 @@
       case 0x8f:N6110_ReplyPlayTone                (MessageLength,MessageBuffer,MessageType);break;
       case 0x9e:N6110_ReplyGetBinRingtone          (MessageLength,MessageBuffer,MessageType);break;
       case 0xa0:N6110_ReplySetBinRingtone          (MessageLength,MessageBuffer,MessageType);break;
+#endif /* UCLINUX */
       case 0xc8:N6110_ReplyHW                      (MessageLength,MessageBuffer,MessageType);break;
       default  :N6110_Dispatch0x40Message          (MessageLength,MessageBuffer,MessageType);break;
     }
     break;
 
+#ifndef UCLINUX
   /* Picture Images */
   case 0x47:
 
     N6110_Dispatch0x47Message(MessageLength, MessageBuffer, MessageType);
     break;
+#endif /* UCLINUX */
 
   /* Mobile phone identification */
   case 0x64:
Index: common/newmodules/n7110.c
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/common/newmodules/n7110.c,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.2
diff -u -r1.1.1.6 -r1.1.1.1.2.2
Index: common/newmodules/newat.c
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/common/newmodules/newat.c,v
retrieving revision 1.1.1.3
retrieving revision 1.1.1.1.2.2
diff -u -r1.1.1.3 -r1.1.1.1.2.2
--- common/newmodules/newat.c	17 Mar 2002 20:27:42 -0000	1.1.1.3
+++ common/newmodules/newat.c	17 Mar 2002 21:51:18 -0000	1.1.1.1.2.2
@@ -11,6 +11,8 @@
 
 */
 
+#include "config.h"
+
 /* "Turn on" prototypes in n-at.h */
 
 #define __n_at_c 
Index: common/newmodules/sniff/sniff.c
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/common/newmodules/sniff/sniff.c,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.3
diff -u -r1.1.1.6 -r1.1.1.1.2.3
--- common/newmodules/sniff/sniff.c	17 Mar 2002 20:36:30 -0000	1.1.1.6
+++ common/newmodules/sniff/sniff.c	17 Mar 2002 21:51:18 -0000	1.1.1.1.2.3
@@ -11,6 +11,8 @@
 
 */
 
+#include "config.h"
+
 /* "Turn on" prototypes in n-sniff.h */
 
 #define __n_sniff_c 
Index: common/protocol/at.c
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/common/protocol/at.c,v
retrieving revision 1.1.1.1
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.1 -r1.1.1.1.2.1
--- common/protocol/at.c	18 Feb 2002 02:06:29 -0000	1.1.1.1
+++ common/protocol/at.c	25 Feb 2002 02:49:24 -0000	1.1.1.1.2.1
@@ -10,6 +10,8 @@
 
 */
 
+#include "config.h"
+
 /* "Turn on" prototypes in AT.h */
 #define __AT_c 
 
@@ -42,7 +44,7 @@
 /* Local variables */
 u16 BufferCount;
 
-u16 MessageLength;
+static u16 MessageLength;
 
 u8 MessageBuffer[AT_MAX_RECEIVE_LENGTH * 6];
 
Index: common/protocol/fbus.c
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/common/protocol/fbus.c,v
retrieving revision 1.1.1.3
retrieving revision 1.1.1.1.2.5
diff -u -r1.1.1.3 -r1.1.1.1.2.5
--- common/protocol/fbus.c	17 Mar 2002 20:27:45 -0000	1.1.1.3
+++ common/protocol/fbus.c	17 Mar 2002 21:51:18 -0000	1.1.1.1.2.5
@@ -10,6 +10,8 @@
 
 */
 
+#include "config.h"
+
 /* "Turn on" prototypes in fbus.h */
 #define __fbus_c 
 
@@ -31,9 +33,20 @@
 #include "protocol/fbus.h"
 #include "protocol/at.h"
 #include "newmodules/newat.h"
+#ifndef UCLINUX
 #include "newmodules/n6110.h"
+#endif /* UCLINUX */
 #include "misc.h"
 
+static GSM_Error FBUS_Initialise(char *port_device, char *initlength,
+                          GSM_ConnectionType connection,
+                          void (*rlp_callback)(RLP_F96Frame *frame));
+
+static int FBUS_SendMessage(u16 message_length, u8 message_type, u8 *buffer);
+static int FBUS_SendFrame(u16 message_length, u8 message_type, u8 *buffer);
+static void FBUS_Terminate(void);
+static void FBUS_RX_StateMachine(unsigned char rx_byte);
+
 GSM_Protocol FBUS_Functions = {
   FBUS_Initialise,
   FBUS_SendMessage,
@@ -44,24 +57,24 @@
 };
 
 /* Local variables */
-enum FBUS_RX_States RX_State;
+static enum FBUS_RX_States RX_State;
 
-u8 MessageDestination, MessageSource;
+static u8 MessageDestination, MessageSource;
 
-u16 BufferCount, MultiBufferCount;
+static u16 BufferCount;
 
-u16 MessageLength, MultiMessageLength;
+static u16 MessageLength, MultiMessageLength;
 
-bool RX_Multiple = false;
+static bool RX_Multiple = false;
 
-u8 MessageType,MultiMessageType;
+static u8 MessageType,MultiMessageType;
 
-u8 MessageBuffer[FBUS_MAX_RECEIVE_LENGTH * 6],MultiMessageBuffer[FBUS_MAX_RECEIVE_LENGTH * 6];
+static u8 MessageBuffer[FBUS_MAX_RECEIVE_LENGTH * 6],MultiMessageBuffer[FBUS_MAX_RECEIVE_LENGTH * 6];
 
-u8        RequestSequenceNumber = 0x00;
+static u8        RequestSequenceNumber = 0x00;
 
 #ifdef DEBUG	
-char *N61_PrintDevice(int Device)
+static char *N61_PrintDevice(int Device)
 {
   switch (Device) {
 
@@ -75,7 +88,7 @@
 /* N61_RX_DisplayMessage is called when a message we don't know about is
    received so that the user can see what is going back and forth, and perhaps
    shed some more light/explain another message type! */
-void N61_RX_DisplayMessage()
+static void N61_RX_DisplayMessage()
 {
 #ifdef DEBUG
   fprintf(stdout, _("Msg Dest: %s\n"), N61_PrintDevice(MessageDestination));
@@ -148,6 +161,10 @@
   NULL_TX_DisplayMessage(current, out_buffer);
 #endif /* DEBUG */
 
+#if 0
+usleep(200000);
+#endif
+
   /* Send it out... */
   if (!NULL_WritePhone(current,out_buffer))
     return (false);
@@ -203,7 +220,7 @@
   return (true);
 }
 
-int FBUS_SendAck(u8 message_type, u8 message_seq) {
+static int FBUS_SendAck(u8 message_type, u8 message_seq) {
 
   unsigned char request[6];
 
@@ -272,8 +289,8 @@
   case FBUS_RX_Sync:
 
       if ((CurrentConnectionType==GCT_FBUS && rx_byte == FBUS_FRAME_ID) ||
-          ((CurrentConnectionType==GCT_Infrared ||
-	   CurrentConnectionType==GCT_Tekram) && rx_byte == FBUS_IR_FRAME_ID)) {
+          0/*((CurrentConnectionType==GCT_Infrared ||
+	   CurrentConnectionType==GCT_Tekram) && rx_byte == FBUS_IR_FRAME_ID)*/) {
 
         BufferCount = 0;
 
@@ -505,12 +522,14 @@
 }
   
 /* Called by initialisation code to open comm port in asynchronous mode. */
-bool FBUS_OpenSerial(void)
+static bool FBUS_OpenSerial(void)
 {
+#ifndef UCLINUX
   /* Uncomment, if want to test first method for DLR3 */
   unsigned char req[3]   = {"AT\r"};  
   unsigned char req2[5]  = {"AT&F\r"};  
   unsigned char req3[13] = {"AT*NOKIAFBUS\r"};  
+#endif /* UCLINUX */
 
   switch (CurrentConnectionType) {
      case GCT_FBUS:
@@ -536,6 +555,7 @@
        device_setdtrrts(1, 0);
 
        break;
+#ifndef UCLINUX
      case GCT_DLR3:
 
 #ifdef DEBUG
@@ -583,6 +603,7 @@
        /* It's more complicated and not done here */
        break;
 
+#endif /* UCLINUX */
      default:
 #ifdef DEBUG
        fprintf(stdout,_("Wrong connection type for fbus module. Inform marcin-wiacek@topnet.pl about it\n"));
@@ -594,7 +615,7 @@
 }
 
 /* Initialise variables and state machine. */
-GSM_Error FBUS_Initialise(char *port_device, char *initlength,
+static GSM_Error FBUS_Initialise(char *port_device, char *initlength,
                           GSM_ConnectionType connection,
                           void (*rlp_callback)(RLP_F96Frame *frame))
 {
Index: common/protocol/fbus3110.c
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/common/protocol/fbus3110.c,v
retrieving revision 1.1.1.1
retrieving revision 1.1.2.1
diff -u -r1.1.1.1 -r1.1.2.1
Index: common/protocol/fbusirda.c
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/common/protocol/fbusirda.c,v
retrieving revision 1.1.1.1
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.1 -r1.1.1.1.2.1
--- common/protocol/fbusirda.c	18 Feb 2002 02:06:29 -0000	1.1.1.1
+++ common/protocol/fbusirda.c	25 Feb 2002 02:49:24 -0000	1.1.1.1.2.1
@@ -10,6 +10,8 @@
 
 */
 
+#include "config.h"
+
 /* "Turn on" prototypes in fbusirda.h */
 #define __fbusirda_c 
 
Index: common/protocol/mbus.c
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/common/protocol/mbus.c,v
retrieving revision 1.1.1.2
retrieving revision 1.1.1.1.2.2
diff -u -r1.1.1.2 -r1.1.1.1.2.2
--- common/protocol/mbus.c	28 Feb 2002 02:31:11 -0000	1.1.1.2
+++ common/protocol/mbus.c	17 Mar 2002 21:51:18 -0000	1.1.1.1.2.2
@@ -10,6 +10,8 @@
 
 */
 
+#include "config.h"
+
 /* "Turn on" prototypes in MBUS.h */
 #define __MBUS_c 
 
Index: getopt/getopt.c
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/getopt/getopt.c,v
retrieving revision 1.1.1.1
retrieving revision 1.1.1.1.16.1
diff -u -r1.1.1.1 -r1.1.1.1.16.1
--- getopt/getopt.c	25 Nov 2001 21:59:16 -0000	1.1.1.1
+++ getopt/getopt.c	25 Feb 2002 02:49:24 -0000	1.1.1.1.16.1
@@ -121,6 +121,9 @@
    This must be initialized on some systems to avoid linking in the
    system's own getopt implementation.  */
 
+#ifdef UCLINUX
+static
+#endif /* UCLINUX */
 int optopt = '?';
 
 /* Describe how to deal with options that follow non-option ARGV-elements.
@@ -666,6 +669,8 @@
   }
 }
 
+#ifndef UCLINUX
+
 int
 getopt (argc, argv, optstring)
      int argc;
@@ -677,6 +682,8 @@
 			   (int *) 0,
 			   0);
 }
+
+#endif /* UCLINUX */
 
 #endif	/* _LIBC or not __GNU_LIBRARY__.  */
 
Index: getopt/getopt1.c
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/getopt/getopt1.c,v
retrieving revision 1.1.1.1
retrieving revision 1.1.1.1.16.1
diff -u -r1.1.1.1 -r1.1.1.1.16.1
--- getopt/getopt1.c	25 Nov 2001 21:59:16 -0000	1.1.1.1
+++ getopt/getopt1.c	25 Feb 2002 02:49:24 -0000	1.1.1.1.16.1
@@ -75,6 +75,8 @@
    but does match a short option, it is parsed as a short option
    instead.  */
 
+#ifndef UCLINUX
+
 int
 getopt_long_only (argc, argv, options, long_options, opt_index)
      int argc;
@@ -85,6 +87,8 @@
 {
   return _getopt_internal (argc, argv, options, long_options, opt_index, 1);
 }
+
+#endif /* UCLINUX */
 
 
 #endif	/* _LIBC or not __GNU_LIBRARY__.  */
Index: gnokii/Makefile
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/gnokii/Makefile,v
retrieving revision 1.1.1.2
retrieving revision 1.1.1.2.2.5
diff -u -r1.1.1.2 -r1.1.1.2.2.5
--- gnokii/Makefile	18 Feb 2002 02:06:38 -0000	1.1.1.2
+++ gnokii/Makefile	4 Mar 2002 20:57:36 -0000	1.1.1.2.2.5
@@ -6,6 +6,7 @@
 TOPDIR=..
 include $(TOPDIR)/Makefile.global
 
+STACKSIZE = 150000
 
 CFLAGS	+= $(PTHREAD_CFLAGS)
 LDLIBS	+= $(PTHREAD_LIBS)
@@ -22,11 +23,23 @@
 
 all: gnokii
 
-gnokii: $(OBJS) $(TOPDIR)/common/COMMON.o $(TOPDIR)/common/gsm-filetypes.o
-	$(CC) $(LDFLAGS) $(TARGET_ARCH) $^ $(LOADLIBES) $(LDLIBS) -o $@
+gnokii: $(OBJS) $(TOPDIR)/common/data.a $(TOPDIR)/common/common.a cleanup.o # $(TOPDIR)/common/gsm-filetypes.o
+	$(CC) $(LDFLAGS) $(TARGET_ARCH) $^ -o $@
+ifneq "" "$(findstring -DUCCOMPAT,$(CPPFLAGS))"
+	/opt/uClinux/m68k-pic-coff/bin/coff2flt -o gnokii -s $(STACKSIZE) gnokii.coff
+endif
+
+hello: hello.o cleanup.o
+	$(CC) $(LDFLAGS) $(TARGET_ARCH) $^ -o $@
+
+cleanup.o: cleanup.c
+	$(CC) $(CFLAGS) $(CPPFLAGS) $(TARGET_ARCH) -c -o $@ $<
+
+$(TOPDIR)/common/common.a: 
+	$(MAKE) -C $(TOPDIR)/common common.a
 
-$(TOPDIR)/common/COMMON.o: 
-	$(MAKE) -C $(TOPDIR)/common COMMON.o
+$(TOPDIR)/common/data.a:
+	$(MAKE) -C $(TOPDIR)/common data.a
 
 $(TOPDIR)/common/gsm-filetypes.o: 
 	$(MAKE) -C $(TOPDIR)/common gsm-filetypes.o
@@ -43,7 +56,7 @@
 makelib: gnokiilib
 
 clean:
-	$(RM) $(OBJS) *~ depend gnokii gnokiilib *.exe core *.bak
+	$(RM) $(OBJS) cleanup.o hello.o *~ depend gnokii gnokiilib *.exe core *.bak
 
 install: all
 	$(INSTALL) -d $(bindir)
Index: gnokii/cleanup.c
===================================================================
RCS file: gnokii/cleanup.c
diff -N gnokii/cleanup.c
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ gnokii/cleanup.c	17 Mar 2002 21:51:18 -0000	1.1.2.6
@@ -0,0 +1,83 @@
+#ifdef GNOKII_MAIN
+#include "config.h"
+#endif
+
+#include <stdio.h>
+
+#ifdef UCCOMPAT
+
+void _cleanup(void)
+{
+	/* hack for pic32 gcc */
+
+#if 0
+#ifdef LIVE
+	LIVE;
+#endif /* LIVE */
+#endif
+}
+
+#endif /* UCCOMPAT */
+
+#ifdef STACKCHECK
+
+static volatile int live_check_disable=0;
+
+void live_check(const char *file,int line,int alloc)
+{
+static volatile char *top=NULL,*top_printed=NULL;
+static volatile size_t largest=0,largest_printed=0;
+volatile char mark;
+volatile char *will=&mark-(alloc==-1 ? 0 : alloc);
+
+	if (will > top) 
+		top=will;
+	if (live_check_disable<=0 && top!=top_printed) {
+		printf("live_check [%s:%d]: new top=0x%08lX\n",file,line,(long)top);
+		fflush(stdout);
+		top_printed=top;
+		}
+	if (largest < top-will)
+		largest = top-will;
+	if (live_check_disable<=0 && largest!=largest_printed) {
+		printf("live_check [%s:%d]: largest=%ld\n",file,line,(long)largest);
+		fflush(stdout);
+		largest_printed=largest;
+		}
+	if (largest >= STACKCHECK) {
+		if (live_check_disable<=0)
+			printf("live_check - aborting: limit=%d < largest=%ld!\n",STACKCHECK,(long)largest);
+		_exit(99);
+		}
+}
+
+void live_disable(int how)
+{
+	live_check_disable+=how;
+}
+
+#define STACKCHECK_HEADER_PC_OFFSET 16
+
+void stackcheck(void)
+{
+volatile static inside=0;
+volatile void *func;
+volatile int fp_alloc;
+
+	asm("movel %%d0,%0" : "=r" (fp_alloc) : /* input */ : "d0");
+	asm("movel %%fp@(4),%0" : "=r" (func) : /* input */);
+
+	if (inside)
+		return;
+	inside++;
+
+	if (live_check_disable<=0)
+		printf("mcount(func=0x%08lX,fp_alloc=%d)\n",((long)func)-STACKCHECK_HEADER_PC_OFFSET,-fp_alloc);
+#ifdef LIVE_ALLOC
+	LIVE_ALLOC((-fp_alloc)+4);
+#endif /* LIVE_ALLOC */
+
+	inside--;
+}
+
+#endif /* STACKCHECK */
Index: gnokii/gnokii.c
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/gnokii/gnokii.c,v
retrieving revision 1.1.1.10
retrieving revision 1.1.1.5.2.10
diff -u -r1.1.1.10 -r1.1.1.5.2.10
--- gnokii/gnokii.c	17 Mar 2002 20:36:51 -0000	1.1.1.10
+++ gnokii/gnokii.c	17 Mar 2002 21:51:18 -0000	1.1.1.5.2.10
@@ -11,6 +11,8 @@
 
 */
 
+#include "config.h"
+
 #include <stdio.h>
 #include <stdlib.h>
 #include <signal.h>
@@ -18,6 +20,13 @@
 #include <ctype.h>
 #include <time.h>
 #include <sys/stat.h>
+#include <limits.h>
+#include <errno.h>
+
+#ifdef UCLINUX
+/* <getopt.h> or "getopt.h" would include insufficient getopt.h from uClinux */
+#include "../getopt/getopt.h"
+#endif /* UCLINUX */
 
 #ifndef VC6
   #if defined(__svr4__) || defined(__FreeBSD__)
@@ -53,32 +62,49 @@
 #include "gsm-common.h"
 #include "gsm-api.h"
 #include "gsm-networks.h"
+#ifndef UCLINUX
 #include "gsm-ringtones.h"
 #include "gsm-bitmaps.h"
 #include "gsm-wap.h"
 #include "gsm-sms.h"
 #include "gsm-datetime.h"
+#endif /* UCLINUX */
 #include "gsm-phonebook.h"
+#ifndef UCLINUX
 #include "gsm-calendar.h"
+#endif /* UCLINUX */
 #include "gsm-coding.h"
+#ifndef UCLINUX
 #include "newmodules/n6110.h"
+#endif
 #include "files/cfgreader.h"
+#ifndef UCLINUX
 #include "files/gsm-filetypes.h"
+#endif /* UCLINUX */
 #include "gnokii.h"
+#ifdef UCLINUX
+#include "data/virtmodem.h"
+#endif /* UCLINUX */
 
 #ifdef USE_NLS
   #include <locale.h>
 #endif
 
-char *model;           /* Model from .gnokiirc file. */
-char *Port;            /* Port from .gnokiirc file */
-char *Initlength;      /* Init length from .gnokiirc file */
-char *Connection;      /* Connection type from .gnokiirc file */
+static char *model;           /* Model from .gnokiirc file. */
+static char *Port;            /* Port from .gnokiirc file */
+static char *Initlength;      /* Init length from .gnokiirc file */
+static char *Connection;      /* Connection type from .gnokiirc file */
+#ifndef UCLINUX
 char *SynchronizeTime; /* If we set date and time from computer to phone (from .gnokiirc file) */
-char *BinDir;          /* Binaries directory from .gnokiirc file - not used here yet */
+#endif /* UCLINUX */
+static char *BinDir;          /* Binaries directory from .gnokiirc file - not used here yet */
 
-GSM_SMSMessage SMS[4];
+#ifndef UCLINUX
+static GSM_SMSMessage SMS[4];
+#endif /* UCLINUX */
   
+#ifndef UCLINUX
+
 char *GetProfileCallAlertString(int code) {
 
   switch (code) {
@@ -214,7 +240,7 @@
   return BufferProfileGroups;
 }
 
-char *print_error(GSM_Error e)
+static char *print_error(GSM_Error e)
 {
 
 //	case GE_DEVICEOPENFAILED:         return "Couldn't open specified serial device.";
@@ -265,7 +291,6 @@
 	}
 }
 
-
 GSM_Error GSM_ReadRingtoneFileOnConsole(char *FileName, GSM_Ringtone *ringtone)
 {
   GSM_Error error;
@@ -538,7 +563,7 @@
   return 0;
 }
 
-int GSM_SaveMultiPartSMSOnConsole(GSM_MultiSMSMessage *MultiSMS, int argnum, int argc, char *argv[],
+static int GSM_SaveMultiPartSMSOnConsole(GSM_MultiSMSMessage *MultiSMS, int argnum, int argc, char *argv[],
                                   bool inter, bool unicode, bool profile, bool scale) {
 
   int w,i;
@@ -683,9 +708,11 @@
   GSM->PlayTone(255*255,0);
 }
 
+#endif /* UCLINUX */
+
 /* This function shows the copyright and some informations usefull for
    debugging. */
-int version(void)
+static int version(void)
 {
 
   fprintf(stdout, _("GNOKII Version %s\n"
@@ -699,12 +726,32 @@
 /* The function usage is only informative - it prints this program's usage and
    command-line options. */
 
-int usage(void)
+static int usage(void)
 {
 
-  fprintf(stdout, _("   usage: gnokii [--help|--monitor [-noloop|-nl]|--version]\n"
+  fprintf(stdout, _("   usage: gnokii [--help] [--version]\n"
+  ));
+#ifndef UCLINUX
+"          gnokii --monitor [-noloop|-nl]\n"
+  ));
+#endif /* UCLINUX */
+
+#ifndef UCLINUX
+  fprintf(stdout, _(
 "          gnokii --getmemory memory_type [start [end]] [-short|-v30|-v21|-v]\n"
+  ));
+#else /* UCLINUX */
+  fprintf(stdout, _(
+"          gnokii --getmemory memory_type [start [end]] [-short]\n"
+  ));
+#endif /* UCLINUX */
+
+  fprintf(stdout, _(
 "          gnokii --writephonebook [-i]\n"
+  ));
+
+#ifndef UCLINUX
+  fprintf(stdout, _(
 "          gnokii --sendphonebookentry destination memory_type location\n"
 "                 [--smsc message_center_number] [--smscno message_center_index]\n"
 "                 [-s] [-v n] [-d]\n"
@@ -712,9 +759,16 @@
 "                 [--smsc message_center_number] [--smscno message_center_index]\n"
 "                 [-r] [-i] [-s] [-a] [--name name]\n"
 "          gnokii --getvoicemailbox\n"
+  ));
+#endif /* UCLINUX */
+
+  fprintf(stdout, _(
 "          gnokii --getspeeddial number\n"
 "          gnokii --setspeeddial number memory_type location\n\n"
+  ));
 
+#ifndef UCLINUX
+  fprintf(stdout, _(
 "          gnokii --getsms memory_type start [end] [-f file]\n"
 "          gnokii --getsmsstatus\n"
 "          gnokii --getsmsfolders\n"
@@ -815,10 +869,25 @@
 "          gnokii --sendprofile destination profile_name ringtonefile\n"
 "                 picturefile [--smsc message_center_number]\n"
 "                 [--smscno message_center_index] [-s] [-v n] [-d] [--scale]\n\n"
+  ));
+#endif /* UCLINUX */
 
+  fprintf(stdout, _(
 "          gnokii --reset [soft|hard]\n"
+  ));
+
+#ifndef UCLINUX
+  fprintf(stdout, _(
 "          gnokii --dialvoice number\n"
+  ));
+#endif /* UCLINUX */
+
+  fprintf(stdout, _(
 "          gnokii --cancelcall\n"
+  ));
+
+#ifndef UCLINUX
+  fprintf(stdout, _(
 "          gnokii --displayoutput\n"
 "          gnokii --presskeysequence sequence\n"
 "          gnokii --backupsettings file\n"
@@ -835,8 +904,15 @@
 "          gnokii --phonetests\n"
 "          gnokii --simlock\n"
 "          gnokii --getdisplaystatus\n"
+  ));
+#endif /* UCLINUX */
+
+  fprintf(stdout, _(
 "          gnokii --identify\n\n"
+  ));
 
+#ifndef UCLINUX
+  fprintf(stdout, _(
 "          gnokii --getwapbookmark location\n"
 "          gnokii --setwapbookmark title url [location]\n"
 "          gnokii --sendwapbookmark location destination\n"
@@ -872,13 +948,21 @@
   ));
 #endif
 
+#endif /* UCLINUX */
+
+#ifdef UCLINUX
+  fprintf(stdout, _(
+"          gnokii --gnokiid [--debug] [<child to run> [<child args>...]]\n"
+  ));
+#endif
+
   return 0;
 }
 
 /* fbusinit is the generic function which waits for the FBUS link. The limit
    is 10 seconds. After 10 seconds we quit. */
 
-void fbusinit(void (*rlp_handler)(RLP_F96Frame *frame))
+static void fbusinit(void (*rlp_handler)(RLP_F96Frame *frame))
 {
 
   int count=0;
@@ -890,7 +974,7 @@
 #endif
 
   /* Initialise the code for the GSM interface. */     
-  error = GSM_Initialise(model, Port, Initlength, GetConnectionTypeFromString(Connection), rlp_handler, SynchronizeTime);
+  error = GSM_Initialise(model, Port, Initlength, GetConnectionTypeFromString(Connection), rlp_handler, ""/*SynchronizeTime*/);
 
   if (error != GE_NONE) {
     fprintf(stderr, _("GSM/FBUS init failed! (Unknown model ?). Quitting.\n"));
@@ -911,7 +995,7 @@
 /* This function checks that the argument count for a given options is withing
    an allowed range. */
 
-int checkargs(int opt, struct gnokii_arg_len gals[], int argc)
+static int checkargs(int opt, struct gnokii_arg_len gals[], int argc)
 {
 
   int i;
@@ -945,6 +1029,8 @@
           else return 1;
 }
 
+static int gnokiid(int argc, char *argv[]);
+
 /* Main function - handles command line arguments, passes them to separate
    functions accordingly. */
 
@@ -962,14 +1048,19 @@
 
     { "help",               no_argument,       NULL, OPT_HELP             },// Display usage.
     { "version",            no_argument,       NULL, OPT_VERSION          },// Display version and build information.
+#ifndef UCLINUX
     { "getsmsfolders",      no_argument,       NULL, OPT_GETSMSFOLDERS    },// Gets SMS folders
     { "getsmsstatus",       no_argument,       NULL, OPT_GETSMSSTATUS     },// Get SMS Folder Status
+#endif /* UCLINUX */
     { "identify",           no_argument,       NULL, OPT_IDENTIFY         },// Identify
+#ifndef UCLINUX
     { "pmon",               no_argument,       NULL, OPT_PMON             },// For development purposes: run in passive monitoring mode
     { "foogle",             no_argument,       NULL, OPT_FOOGLE           },// For development purposes: insert you function calls here
     { "getdatetime",        no_argument,       NULL, OPT_GETDATETIME      },// Get date and time mode    
     { "getalarm",           no_argument,       NULL, OPT_GETALARM         },// Get alarm    
+#endif /* UCLINUX */
     { "cancelcall",         no_argument,       NULL, OPT_CANCELCALL       },// Cancel Call    
+#ifndef UCLINUX
     { "getdisplaystatus",   no_argument,       NULL, OPT_GETDISPLAYSTATUS },// Get display status mode    
     { "allringtones",       no_argument,       NULL, OPT_ALLRINGTONES     },/* Displays names of available ringtones */    
     { "displayoutput",      no_argument,       NULL, OPT_DISPLAYOUTPUT    },/* Show texts from phone's display */
@@ -981,8 +1072,10 @@
     { "receivesms",         no_argument,       NULL, OPT_RECEIVESMS       },    
     { "setoperatorname",    optional_argument, NULL, OPT_SETOPERATORNAME  },/* Set downloaded operator name */    
     { "setdatetime",        optional_argument, NULL, OPT_SETDATETIME      },// Set date and time    
+#endif /* UCLINUX */
     { "writephonebook",     optional_argument, NULL, OPT_WRITEPHONEBOOK   },// Write phonebook (memory) mode
     { "reset",              optional_argument, NULL, OPT_RESET            },// Resets the phone
+#ifndef UCLINUX
     { "monitor",            optional_argument, NULL, OPT_MONITOR          },// Monitor mode
     { "setlogo",            optional_argument, NULL, OPT_SETLOGO          },// Set logo
     { "getprofile",         optional_argument, NULL, OPT_GETPROFILE       },// Show profile
@@ -995,9 +1088,11 @@
     { "sendphonebookentry", required_argument, NULL, OPT_SENDPHONEBOOKENTRY},
     { "savephonebookentry", required_argument, NULL, OPT_SAVEPHONEBOOKENTRY},
     { "deletecalendarnote", required_argument, NULL, OPT_DELCALENDARNOTE  },// Delete calendar note mode    
+#endif /* UCLINUX */
     { "getmemory",          required_argument, NULL, OPT_GETMEMORY        },// Get memory mode
     { "getspeeddial",       required_argument, NULL, OPT_GETSPEEDDIAL     },// Get speed dial mode
     { "setspeeddial",       required_argument, NULL, OPT_SETSPEEDDIAL     },// Set speed dial mode
+#ifndef UCLINUX
     { "getsms",             required_argument, NULL, OPT_GETSMS           },// Get SMS message mode
     { "deletesms",          required_argument, NULL, OPT_DELETESMS        },// Delete SMS message mode
     { "sendsms",            required_argument, NULL, OPT_SENDSMS          },// Send SMS message mode
@@ -1050,6 +1145,11 @@
     { "decodefile",         required_argument, NULL, OPT_DECODEFILE },//decode input file
     { "getbinringfromfile", required_argument, NULL, OPT_GETBINRINGFROMFILE },
 #endif
+#endif /* UCLINUX */
+
+#ifdef UCLINUX
+    { "gnokiid",            optional_argument, NULL, OPT_GNOKIID          },// gnokiid mode
+#endif /* UCLINUX */
 
     { 0, 0, 0, 0},
   };
@@ -1060,6 +1160,7 @@
   struct gnokii_arg_len gals[] =
   {
 
+#ifndef UCLINUX
     { OPT_MONITOR,           0, 1, 0 },
 
 #ifdef SECURITY
@@ -1085,9 +1186,11 @@
     { OPT_SAVEPHONEBOOKENTRY,2, 9, 0 },
     { OPT_SENDPHONEBOOKENTRY,3, 9, 0 },
     { OPT_DELCALENDARNOTE,   1, 1, 0 },
+#endif /* UCLINUX */
     { OPT_GETMEMORY,         2, 4, 0 },
     { OPT_GETSPEEDDIAL,      1, 1, 0 },
     { OPT_SETSPEEDDIAL,      3, 3, 0 },
+#ifndef UCLINUX
     { OPT_GETSMS,            2, 5, 0 },
     { OPT_DELETESMS,         2, 3, 0 },
     { OPT_SENDSMS,           1,10, 0 },
@@ -1105,11 +1208,15 @@
     { OPT_SETRINGTONE,       1, 3, 0 },
     { OPT_GETRINGTONE,       1, 2, 0 },
     { OPT_PRESSKEYSEQUENCE,  1, 1, 0 },
+#endif /* UCLINUX */
     { OPT_RESET,             0, 1, 0 },
+#ifndef UCLINUX
     { OPT_GETPROFILE,        0, 1, 0 },
     { OPT_SETPROFILE,        3, 3, 0 },
     { OPT_SENDPROFILE,       4,10, 0 },
+#endif /* UCLINUX */
     { OPT_WRITEPHONEBOOK,    0, 1, 0 },
+#ifndef UCLINUX
     { OPT_PLAYRINGTONE,      1, 1, 0 },
     { OPT_COMPOSER,          1, 1, 0 },
     { OPT_RINGTONECONVERT,   2, 2, 0 },
@@ -1128,10 +1235,17 @@
     { OPT_SAVEWAPSETTINGS,   1, 9, 0 },
     { OPT_SENDWAPSETTINGS,   2, 9, 0 },
     { OPT_DIVERT,            3, 5, 0 },    
+#endif /* UCLINUX */
+
+#ifdef UCLINUX
+    { OPT_GNOKIID,           0, INT_MAX, 0 },
+#endif /* UCLINUX */
 
     { 0, 0, 0, 0 },
   };
 
+  LIVE;
+
   opterr = 0;
 
   /* For GNU gettext */
@@ -1147,7 +1261,7 @@
 #endif
 
     /* Read config file */
-    if (CFG_ReadConfig(&model, &Port, &Initlength, &Connection, &BinDir, &SynchronizeTime,false) < 0) {
+    if (CFG_ReadConfig(&model, &Port, &Initlength, &Connection, &BinDir, false) < 0) {
 	exit(-1);
     }
 
@@ -1172,6 +1286,7 @@
 
     for(i = 2; i < argc; i++)
       nargv[i-2] = argv[i];
+		nargv[argc-2] = NULL;	/* required by gnokiid() for execv(3) */
 	
     if(checkargs(c, gals, nargc)) {
 
@@ -1199,14 +1314,17 @@
     // Then, options with no arguments
     case OPT_HELP:                  rc = usage();                   break;
     case OPT_VERSION:               rc = version();                 break;
+#ifndef UCLINUX
     case OPT_MONITOR:               rc = monitormode(nargc, nargv); break;
     case OPT_GETSMSFOLDERS:         rc = getsmsfolders();           break;
     case OPT_GETDATETIME:           rc = getdatetime();             break;
     case OPT_GETALARM:              rc = getalarm();                break;
     case OPT_GETDISPLAYSTATUS:      rc = getdisplaystatus();        break;
     case OPT_PMON:                  rc = pmon();                    break;
+#endif /* UCLINUX */
     case OPT_WRITEPHONEBOOK:        rc = writephonebook(nargc, nargv);break;
 
+#ifndef UCLINUX
 #ifdef SECURITY
     case OPT_ENTERSECURITYCODE:     rc = entersecuritycode(optarg); break;
     case OPT_GETSECURITYCODESTATUS: rc = getsecuritycodestatus();   break;
@@ -1226,7 +1344,9 @@
     case OPT_SETDATETIME:           rc = setdatetime(nargc, nargv); break;
     case OPT_SETALARM:              rc = setalarm(nargv);           break;
     case OPT_DIALVOICE:             rc = dialvoice(optarg);         break;
+#endif /* UCLINUX */
     case OPT_CANCELCALL:            rc = cancelcall();              break;
+#ifndef UCLINUX
     case OPT_GETCALENDARNOTE:       rc = getcalendarnote(nargc, nargv);break;
     case OPT_DELCALENDARNOTE:       rc = deletecalendarnote(optarg);break;
     case OPT_SAVECALENDARNOTE:      rc = savecalendarnote(nargc, nargv);break;
@@ -1234,9 +1354,11 @@
     case OPT_SAVEPHONEBOOKENTRY:    rc = savephonebookentry(nargc, nargv);break;
     case OPT_SENDPHONEBOOKENTRY:    rc = sendphonebookentry(nargc, nargv);break;
     case OPT_WRITECALENDARNOTE:     rc = writecalendarnote(nargv);  break;
+#endif /* UCLINUX */
     case OPT_GETMEMORY:             rc = getmemory(nargc, nargv);   break;
     case OPT_GETSPEEDDIAL:          rc = getspeeddial(optarg);      break;
     case OPT_SETSPEEDDIAL:          rc = setspeeddial(nargv);       break;
+#ifndef UCLINUX
     case OPT_GETSMS:                rc = getsms(argc, argv);        break;
     case OPT_GETSMSSTATUS:          rc = getsmsstatus(argc, argv);  break;
     case OPT_DELETESMS:             rc = deletesms(nargc, nargv);   break;
@@ -1248,7 +1370,9 @@
     case OPT_GETSMSC:               rc = getsmsc(optarg);           break;
     case OPT_RENAMESMSC:            rc = renamesmsc(nargc,nargv);   break;
     case OPT_NETMONITOR:            rc = netmonitor(optarg);        break;
+#endif /* UCLINUX */
     case OPT_IDENTIFY:              rc = identify();                break;
+#ifndef UCLINUX
     case OPT_SETLOGO:               rc = setlogo(nargc, nargv);     break;
     case OPT_GETLOGO:               rc = getlogo(nargc, nargv);     break;
     case OPT_RECEIVESMS:            rc = receivesms(nargc, nargv);  break;
@@ -1273,7 +1397,9 @@
     case OPT_PHONETESTS:            rc = phonetests();              break;
     case OPT_SIMLOCKINFO:           rc = simlockinfo();             break;
     case OPT_SENDDTMF:              rc = senddtmf(optarg);          break;
+#endif /* UCLINUX */
     case OPT_RESET:                 rc = reset(nargc,nargv);        break;
+#ifndef UCLINUX
     case OPT_GETOPERATORNAME:       rc = getoperatorname();         break;
     case OPT_SETOPERATORNAME:       rc = setoperatorname(nargc,nargv);break;
     case OPT_GETWAPBOOKMARK:        rc = getwapbookmark(nargc,nargv);break;
@@ -1289,7 +1415,11 @@
     case OPT_GETVOICEMAILBOX:       rc = getvoicemailbox();         break;
     case OPT_NM_COLLECT:            rc = nm_collect(nargc, nargv);  break;
     case OPT_NETMONITORDATA:        rc = netmonitordata(nargc, nargv);break;
+#endif /* UCLINUX */
 
+#ifdef UCLINUX
+    case OPT_GNOKIID:               rc = gnokiid(nargc, nargv);     break;
+#endif /* UCLINUX */
     default:         fprintf(stderr, _("Unknown option: %d\n"), c); break;
 
     }
@@ -1304,6 +1434,8 @@
   exit(-1);
 }
 
+#ifndef UCLINUX
+
 /* Restores various phone settings from one file */
 int restoresettings(char *argv[])
 {
@@ -1786,7 +1918,7 @@
     case GSM_DisableFax:
     case GSM_EnableEmail:
     case GSM_DisableEmail:
-      fprintf(stdout,_("Warning: saving %i chars\n"),strlen(MultiSMS.SMS[0].MessageText));
+      fprintf(stdout,_("Warning: saving %ld chars\n"),(long)strlen(MultiSMS.SMS[0].MessageText));
       msgnum=1;
       break;
     default:
@@ -1991,7 +2123,7 @@
     case GSM_DisableFax:
     case GSM_EnableEmail:
     case GSM_DisableEmail:
-      fprintf(stdout,_("Warning: saving %i chars\n"),strlen(MultiSMS.SMS[0].MessageText));
+      fprintf(stdout,_("Warning: saving %ld chars\n"),(long)strlen(MultiSMS.SMS[0].MessageText));
       msgnum=1;
       break;
     default:
@@ -2829,8 +2961,10 @@
   return 0;
 }
 
+#endif /* UCLINUX */
+
 /* Cancel a call */
-int cancelcall(void)
+static int cancelcall(void)
 {
   fbusinit(NULL);
 
@@ -2841,6 +2975,8 @@
   return 0;
 }
 
+#ifndef UCLINUX
+
 int savelogo(int argc, char *argv[])
 {
   GSM_Bitmap bitmap;
@@ -3449,7 +3585,7 @@
 			} else {
 			  GSM->SetBitmap(&bitmap);
 			  GSM->GetBitmap(&oldbit);
-			  fprintf(stderr, _("too long, truncated to \"%s\" (length %i)\n"),oldbit.text,strlen(oldbit.text));
+			  fprintf(stderr, _("too long, truncated to \"%s\" (length %ld)\n"),oldbit.text,(long)strlen(oldbit.text));
 			}
                         ok=false;
 		      }
@@ -4101,6 +4237,89 @@
   return 0;
 }
 
+#endif /* UCLINUX */
+
+/* Emulation of separate gnokiid binary for uClinux */
+
+#ifdef UCLINUX
+
+#define NICE_LEVEL (-20)
+
+static void gnokiid_SIGCHLD(int signo)
+{
+	fprintf (stderr, _("Child process exited, aborting...\n"));
+	exit(2);
+}
+
+static int gnokiid(int argc, char *argv[])
+{
+	bool    DebugMode;  /* When true, run in debug mode */
+	char    *Model;   /* Model from .gnokiirc file. */
+	char    *Port;    /* Port from .gnokiirc file */
+	char    *Initlength;  /* Init length from .gnokiirc file */
+	char    *Connection;  /* Connection type from .gnokiirc file */
+	char    *BinDir;  /* Directory of the mgnokiidev command */
+
+	/* evaluate for presence of "--debug" argument in parameter */
+	DebugMode = false;
+	if(argc>0)
+	{
+		if( !strcmp(argv[0],"--debug" ))
+		{
+			DebugMode = true;
+			argv++;
+			argc--;
+		}
+	}
+
+#ifdef DEBUG
+  fprintf (stderr, _("Initializing gnokiid mode...\n"));
+#endif
+
+	if (CFG_ReadConfig(&Model, &Port, &Initlength, &Connection, &BinDir, true) < 0)
+		return(-1);
+
+  if (VM_Initialise(Model, Port, Initlength, GCT_FBUS, BinDir, DebugMode, true, ""/*SynchronizeTime*/) == false)
+		return (-1);
+
+	if (argc>0) {
+#ifdef DEBUG
+		fprintf (stderr, _("Spawning gnokiid startup child process \"%s\"...\n"), *argv);
+#endif
+		signal(SIGCHLD,gnokiid_SIGCHLD);
+		errno=0;
+		switch (vfork()) {
+			case -1: /* vfork() failure */
+				fprintf (stderr, _("vfork() failed! (%s)\n"),strerror(errno));
+				return -1;
+			case 0: /* child */
+				execv(*argv,argv);
+				fprintf (stderr, _("Spawn of child process failed! (%s)\n"),strerror(errno));
+				_exit(9);
+				break;
+			default: /* parent */
+				/* PASSTHRU */
+				break;
+			}
+		}
+
+#ifdef DEBUG
+  fprintf (stderr, _("Entering gnokiid virtual modem main loop...\n"));
+#endif
+	if (nice(NICE_LEVEL))
+		fprintf (stderr, _("WARNING: nice level change failed (by %d)\n"),NICE_LEVEL);
+
+	VM_ThreadLoop();
+
+	VM_Terminate();
+
+  return 0;
+}
+
+#endif /* UCLINUX */
+
+#ifndef UCLINUX
+
 /* Shows texts from phone's display */
 
 int displayoutput()
@@ -4585,10 +4804,12 @@
 
 }
 
+#endif /* UCLINUX */
+
 /* Get requested range of memory storage entries and output to stdout in
    easy-to-parse format */
 
-int getmemory(int argc, char *argv[])
+static int getmemory(int argc, char *argv[])
 {
 
   GSM_PhonebookEntry entry;
@@ -4616,6 +4837,7 @@
     fprintf(stderr, _("Unknown memory type %s!\n"), argv[0]);
     return (-1);
   }
+
   GetMemoryTypeString(memory_type_string, &entry.MemoryType);
 
   if (argv[argc-1][0] == '-')
@@ -4663,6 +4885,7 @@
 	i_used++;
       else if (do_all)
 	break;
+#ifndef UCLINUX
       if (output_opt && !strcmp( output_opt,"-v30")) {
 	semicolon_pipe_substitution( &entry, 0 );
         fprintf(stdout,_("%s"),GSM_GetVCARD(&entry,30));
@@ -4678,6 +4901,7 @@
         fprintf(stdout,_("%s"),GSM_GetVCARD(&entry,10));
 	formatdone=true;
       } 
+#endif /* UCLINUX */
       if (output_opt && !strcmp(output_opt,"-short")) {
         semicolon_pipe_substitution( &entry, 0 );
         fprintf(stdout, "%s;%s;%s;%d;%d;", entry.Name, entry.Number, memory_type_string, entry.Location, entry.Group);
@@ -4820,7 +5044,7 @@
 /* Read data from stdin, parse and write to phone.  The parsing is relatively
    crude and doesn't allow for much variation from the stipulated format. */
 
-int writephonebook(int argc, char *args[])
+static int writephonebook(int argc, char *args[])
 {
 
   GSM_PhonebookEntry entry;
@@ -5036,7 +5260,7 @@
 
 /* Getting speed dials. */
 
-int getspeeddial(char *Number) {
+static int getspeeddial(char *Number) {
 
   GSM_SpeedDial entry;
   GSM_Error error;
@@ -5069,7 +5293,7 @@
 
 /* Setting speed dials. */
 
-int setspeeddial(char *argv[]) {
+static int setspeeddial(char *argv[]) {
 
   GSM_SpeedDial entry;
 
@@ -5105,6 +5329,8 @@
   return 0;
 }
 
+#ifndef UCLINUX
+
 /* Getting the status of the display. */
 
 int getdisplaystatus()
@@ -5164,29 +5390,42 @@
   return 0;
 }
 
-int identify( void )
+#endif /* UCLINUX */
+
+static int identify( void )
 {
   /* Hopefully is 64 larger as FB38_MAX* / FB61_MAX* */
   char imei[64], model[64], rev[64], manufacturer[64];
 
+  LIVE;
   fbusinit(NULL);
 
+  LIVE;
   while (GSM->GetIMEI(imei)    != GE_NONE) sleep(1);
+  LIVE;
   while (GSM->GetRevision(rev) != GE_NONE) sleep(1);
+  LIVE;
   while (GSM->GetModel(model)  != GE_NONE) sleep(1);
+  LIVE;
 
   strcpy(manufacturer, "(unknown)");
+  LIVE;
   GSM->GetManufacturer(manufacturer);
+  LIVE;
 
   fprintf(stdout, _("IMEI:     %s\n"), imei);
   fprintf(stdout, _("Model:    %s %s (%s)\n"), manufacturer, GetModelName (model), model);
   fprintf(stdout, _("Revision: %s\n"), rev);
 
+  LIVE;
   GSM->Terminate();
+  LIVE;
 
   return 0;
 }
 
+#ifndef UCLINUX
+
 int senddtmf(char *String)
 {
 
@@ -5199,8 +5438,10 @@
   return 0;
 }
 
+#endif /* UCLINUX */
+
 /* Resets the phone */
-int reset(int argc, char *argv[])
+static int reset(int argc, char *argv[])
 {
 
   unsigned char _type=0x03;
@@ -5228,6 +5469,8 @@
   return 0;
 }
 
+#ifndef UCLINUX
+
 /* This is a "convenience" function to allow quick test of new API stuff which
    doesn't warrant a "proper" command line function. */
 
@@ -5271,7 +5514,7 @@
 
   /* Initialise the code for the GSM interface. */     
 
-  error = GSM_Initialise(model, Port, Initlength, connection, RLP_DisplayF96Frame, SynchronizeTime);
+  error = GSM_Initialise(model, Port, Initlength, connection, RLP_DisplayF96Frame, ""/*SynchronizeTime*/);
 
   if (error != GE_NONE) {
     fprintf(stderr, _("GSM/FBUS init failed! (Unknown model ?). Quitting.\n"));
@@ -7737,11 +7980,13 @@
   return 0;
 }
 
+#endif /* UCLINUX */
+
 /*
  * Returns number of sostituited characters.
  * ... may be useful one day ??
  */
-int semicolon_pipe_substitution( GSM_PhonebookEntry *pentry, unsigned int direction )
+static int semicolon_pipe_substitution( GSM_PhonebookEntry *pentry, unsigned int direction )
 	/* direction = 0 : after reading phone memory (
 	 *             1 : writing phone memory
 	 */
@@ -7777,6 +8022,10 @@
 	return( i_sost );
 }                                                                               
 
+#ifndef UCLINUX
+
+extern GSM_Error N6110_EnableExtendedCommands (unsigned char status);
+
 /* Allows to set simlock state.
    With older phone (older 51xx, 61xx) can open them, with older
    and newer should be able to close them */
@@ -8776,9 +9025,12 @@
     case GE_NONE:
 
       /* Put entry into SMS structure */
+#ifndef UCLINUX
       if (GetModelFeature(FN_PHONEBOOK)==F_PBK71INT) {
         GSM_SavePhonebookEntryToSMS(&MultiSMS,&entry,21);
-      } else {
+      } else
+#endif /* UCLINUX */
+				{
         GSM_SavePhonebookEntryToSMS(&MultiSMS,&entry,10);
       }
 
@@ -8912,3 +9164,5 @@
   return GE_NONE;
 }
 #endif
+
+#endif /* UCLINUX */
Index: gnokii/gnokii.h
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/gnokii/gnokii.h,v
retrieving revision 1.1.1.2
retrieving revision 1.1.1.1.2.3
diff -u -r1.1.1.2 -r1.1.1.1.2.3
--- gnokii/gnokii.h	28 Feb 2002 02:31:20 -0000	1.1.1.2
+++ gnokii/gnokii.h	17 Mar 2002 21:51:18 -0000	1.1.1.1.2.3
@@ -12,6 +12,8 @@
 
 /* Prototypes */
 
+#ifndef UCLINUX
+
 int monitormode(int argc, char *argv[]);
 
 #ifdef SECURITY
@@ -26,10 +28,13 @@
   int getbinringfromfile(int nargc, char *nargv[]); 
 #endif
 
-int getmemory(int argc, char *argv[]);
-int writephonebook(int argc, char *argv[]);
-int getspeeddial(char *number);
-int setspeeddial(char *argv[]);
+#endif /* UCLINUX */
+
+static int getmemory(int argc, char *argv[]);
+static int writephonebook(int argc, char *argv[]);
+static int getspeeddial(char *number);
+static int setspeeddial(char *argv[]);
+#ifndef UCLINUX
 int getsms(int argc, char *argv[]);
 int renamesmsc(int argc, char *argv[]);
 int deletesms(int argc, char *argv[]);
@@ -45,13 +50,17 @@
 int setalarm(char *argv[]);
 int getalarm(void);
 int dialvoice(char *number);
-int cancelcall(void);
+#endif /* UCLINUX */
+static int cancelcall(void);
+#ifndef UCLINUX
 int getcalendarnote(int argc, char *argv[]);
 int writecalendarnote(char *argv[]);
 int deletecalendarnote(char *index);
 int getdisplaystatus();
 int netmonitor(char *_mode);
-int identify(void);
+#endif /* UCLINUX */
+static int identify(void);
+#ifndef UCLINUX
 int senddtmf(char *String);
 int foogle(char *argv[]);
 int pmon(void);
@@ -60,7 +69,9 @@
 int binringtoneconvert(int argc, char *argv[]);
 int setringtone(int argc, char *argv[]);
 int getringtone(int argc, char *argv[]);
-int reset(int argc, char *argv[]);
+#endif /* UCLINUX */
+static int reset(int argc, char *argv[]);
+#ifndef UCLINUX
 int getprofile(int argc, char *argv[]);
 int setprofile(int argc, char *argv[]);
 int allringtones();
@@ -101,6 +112,7 @@
 int divert(int argc, char *argv[]);
 int savephonebookentry(int argc, char *argv[]);
 int sendphonebookentry(int argc, char *argv[]);
+#endif /* UCLINUX */
 
 typedef enum {
   OPT_HELP,
@@ -186,7 +198,8 @@
   OPT_DIVERT=146,
   OPT_SENDWAPSETTINGS=147,
   OPT_SETWAPBOOKMARK=148,
-  OPT_GETBINRINGFROMFILE=149
+  OPT_GETBINRINGFROMFILE=149,
+  OPT_GNOKIID=150,
 } opt_index;
 
 struct gnokii_arg_len {
@@ -208,8 +221,10 @@
   int whatcode;
 };
 
+#ifndef UCLINUX
+
 /* for --presskeysequence */
-struct keys_table_position Keys[] = {
+static struct keys_table_position Keys[] = {
 {'m',PHONEKEY_MENU},
 {'M',PHONEKEY_MENU},
 {'n',PHONEKEY_NAMES},
@@ -241,6 +256,8 @@
 {' ',0}
 };
 
+#endif /* UCLINUX */
+
 /* for NETMONITOR */
 
 //maximal number of screens for --nm_collect
@@ -276,5 +293,5 @@
 	unsigned char req_screen[NM_MAX_SCREEN];
 } OUT_INFO_MON;
 
-int semicolon_pipe_substitution( GSM_PhonebookEntry *pentry, unsigned int direction );
-int str_substch( char *str, const char toric, const char sost );
+static int semicolon_pipe_substitution( GSM_PhonebookEntry *pentry, unsigned int direction );
+static int str_substch( char *str, const char toric, const char sost );
Index: gnokii/hello.c
===================================================================
RCS file: gnokii/hello.c
diff -N gnokii/hello.c
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ gnokii/hello.c	27 Feb 2002 22:51:23 -0000	1.1.2.1
@@ -0,0 +1,7 @@
+#include <stdio.h>
+
+int main(void)
+{
+	puts("hello");
+	return 0;
+}
Index: include/config.h.in.in
===================================================================
RCS file: include/config.h.in.in
diff -N include/config.h.in.in
--- include/config.h.in.in	18 Feb 2002 02:06:40 -0000	1.1.1.2
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,57 +0,0 @@
-/*
-
-  $Id: config.h.in.in,v 1.1.1.2 2002/02/18 02:06:40 short Exp $
-
-  G N O K I I
-
-  A Linux/Unix toolset and driver for Nokia mobile phones.
-
-  Released under the terms of the GNU GPL, see file COPYING for more details.
-
-*/
-
-/* DO NOT EDIT MANUALLY !!! */
-
-#ifndef __CONFIG_H__
-#define __CONFIG_H__
-
-#define VERSION    "@VERSION@"
-#define XVERSION   "@XVERSION@"
-#define XGNOKIIDIR "@XGNOKIIDIR@/@XPACKAGE@"
-
-/* Define if you have timersub() */
-#undef HAVE_TIMEOPS
-
-/* Define if you have tm_gmtoff field in tm structure */
-#undef HAVE_TM_GMTON
-
-/* Define if you have cfsetspeed, cfsetispeed, cfsetospeed, c_ispeed and c_ospeed in struct termios */
-#undef HAVE_CFSETSPEED
-#undef HAVE_CFSETISPEED
-#undef HAVE_CFSETOSPEED
-#undef HAVE_TERMIOS_CSPEED
-
-/* Define if you have snprintf */
-#undef HAVE_SNPRINTF
-
-/* Define debug level */
-#undef DEBUG
-#undef XDEBUG
-#undef RLP_DEBUG
-
-/* Decide if you want security options enabled */
-#undef SECURITY
-
-/* Define if you have XPM components */
-#undef XPM
-
-/* Define if you want NLS */
-#undef USE_NLS
-
-/* Define if you want to use Unix98 PTYs */
-#undef USE_UNIX98PTYS
-
-/* Define if you compile for M$ Windows */
-#undef WIN32
-
-#endif /* __CONFIG_H__ */
Index: include/gsm-api.h
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/include/gsm-api.h,v
retrieving revision 1.1.1.5
retrieving revision 1.1.1.3.2.3
diff -u -r1.1.1.5 -r1.1.1.3.2.3
--- include/gsm-api.h	17 Mar 2002 20:28:29 -0000	1.1.1.5
+++ include/gsm-api.h	17 Mar 2002 21:51:18 -0000	1.1.1.3.2.3
@@ -27,12 +27,16 @@
 #include "gsm-ringtones.h"
 #include "gsm-wap.h"
 
+#ifndef UCLINUX
+
 /* Undefined functions in fbus/mbus files */
 extern GSM_Error Unimplemented(void);
 #define UNIMPLEMENTED (void *) Unimplemented
 extern GSM_Error NotSupported(void);
 #define NOTSUPPORTED (void *) NotSupported
 
+#endif /* UCLINUX */
+
 /* Define the structure used to hold pointers to the various API functions.
    This is in effect the master list of functions provided by the gnokii API.
    Modules containing the model specific code each contain one of these
@@ -283,160 +287,176 @@
 extern GSM_Functions *GSM;
 extern GSM_Protocol *Protocol;
 
-GSM_PhonebookEntry *CurrentPhonebookEntry;
-GSM_Error          CurrentPhonebookError;
+extern GSM_PhonebookEntry *CurrentPhonebookEntry;
+extern GSM_Error          CurrentPhonebookError;
 
-GSM_SpeedDial      *CurrentSpeedDialEntry;
-GSM_Error          CurrentSpeedDialError;
+extern GSM_SpeedDial      *CurrentSpeedDialEntry;
+extern GSM_Error          CurrentSpeedDialError;
 
-unsigned char      Current_IMEI[GSM_MAX_IMEI_LENGTH];
-unsigned char      Current_Revision[GSM_MAX_REVISION_LENGTH];
-unsigned char      Current_Model[GSM_MAX_MODEL_LENGTH];
+extern unsigned char      Current_IMEI[GSM_MAX_IMEI_LENGTH];
+extern unsigned char      Current_Revision[GSM_MAX_REVISION_LENGTH];
+extern unsigned char      Current_Model[GSM_MAX_MODEL_LENGTH];
 
-GSM_SMSMessage     *CurrentSMSMessage;
-GSM_Error          CurrentSMSMessageError;
-int                CurrentSMSPointer;
+#ifndef UCLINUX
+extern GSM_SMSMessage     *CurrentSMSMessage;
+extern GSM_Error          CurrentSMSMessageError;
+extern int                CurrentSMSPointer;
 
-GSM_SMSFolders      *CurrentSMSFolders;
-GSM_Error          CurrentSMSFoldersError;
-int                CurrentSMSFoldersCount;
+extern GSM_SMSFolders      *CurrentSMSFolders;
+extern GSM_Error          CurrentSMSFoldersError;
+extern int                CurrentSMSFoldersCount;
 
-GSM_OneSMSFolder   CurrentSMSFolder;
-GSM_Error          CurrentSMSFolderError;
-int                CurrentSMSFolderID;
+extern GSM_OneSMSFolder   CurrentSMSFolder;
+extern GSM_Error          CurrentSMSFolderError;
+extern int                CurrentSMSFolderID;
+#endif /* UCLINUX */
 
-GSM_MemoryStatus   *CurrentMemoryStatus;
-GSM_Error          CurrentMemoryStatusError;
+extern GSM_MemoryStatus   *CurrentMemoryStatus;
+extern GSM_Error          CurrentMemoryStatusError;
 
-GSM_NetworkInfo    *CurrentNetworkInfo;
-GSM_Error          CurrentNetworkInfoError;
+#ifndef UCLINUX
+extern GSM_NetworkInfo    *CurrentNetworkInfo;
+extern GSM_Error          CurrentNetworkInfoError;
 
-GSM_SMSStatus      *CurrentSMSStatus;
-GSM_Error          CurrentSMSStatusError;
+extern GSM_SMSStatus      *CurrentSMSStatus;
+extern GSM_Error          CurrentSMSStatusError;
 
-GSM_MessageCenter  *CurrentMessageCenter;
-GSM_Error          CurrentMessageCenterError;
+extern GSM_MessageCenter  *CurrentMessageCenter;
+extern GSM_Error          CurrentMessageCenterError;
 
-int                *CurrentSecurityCodeStatus;
-GSM_Error          CurrentSecurityCodeError;
-GSM_SecurityCode   *CurrentSecurityCode;
+extern int                *CurrentSecurityCodeStatus;
+extern GSM_Error          CurrentSecurityCodeError;
+extern GSM_SecurityCode   *CurrentSecurityCode;
 
-GSM_DateTime       *CurrentDateTime;
-GSM_Error          CurrentDateTimeError;
+extern GSM_DateTime       *CurrentDateTime;
+extern GSM_Error          CurrentDateTimeError;
 
-GSM_Error          CurrentResetPhoneSettingsError;
+extern GSM_Error          CurrentResetPhoneSettingsError;
 
-GSM_DateTime       *CurrentAlarm;
-GSM_Error          CurrentAlarmError;
+extern GSM_DateTime       *CurrentAlarm;
+extern GSM_Error          CurrentAlarmError;
 
-GSM_CalendarNote   *CurrentCalendarNote;
-GSM_Error          CurrentCalendarNoteError;
+extern GSM_CalendarNote   *CurrentCalendarNote;
+extern GSM_Error          CurrentCalendarNoteError;
 
-GSM_NotesInfo      CurrentCalendarNotesInfo,*CurrentCalendarNotesInfo2;
-GSM_Error          CurrentCalendarNotesInfoError;
+extern GSM_NotesInfo      CurrentCalendarNotesInfo,*CurrentCalendarNotesInfo2;
+extern GSM_Error          CurrentCalendarNotesInfoError;
 
-int                *CurrentFirstCalendarFreePos;
-GSM_Error          CurrentFirstCalendarFreePosError;
+extern GSM_Error          CurrentSetDateTimeError;
+extern GSM_Error          CurrentSetAlarmError;
 
-GSM_Error          CurrentSetDateTimeError;
-GSM_Error          CurrentSetAlarmError;
+extern int                *CurrentFirstCalendarFreePos;
+extern GSM_Error          CurrentFirstCalendarFreePosError;
+#endif /* UCLINUX */
 
-GSM_Error          CurrentEnableExtendedCommandsError;
+extern GSM_Error          CurrentEnableExtendedCommandsError;
 
-int                CurrentRFLevel,
+extern int                CurrentRFLevel,
                    CurrentBatteryLevel,
                    CurrentPowerSource;
 
-int                CurrentDisplayStatus;
-GSM_Error          CurrentDisplayStatusError;
+#ifndef UCLINUX
+extern int                CurrentDisplayStatus;
+extern GSM_Error          CurrentDisplayStatusError;
 
-char               *CurrentNetmonitor;
-GSM_Error          CurrentNetmonitorError;
+extern char               *CurrentNetmonitor;
+extern GSM_Error          CurrentNetmonitorError;
 
-GSM_Bitmap         *CurrentGetBitmap;
-GSM_Error          CurrentGetBitmapError;
+extern GSM_Bitmap         *CurrentGetBitmap;
+extern GSM_Error          CurrentGetBitmapError;
 
-GSM_Error          CurrentSetBitmapError;
+extern GSM_Error          CurrentSetBitmapError;
 
-GSM_Error          CurrentSendDTMFError;
+extern GSM_Error          CurrentSendDTMFError;
 
-GSM_Profile        *CurrentProfile;
-GSM_Error          CurrentProfileError;
+extern GSM_Profile        *CurrentProfile;
+extern GSM_Error          CurrentProfileError;
 
-GSM_Error          CurrentDisplayOutputError;
+extern GSM_Error          CurrentDisplayOutputError;
 
-GSM_CBMessage      *CurrentCBMessage;
-GSM_Error          CurrentCBError;
+extern GSM_CBMessage      *CurrentCBMessage;
+extern GSM_Error          CurrentCBError;
 
-int                CurrentPressKeyEvent;
-GSM_Error          CurrentPressKeyError;
+extern int                CurrentPressKeyEvent;
+extern GSM_Error          CurrentPressKeyError;
 
-GSM_Error          CurrentPlayToneError;
+extern GSM_Error          CurrentPlayToneError;
+#endif /* UCLINUX */
 
-GSM_Error          CurrentDialVoiceError;
+extern GSM_Error          CurrentDialVoiceError;
 
-GSM_Error          CurrentGetOperatorNameError;
-GSM_Network        *CurrentGetOperatorNameNetwork;
-GSM_Error          CurrentSetOperatorNameError;
+#ifndef UCLINUX
+extern GSM_Error          CurrentGetOperatorNameError;
+extern GSM_Network        *CurrentGetOperatorNameNetwork;
+extern GSM_Error          CurrentSetOperatorNameError;
+#endif /* UCLINUX */
 
-GSM_Error          CurrentGetIMEIError;
+extern GSM_Error          CurrentGetIMEIError;
 
-GSM_Error          CurrentGetHWError;
+extern GSM_Error          CurrentGetHWError;
 
-unsigned char      CurrentPPS[4];
-GSM_Error          CurrentProductProfileSettingsError;
+#ifndef UCLINUX
+extern unsigned char      CurrentPPS[4];
+extern GSM_Error          CurrentProductProfileSettingsError;
 
-char               CurrentIncomingCall[20];
+extern char               CurrentIncomingCall[20];
 
-GSM_Error          CurrentBinRingtoneError;
-GSM_BinRingtone    *CurrentGetBinRingtone;
+extern GSM_Error          CurrentBinRingtoneError;
+extern GSM_BinRingtone    *CurrentGetBinRingtone;
 
-GSM_Error          CurrentRingtoneError; 
+extern GSM_Error          CurrentRingtoneError; 
+#endif /* UCLINUX */
 
-GSM_Error          CurrentMagicError;
+extern GSM_Error          CurrentMagicError;
 
-GSM_Error          CurrentSimlockInfoError;
-GSM_AllSimlocks    *CurrentSimLock;
+#ifndef UCLINUX
+extern GSM_Error          CurrentSimlockInfoError;
+extern GSM_AllSimlocks    *CurrentSimLock;
 
-GSM_Error          CurrentGetWAPBookmarkError;
-GSM_Error          CurrentSetWAPBookmarkError;
-GSM_WAPBookmark    *WAPBookmark;
+extern GSM_Error          CurrentGetWAPBookmarkError;
+extern GSM_Error          CurrentSetWAPBookmarkError;
+extern GSM_WAPBookmark    *WAPBookmark;
 
-GSM_Error          CurrentGetWAPSettingsError;
-GSM_WAPSettings    *WAPSettings;
+extern GSM_Error          CurrentGetWAPSettingsError;
+extern GSM_WAPSettings    *WAPSettings;
 
-GSM_Error          CurrentCallDivertError;
-GSM_CallDivert    *CurrentCallDivert;
+extern GSM_Error          CurrentCallDivertError;
+extern GSM_CallDivert    *CurrentCallDivert;
 
-char              *CurrentManufacturer;
+extern char              *CurrentManufacturer;
+#endif /* UCLINUX */
 
 /* This is the connection type used in gnokii. */
-GSM_ConnectionType CurrentConnectionType;
+extern GSM_ConnectionType CurrentConnectionType;
 
 /* Pointer to a callback function used to return changes to a calls status */
 /* This saves unreliable polling */
-void (*CurrentCallPassup)(char c);
+extern void (*CurrentCallPassup)(char c);
 
 /* Pointer to callback function in user code to be called when RLP frames
    are received. */
-void (*CurrentRLP_RXCallback)(RLP_F96Frame *frame);
+extern void (*CurrentRLP_RXCallback)(RLP_F96Frame *frame);
 
 /* Used to disconnect the call */
-u8 CurrentCallSequenceNumber;
+extern u8 CurrentCallSequenceNumber;
 
-bool CurrentLinkOK;
+extern bool CurrentLinkOK;
 
-bool CurrentRequestTerminate;
+extern bool CurrentRequestTerminate;
 
-bool CurrentDisableKeepAlive;
+#ifndef UCLINUX
+extern bool CurrentDisableKeepAlive;
+#endif /* UCLINUX */
 
 /* Prototype for the functions actually provided by gsm-api.c. */
 
-GSM_Error GSM_Initialise(char *model, char *device, char *initlength, GSM_ConnectionType connection, void (*rlp_callback)(RLP_F96Frame *frame), char* SynchronizeTime);
+extern GSM_Error GSM_Initialise(char *model, char *device, char *initlength, GSM_ConnectionType connection, void (*rlp_callback)(RLP_F96Frame *frame), char* SynchronizeTime);
 
-bool CheckModel (GSM_Information InfoToCheck, char *model, GSM_ConnectionType connection);
+#ifndef UCLINUX
+extern bool CheckModel (GSM_Information InfoToCheck, char *model, GSM_ConnectionType connection);
+#endif /* UCLINUX */
 
-char *GetMygnokiiVersion();
+extern char *GetMygnokiiVersion();
 
 typedef enum {
   F_CAL61=1,/*Calendar in 6110 style - 4 types,...*/
@@ -508,10 +528,15 @@
 } OnePhoneModel;
 
 extern char *GetModelName ();
-int GetModelFeature (featnum_index num);
+extern int GetModelFeature (featnum_index num);
 
+#ifndef UCLINUX
 extern bool AppendLog(u8 *buffer, int length,bool format);
 extern bool AppendLogText(u8 *buffer,bool format);
+#else /* UCLINUX */
+#define AppendLog(buffer,length,format)
+#define AppendLogText(buffer,format)
+#endif /* UCLINUX */
 
 typedef struct {
   int                SIMPhonebookUsed;
Index: include/gsm-bitmaps.h
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/include/gsm-bitmaps.h,v
retrieving revision 1.1.1.3
retrieving revision 1.1.1.2.2.1
diff -u -r1.1.1.3 -r1.1.1.2.2.1
Index: include/gsm-coding.h
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/include/gsm-coding.h,v
retrieving revision 1.1.1.1
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.1 -r1.1.1.1.2.1
--- include/gsm-coding.h	18 Feb 2002 02:06:40 -0000	1.1.1.1
+++ include/gsm-coding.h	25 Feb 2002 02:49:24 -0000	1.1.1.1.2.1
@@ -11,11 +11,14 @@
 #ifndef __gsm_coding_h
 #define __gsm_coding_h    
 
+#ifndef UCLINUX
 extern void EncodeDefault (unsigned char* dest, const unsigned char* src, int len);
 extern void DecodeDefault (unsigned char* dest, const unsigned char* src, int len);
+#endif /* UCLINUX */
 extern void EncodeUnicode (unsigned char* dest, const unsigned char* src, int len);
 extern void DecodeUnicode (unsigned char* dest, const unsigned char* src, int len);
 extern void EncodeUTF8    (unsigned char* dest, const unsigned char* src, int len);
+#ifndef UCLINUX
 extern void DecodeUTF8    (unsigned char* dest, const unsigned char* src, int len);
 extern void DecodeHexBin  (unsigned char* dest, const unsigned char* src, int len);
 extern void EncodeHexBin  (unsigned char* dest, const unsigned char* src, int len);
@@ -32,5 +35,6 @@
 extern unsigned char EncodeWithHexBinAlphabet (int digit);
 extern unsigned char EncodeWithBCDAlphabet    (int value);
 extern int           DecodeWithBCDAlphabet    (unsigned char value);
+#endif /* UCLINUX */
 
 #endif
Index: include/gsm-common.h
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/include/gsm-common.h,v
retrieving revision 1.1.1.8
retrieving revision 1.1.1.3.2.2
diff -u -r1.1.1.8 -r1.1.1.3.2.2
Index: include/gsm-networks.h
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/include/gsm-networks.h,v
retrieving revision 1.1.1.2
retrieving revision 1.1.1.2.2.1
diff -u -r1.1.1.2 -r1.1.1.2.2.1
--- include/gsm-networks.h	18 Feb 2002 02:06:39 -0000	1.1.1.2
+++ include/gsm-networks.h	25 Feb 2002 02:49:24 -0000	1.1.1.2.2.1
@@ -48,10 +48,12 @@
 
 /* These functions are used to search the structure defined above.*/
 char *GSM_GetNetworkName(char *NetworkCode);
+#ifndef UCLINUX
 char *GSM_GetNetworkCode(char *NetworkName);
 
 char *GSM_GetCountryName(char *CountryCode);
 char *GSM_GetCountryCode(char *CountryName);
+#endif /* UCLINUX */
 
 void EncodeNetworkCode(unsigned char* buffer, unsigned char* output);
 void DecodeNetworkCode(unsigned char* buffer, unsigned char* output);
Index: include/gsm-ringtones.h
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/include/gsm-ringtones.h,v
retrieving revision 1.1.1.3
retrieving revision 1.1.1.2.2.1
diff -u -r1.1.1.3 -r1.1.1.2.2.1
Index: include/gsm-sms.h
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/include/gsm-sms.h,v
retrieving revision 1.1.1.5
retrieving revision 1.1.1.5.2.1
diff -u -r1.1.1.5 -r1.1.1.5.2.1
--- include/gsm-sms.h	18 Feb 2002 02:06:40 -0000	1.1.1.5
+++ include/gsm-sms.h	25 Feb 2002 02:49:24 -0000	1.1.1.5.2.1
@@ -266,27 +266,35 @@
        TP-Status-Report-Request      (1 bit). See GSM 03.40 section 9.2.3.5 */
 } GSM_ETSISMSMessage;
 
-int   GSM_PackSemiOctetNumber  (u8 *Number, u8 *Output, bool semioctet);
-char *GSM_UnpackSemiOctetNumber(u8 *Number, bool semioctet);
+#ifndef UCLINUX
+extern int   GSM_PackSemiOctetNumber  (u8 *Number, u8 *Output, bool semioctet);
+extern char *GSM_UnpackSemiOctetNumber(u8 *Number, bool semioctet);
 
-int GSM_UnpackEightBitsToSeven(int fillbits, int in_length, int out_length, unsigned char *input, unsigned char *output);
-int GSM_PackSevenBitsToEight  (int offset, unsigned char *input, unsigned char *output);
+extern int GSM_UnpackEightBitsToSeven(int fillbits, int in_length, int out_length, unsigned char *input, unsigned char *output);
+extern int GSM_PackSevenBitsToEight  (int offset, unsigned char *input, unsigned char *output);
+#endif /* UCLINUX */
 
-GSM_Error GSM_EncodeETSISMS(GSM_SMSMessage *SMS, GSM_ETSISMSMessage *ETSI, SMS_MessageType PDU, int *length);
-GSM_Error GSM_DecodeETSISMS(GSM_SMSMessage *SMS, GSM_ETSISMSMessage *ETSI);
+extern GSM_Error GSM_EncodeETSISMS(GSM_SMSMessage *SMS, GSM_ETSISMSMessage *ETSI, SMS_MessageType PDU, int *length);
+extern GSM_Error GSM_DecodeETSISMS(GSM_SMSMessage *SMS, GSM_ETSISMSMessage *ETSI);
 
-GSM_Error GSM_EncodeSMSDateTime(GSM_DateTime *DT, unsigned char *req);
+#ifndef UCLINUX
+extern GSM_Error GSM_EncodeSMSDateTime(GSM_DateTime *DT, unsigned char *req);
+#endif /* UCLINUX */
 
-GSM_Error GSM_DecodeETSISMSSubmitData(GSM_SMSMessage *SMS, GSM_ETSISMSMessage *ETSI);
+extern GSM_Error GSM_DecodeETSISMSSubmitData(GSM_SMSMessage *SMS, GSM_ETSISMSMessage *ETSI);
 
-GSM_Error GSM_DecodeETSISMSStatusReportData(GSM_SMSMessage *SMS, GSM_ETSISMSMessage *ETSI);
+extern GSM_Error GSM_DecodeETSISMSStatusReportData(GSM_SMSMessage *SMS, GSM_ETSISMSMessage *ETSI);
 
-void GSM_SetDefaultSMSData(GSM_SMSMessage *SMS);
-GSM_Error EncodeUDHHeader(char *text, GSM_UDH UDHType);
+#ifndef UCLINUX
+extern void GSM_SetDefaultSMSData(GSM_SMSMessage *SMS);
+extern GSM_Error EncodeUDHHeader(char *text, GSM_UDH UDHType);
+#endif /* UCLINUX */
 
-int GSM_MakeSinglePartSMS2(GSM_SMSMessage *SMS,
+#ifndef UCLINUX
+extern int GSM_MakeSinglePartSMS2(GSM_SMSMessage *SMS,
     unsigned char *MessageBuffer,int cur, GSM_UDH UDHType, GSM_Coding_Type Coding);
-void GSM_MakeMultiPartSMS2(GSM_MultiSMSMessage *SMS,
+#endif /* UCLINUX */
+extern void GSM_MakeMultiPartSMS2(GSM_MultiSMSMessage *SMS,
     unsigned char *MessageBuffer,int MessageLength, GSM_UDH UDHType, GSM_Coding_Type Coding);
 
 #endif	/* __gsm_sms_h */
Index: include/uccompat.h
===================================================================
RCS file: include/uccompat.h
diff -N include/uccompat.h
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ include/uccompat.h	16 Mar 2002 21:00:05 -0000	1.1.2.6
@@ -0,0 +1,43 @@
+/*
+
+  $Id$
+
+  G N O K I I
+
+  A Linux/Unix toolset and driver for Nokia mobile phones.
+
+  Released under the terms of the GNU GPL, see file COPYING for more details.
+
+*/
+
+#ifndef __UCCOMPAT_H__
+#define __UCCOMPAT_H__
+
+#ifdef UCCOMPAT
+
+
+/* Handle non-existing atoi() */
+#include <limits.h>
+#define atoi(s) ({ \
+		long _atoi_l=strtol((s), (char **)NULL, 10); \
+		/**/ if (_atoi_l<INT_MIN) _atoi_l=INT_MIN; \
+		else if (_atoi_l>INT_MAX) _atoi_l=INT_MAX; \
+		_atoi_l; \
+		})
+
+#define strchr _Xstrchr
+#define strrchr _Xstrrchr
+#include <string.h>
+#undef strchr
+#undef strrchr
+extern char * strchr __P ((const char *, int));
+extern char * strrchr __P ((const char *, int));
+
+extern pid_t getpid(void);
+extern int execv(const char *path, char *const argv[]);
+extern int nice(int inc);
+
+
+#endif /* UCCOMPAT */
+
+#endif /* __UCCOMPAT_H__ */
Index: include/data/at-emulator.h
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/include/data/at-emulator.h,v
retrieving revision 1.1.1.2
retrieving revision 1.1.1.2.2.1
diff -u -r1.1.1.2 -r1.1.1.2.2.1
--- include/data/at-emulator.h	18 Feb 2002 02:06:41 -0000	1.1.1.2
+++ include/data/at-emulator.h	25 Feb 2002 02:49:24 -0000	1.1.1.2.2.1
@@ -18,19 +18,11 @@
 	/* Prototypes */
 bool	ATEM_Initialise(int read_fd, int write_fd, char *model, char *port);
 void	ATEM_HandleIncomingData(char *buffer, int length);
-void	ATEM_InitRegisters(void);
-void	ATEM_StringOut(char *buffer);
-void	ATEM_ParseAT(char *cmd_buffer);
-void	ATEM_ParseSMS(char *cmd_buffer);
-void	ATEM_ParseDIR(char *cmd_buffer);
-bool	ATEM_CommandPlusC(char **buf);
-bool	ATEM_CommandPlusG(char **buf);
-int		ATEM_GetNum(char **p);
 void	ATEM_ModemResult(int code);
 void    ATEM_CallPassup(char c);
 
 	/* Global variables */
-bool	ATEM_Initialised;
+extern bool	ATEM_Initialised;
 
 	/* Definition of modem result codes - these are returned to "terminal"
        numerically or as a string depending on the setting of S12 */
Index: include/data/datapump.h
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/include/data/datapump.h,v
retrieving revision 1.1.1.2
retrieving revision 1.1.1.2.2.1
diff -u -r1.1.1.2 -r1.1.1.2.2.1
--- include/data/datapump.h	18 Feb 2002 02:06:41 -0000	1.1.1.2
+++ include/data/datapump.h	25 Feb 2002 02:49:24 -0000	1.1.1.2.2.1
@@ -19,7 +19,6 @@
 
 void    DP_CallFinished(void);
 bool	DP_Initialise(int read_fd, int write_fd);
-int     DP_CallBack(RLP_UserInds ind, u8 *buffer, int length);
 void    DP_CallPassup(char c);
 
 	/* All defines and prototypes from here down are specific to 
Index: include/data/rlp-common.h
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/include/data/rlp-common.h,v
retrieving revision 1.1.1.3
retrieving revision 1.1.1.3.2.1
diff -u -r1.1.1.3 -r1.1.1.3.2.1
--- include/data/rlp-common.h	18 Feb 2002 02:06:41 -0000	1.1.1.3
+++ include/data/rlp-common.h	25 Feb 2002 02:49:24 -0000	1.1.1.3.2.1
@@ -172,10 +172,7 @@
 /* Prototypes for functions. */
 
 void RLP_DisplayF96Frame(RLP_F96Frame *frame);
-void RLP_DecodeF96Header(RLP_F96Frame *frame, RLP_F96Header *header);
-void RLP_DisplayXID(u8 *frame);
 void RLP_Initialise(bool (*rlp_send_function)(RLP_F96Frame *frame, bool out_dtx), int (*rlp_passup)(RLP_UserInds ind, u8 *buffer, int length));
-void RLP_Init_link_vars(void);
 void RLP_SetUserRequest(RLP_UserRequests type, bool value);
 void RLP_Send(char *buffer, int length);
 
Index: include/data/virtmodem.h
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/include/data/virtmodem.h,v
retrieving revision 1.1.1.2
retrieving revision 1.1.1.2.2.2
diff -u -r1.1.1.2 -r1.1.1.2.2.2
--- include/data/virtmodem.h	18 Feb 2002 02:06:41 -0000	1.1.1.2
+++ include/data/virtmodem.h	3 Mar 2002 02:08:41 -0000	1.1.1.2.2.2
@@ -15,7 +15,7 @@
 
 /* Prototypes */
 
-bool VM_Initialise(char *model,
+extern bool VM_Initialise(char *model,
 		   char *port,
 		   char *initlength,
 		   GSM_ConnectionType connection,
@@ -23,15 +23,7 @@
 		   bool debug_mode,
 		   bool GSM_Init,
 		   char *synchronizetime);
-int  VM_PtySetup(char *bindir);
-void VM_ThreadLoop(void);
-void VM_CharHandler(void);
-int  VM_GetMasterPty(char **name);
-void VM_Terminate(void);
-GSM_Error VM_GSMInitialise(char *model,
-			   char *port,
-			   char *initlength,
-			   GSM_ConnectionType connection,
-			   char *synchronizetime);
+extern void VM_Terminate(void);
+extern bool	VM_ThreadLoop(void);
 
 #endif	/* __virtmodem_h */
Index: include/devices/device.h
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/include/devices/device.h,v
retrieving revision 1.1.1.2
retrieving revision 1.1.1.1.2.3
diff -u -r1.1.1.2 -r1.1.1.1.2.3
--- include/devices/device.h	17 Mar 2002 20:28:43 -0000	1.1.1.2
+++ include/devices/device.h	17 Mar 2002 21:51:18 -0000	1.1.1.1.2.3
@@ -22,6 +22,7 @@
    IR (only with 61x0 models) and MBUS (61x0, 640, 6160) */
 typedef enum {
   GCT_FBUS,     /* FBUS connection. */
+#ifndef UCLINUX
   GCT_Infrared, /* FBUS over direct infrared connection - 61xx. */
   GCT_Irda,     /* FBUS over Irda sockets - 7110, 6210, etc. */
   GCT_MBUS,     /* MBUS */
@@ -29,23 +30,16 @@
   GCT_Tekram,   /* FBUS over direct infrared connection (Tekram device) - 61xx. */
   GCT_AT,       /* AT commands */
   GCT_FBUS3110  /* FBUS version 1 used in N3110 */
+#endif /* UCLINUX */
 } GSM_ConnectionType;
 
+extern int device_portfd;
+
 #ifndef WIN32
   #include <unistd.h>
   #include "misc.h"
 
-  int device_getfd(void);
-
-  int device_open(__const char *__file, int __with_odd_parity);
-  void device_reset(void);
-
-  size_t device_read(__ptr_t __buf, size_t __nbytes);
   size_t device_write(__const __ptr_t __buf, size_t __n);
-
-  #ifdef DEBUG
-    void device_dumpserial(void);
-  #endif
 #else
   size_t device_write(const __ptr_t __buf, size_t __n);
 #endif
@@ -59,5 +53,6 @@
 extern char PortDevice[GSM_MAX_DEVICE_NAME_LENGTH];
 
 bool StartConnection (char *port_device, bool with_odd_parity, GSM_ConnectionType con);
+extern void SigHandler(int status);
 
 #endif  /* __device_h */
Index: include/devices/unixserial.h
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/include/devices/unixserial.h,v
retrieving revision 1.1.1.3
retrieving revision 1.1.1.3.2.1
diff -u -r1.1.1.3 -r1.1.1.3.2.1
--- include/devices/unixserial.h	18 Feb 2002 02:06:40 -0000	1.1.1.3
+++ include/devices/unixserial.h	25 Feb 2002 02:49:24 -0000	1.1.1.3.2.1
@@ -24,18 +24,20 @@
 
 #include "misc.h"
 
-int serial_open(__const char *__file, int __oflag);
-int serial_close(int __fd);
+#ifndef UCLINUX
+extern int serial_open(__const char *__file, int __oflag);
+#endif /* UCLINUX */
+extern int serial_close(int __fd);
 
-int serial_opendevice(__const char *__file, int __with_odd_parity, int __with_async, int __with_hw_handshake);
+extern int serial_opendevice(__const char *__file, int __with_odd_parity, int __with_async, int __with_hw_handshake);
 
-void serial_setdtrrts(int __fd, int __dtr, int __rts);
-void serial_changespeed(int __fd, int __speed);
+extern void serial_setdtrrts(int __fd, int __dtr, int __rts);
+extern void serial_changespeed(int __fd, int __speed);
 
-size_t serial_read(int __fd, __ptr_t __buf, size_t __nbytes);
-size_t serial_write(int __fd, __const __ptr_t __buf, size_t __n);
+extern size_t serial_read(int __fd, __ptr_t __buf, size_t __nbytes);
+extern size_t serial_write(int __fd, __const __ptr_t __buf, size_t __n);
 
-int serial_select(int fd, struct timeval *timeout);
+extern int serial_select(int fd, struct timeval *timeout);
 
 #endif  /* __devices_unixserial_h */
 
Index: include/files/cfgreader.h
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/include/files/cfgreader.h,v
retrieving revision 1.1.1.1
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.1 -r1.1.1.1.2.1
--- include/files/cfgreader.h	18 Feb 2002 02:06:41 -0000	1.1.1.1
+++ include/files/cfgreader.h	25 Feb 2002 02:49:24 -0000	1.1.1.1.2.1
@@ -35,6 +35,8 @@
         char *section;
 };
 
+#ifndef UCLINUX
+
 /* Function prototypes */
 
 struct CFG_Header *CFG_ReadFile(char *filename);
@@ -43,10 +45,16 @@
                            char *value);
 int                CFG_WriteFile(struct CFG_Header *cfg, char *filename);
 
+#endif /* UCLINUX */
+
 int 		  CFG_ReadConfig(char **model, char **port, char **initlength,
-                                 char **connection, char **bindir, char **synchronizetime,
+                                 char **connection, char **bindir,
                                  bool isgnokiid);
 
+#ifndef UCLINUX
+
 struct CFG_Header *CFG_FindGnokiirc();
+
+#endif /* UCLINUX */
 
 #endif /* _CFGREADER_H */
Index: include/files/gsm-filetypes.h
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/include/files/gsm-filetypes.h,v
retrieving revision 1.1.1.2
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.2 -r1.1.1.1.2.1
Index: include/newmodules/n3110.h
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/include/newmodules/n3110.h,v
retrieving revision 1.1.1.2
retrieving revision 1.1.2.1
diff -u -r1.1.1.2 -r1.1.2.1
Index: include/newmodules/n6110.h
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/include/newmodules/n6110.h,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.5
diff -u -r1.1.1.6 -r1.1.1.1.2.5
--- include/newmodules/n6110.h	17 Mar 2002 20:36:59 -0000	1.1.1.6
+++ include/newmodules/n6110.h	5 Mar 2002 21:38:15 -0000	1.1.1.1.2.5
@@ -51,168 +51,192 @@
 extern GSM_Information N6110_Information;
 
 /* Prototypes for the functions designed to be used externally. */
-GSM_Error N6110_Initialise(char *port_device, char *initlength,
+static GSM_Error N6110_Initialise(char *port_device, char *initlength,
                           GSM_ConnectionType connection,
                           void (*rlp_callback)(RLP_F96Frame *frame));
 
-void      N6110_DispatchMessage(u16 MessageLength, u8 *MessageBuffer,
+static void      N6110_DispatchMessage(u16 MessageLength, u8 *MessageBuffer,
                               u8 MessageType);
 
 GSM_Error N6110_SendStatusRequest(void);
 
-int       N6110_GetMemoryType(GSM_MemoryType memory_type);
+static int       N6110_GetMemoryType(GSM_MemoryType memory_type);
 
-GSM_Error N6110_GetVoiceMailbox ( GSM_PhonebookEntry *entry);  
+#ifndef UCLINUX
+static GSM_Error N6110_GetVoiceMailbox ( GSM_PhonebookEntry *entry);  
 
-GSM_Error N6110_GetOperatorName ( GSM_Network *operator);  
-GSM_Error N6110_SetOperatorName ( GSM_Network *operator);    
+static GSM_Error N6110_GetOperatorName ( GSM_Network *operator);  
+static GSM_Error N6110_SetOperatorName ( GSM_Network *operator);    
+#endif /* UCLINUX */
 
-GSM_Error N6110_GetMemoryLocation(GSM_PhonebookEntry *entry);
-GSM_Error N6110_WritePhonebookLocation(GSM_PhonebookEntry *entry);
+static GSM_Error N6110_GetMemoryLocation(GSM_PhonebookEntry *entry);
+static GSM_Error N6110_WritePhonebookLocation(GSM_PhonebookEntry *entry);
 
-GSM_Error N6110_GetSpeedDial(GSM_SpeedDial *entry);
-GSM_Error N6110_SetSpeedDial(GSM_SpeedDial *entry);
+static GSM_Error N6110_GetSpeedDial(GSM_SpeedDial *entry);
+static GSM_Error N6110_SetSpeedDial(GSM_SpeedDial *entry);
 
-GSM_Error N6110_GetMemoryStatus(GSM_MemoryStatus *Status);
-GSM_Error N6110_GetSMSStatus(GSM_SMSStatus *Status);
-GSM_Error N6110_GetSMSCenter(GSM_MessageCenter *MessageCenter);
+static GSM_Error N6110_GetMemoryStatus(GSM_MemoryStatus *Status);
+#ifndef UCLINUX
+static GSM_Error N6110_GetSMSStatus(GSM_SMSStatus *Status);
+static GSM_Error N6110_GetSMSCenter(GSM_MessageCenter *MessageCenter);
   
-GSM_Error N6110_GetSMSMessage(GSM_SMSMessage *Message);
-GSM_Error N6110_DeleteSMSMessage(GSM_SMSMessage *Message);
-GSM_Error N6110_SendSMSMessage(GSM_SMSMessage *Message);
-GSM_Error N6110_SaveSMSMessage(GSM_SMSMessage *Message);
+static GSM_Error N6110_GetSMSMessage(GSM_SMSMessage *Message);
+static GSM_Error N6110_DeleteSMSMessage(GSM_SMSMessage *Message);
+static GSM_Error N6110_SendSMSMessage(GSM_SMSMessage *Message);
+static GSM_Error N6110_SaveSMSMessage(GSM_SMSMessage *Message);
+#endif /* UCLINUX */
 
-GSM_Error N6110_GetRFLevel(GSM_RFUnits *units, float *level);
-GSM_Error N6110_GetBatteryLevel(GSM_BatteryUnits *units, float *level);
-GSM_Error N6110_GetPowerSource(GSM_PowerSource *source);
-GSM_Error N6110_GetDisplayStatus(int *Status);
+static GSM_Error N6110_GetRFLevel(GSM_RFUnits *units, float *level);
+static GSM_Error N6110_GetBatteryLevel(GSM_BatteryUnits *units, float *level);
+static GSM_Error N6110_GetPowerSource(GSM_PowerSource *source);
+#ifndef UCLINUX
+static GSM_Error N6110_GetDisplayStatus(int *Status);
 
-GSM_Error N6110_EnterSecurityCode(GSM_SecurityCode SecurityCode);
-GSM_Error N6110_GetSecurityCodeStatus(int *Status);
-GSM_Error N6110_GetSecurityCode(GSM_SecurityCode *SecurityCode);
+static GSM_Error N6110_EnterSecurityCode(GSM_SecurityCode SecurityCode);
+static GSM_Error N6110_GetSecurityCodeStatus(int *Status);
+static GSM_Error N6110_GetSecurityCode(GSM_SecurityCode *SecurityCode);
 
-GSM_Error N6110_GetSMSCenter(GSM_MessageCenter *MessageCenter);
-GSM_Error N6110_SetSMSCenter(GSM_MessageCenter *MessageCenter);
+static GSM_Error N6110_GetSMSCenter(GSM_MessageCenter *MessageCenter);
+static GSM_Error N6110_SetSMSCenter(GSM_MessageCenter *MessageCenter);
+#endif /* UCLINUX */
 
-GSM_Error N6110_GetIMEI(char *imei);
-GSM_Error N6110_GetRevision(char *revision);
-GSM_Error N6110_GetModel(char *model);
-GSM_Error N6110_GetManufacturer(char *manufacturer);
+static GSM_Error N6110_GetIMEI(char *imei);
+static GSM_Error N6110_GetRevision(char *revision);
+static GSM_Error N6110_GetModel(char *model);
+static GSM_Error N6110_GetManufacturer(char *manufacturer);
 
-GSM_Error N6110_GetDateTime(GSM_DateTime *date_time);
-GSM_Error N6110_SetDateTime(GSM_DateTime *date_time);
+#ifndef UCLINUX
+static GSM_Error N6110_GetDateTime(GSM_DateTime *date_time);
+static GSM_Error N6110_SetDateTime(GSM_DateTime *date_time);
 
-GSM_Error N6110_PrivGetDateTime(GSM_DateTime *date_time, int msgtype);
-GSM_Error N6110_PrivSetDateTime(GSM_DateTime *date_time, int msgtype);
+static GSM_Error N6110_PrivGetDateTime(GSM_DateTime *date_time, int msgtype);
+static GSM_Error N6110_PrivSetDateTime(GSM_DateTime *date_time, int msgtype);
 
-GSM_Error N6110_GetAlarm(int alarm_number, GSM_DateTime *date_time);
-GSM_Error N6110_SetAlarm(int alarm_number, GSM_DateTime *date_time);
+static GSM_Error N6110_GetAlarm(int alarm_number, GSM_DateTime *date_time);
+static GSM_Error N6110_SetAlarm(int alarm_number, GSM_DateTime *date_time);
 
-GSM_Error N6110_PrivGetAlarm(int alarm_number, GSM_DateTime *date_time, int msgtype);
-GSM_Error N6110_PrivSetAlarm(int alarm_number, GSM_DateTime *date_time, int msgtype);
+static GSM_Error N6110_PrivGetAlarm(int alarm_number, GSM_DateTime *date_time, int msgtype);
+static GSM_Error N6110_PrivSetAlarm(int alarm_number, GSM_DateTime *date_time, int msgtype);
 
-GSM_Error N6110_DialVoice(char *Number);
-GSM_Error N6110_DialData(char *Number, char type,  void (* callpassup)(char c));
-GSM_Error N6110_AnswerCall(char s);
+static GSM_Error N6110_DialVoice(char *Number);
+#endif /* UCLINUX */
+static GSM_Error N6110_DialData(char *Number, char type,  void (* callpassup)(char c));
+#ifndef UCLINUX
+static GSM_Error N6110_AnswerCall(char s);
 
-GSM_Error N6110_GetIncomingCallNr(char *Number);
+static GSM_Error N6110_GetIncomingCallNr(char *Number);
 
-GSM_Error N6110_SendBitmap(char *NetworkCode, int width, int height,
-                          unsigned char *bitmap);
-GSM_Error N6110_GetNetworkInfo(GSM_NetworkInfo *NetworkInfo);
+static GSM_Error N6110_GetNetworkInfo(GSM_NetworkInfo *NetworkInfo);
 
-GSM_Error N6110_GetCalendarNote(GSM_CalendarNote *CalendarNote);
-GSM_Error N6110_WriteCalendarNote(GSM_CalendarNote *CalendarNote);
-GSM_Error N6110_DeleteCalendarNote(GSM_CalendarNote *CalendarNote);
+static GSM_Error N6110_GetCalendarNote(GSM_CalendarNote *CalendarNote);
+static GSM_Error N6110_WriteCalendarNote(GSM_CalendarNote *CalendarNote);
+static GSM_Error N6110_DeleteCalendarNote(GSM_CalendarNote *CalendarNote);
 
-GSM_Error N6110_NetMonitor(unsigned char mode, char *Screen);
+static GSM_Error N6110_NetMonitor(unsigned char mode, char *Screen);
 
-GSM_Error N6110_PlayTone(int Herz, u8 Volume);
+static GSM_Error N6110_PlayTone(int Herz, u8 Volume);
 
-GSM_Error N6110_SetBitmap( GSM_Bitmap *Bitmap );
-GSM_Error N6110_GetBitmap( GSM_Bitmap *Bitmap );
+static GSM_Error N6110_SetBitmap( GSM_Bitmap *Bitmap );
+static GSM_Error N6110_GetBitmap( GSM_Bitmap *Bitmap );
 
-GSM_Error N6110_SetRingTone(GSM_Ringtone *ringtone, int *maxlength);
-GSM_Error N6110_SetBinRingTone(GSM_BinRingtone *ringtone);
-GSM_Error N6110_GetBinRingTone(GSM_BinRingtone *ringtone);
+static GSM_Error N6110_SetRingTone(GSM_Ringtone *ringtone, int *maxlength);
+static GSM_Error N6110_SetBinRingTone(GSM_BinRingtone *ringtone);
+static GSM_Error N6110_GetBinRingTone(GSM_BinRingtone *ringtone);
 
-GSM_Error N6110_EnableDisplayOutput();
-GSM_Error N6110_DisableDisplayOutput();
+static GSM_Error N6110_EnableDisplayOutput();
+static GSM_Error N6110_DisableDisplayOutput();
 
-GSM_Error N6110_EnableCellBroadcast ();
-GSM_Error N6110_DisableCellBroadcast(void);
-GSM_Error N6110_ReadCellBroadcast (GSM_CBMessage *Message);
+static GSM_Error N6110_EnableCellBroadcast ();
+static GSM_Error N6110_DisableCellBroadcast(void);
+static GSM_Error N6110_ReadCellBroadcast (GSM_CBMessage *Message);
 
-GSM_Error N6110_SendDTMF(char *String);
+static GSM_Error N6110_SendDTMF(char *String);
+#endif /* UCLINUX */
 
-GSM_Error N6110_Reset(unsigned char type);
+static GSM_Error N6110_Reset(unsigned char type);
 
-GSM_Error N6110_GetProfile(GSM_Profile *Profile);
-GSM_Error N6110_SetProfile(GSM_Profile *Profile);
-bool      N6110_SendRLPFrame(RLP_F96Frame *frame, bool out_dtx);
+#ifndef UCLINUX
+static GSM_Error N6110_GetProfile(GSM_Profile *Profile);
+static GSM_Error N6110_SetProfile(GSM_Profile *Profile);
+#endif /* UCLINUX */
+static bool      N6110_SendRLPFrame(RLP_F96Frame *frame, bool out_dtx);
 
-GSM_Error N6110_CancelCall(void);
+static GSM_Error N6110_CancelCall(void);
 
-GSM_Error N6110_PressKey(int key, int event);
+#ifndef UCLINUX
+static GSM_Error N6110_PressKey(int key, int event);
 
-GSM_Error N6110_GetProductProfileSetting (GSM_PPS *PPS);
-GSM_Error N6110_SetProductProfileSetting (GSM_PPS *PPS);
+static GSM_Error N6110_GetProductProfileSetting (GSM_PPS *PPS);
+static GSM_Error N6110_SetProductProfileSetting (GSM_PPS *PPS);
 
-GSM_Error N6110_CallDivert(GSM_CallDivert *cd);
+static GSM_Error N6110_CallDivert(GSM_CallDivert *cd);
+#endif /* UCLINUX */
 
-void N6110_RX_HandleRLPMessage(u8 *MessageBuffer);
+static void N6110_RX_HandleRLPMessage(u8 *MessageBuffer);
 
-GSM_Error N6110_SendIMEIFrame();
-GSM_Error N6110_SendIDFrame();
-GSM_Error N6110_SendHWFrame();
+static GSM_Error N6110_SendIMEIFrame();
+static GSM_Error N6110_SendIDFrame();
+static GSM_Error N6110_SendHWFrame();
 
-GSM_Error N6110_EnableExtendedCommands (unsigned char status);
+static GSM_Error N6110_EnableExtendedCommands (unsigned char status);
 
-GSM_Error N6110_Tests();
+#ifndef UCLINUX
+static GSM_Error N6110_Tests();
 
-void N6110_DisplayTestsInfo(u8 *MessageBuffer);
+static void N6110_DisplayTestsInfo(u8 *MessageBuffer);
 
-GSM_Error N6110_SimlockInfo(GSM_AllSimlocks *siml);
-GSM_Error N6110_GetSMSFolders ( GSM_SMSFolders *folders);
+static GSM_Error N6110_SimlockInfo(GSM_AllSimlocks *siml);
+static GSM_Error N6110_GetSMSFolders ( GSM_SMSFolders *folders);
 
-GSM_Error N6110_ResetPhoneSettings();
+static GSM_Error N6110_ResetPhoneSettings();
+#endif /* UCLINUX */
 
-void N6110_Dispatch0x01Message(u16 MessageLength, u8 *MessageBuffer, u8 MessageType);
+static void N6110_Dispatch0x01Message(u16 MessageLength, u8 *MessageBuffer, u8 MessageType);
 
-void N6110_ReplySendSMSMessage(u16 MessageLength, u8 *MessageBuffer, u8 MessageType);
-void N6110_ReplySetSMSCenter  (u16 MessageLength, u8 *MessageBuffer, u8 MessageType);
-void N6110_ReplyGetSMSCenter  (u16 MessageLength, u8 *MessageBuffer, u8 MessageType);
-void N6110_Dispatch0x02Message(u16 MessageLength, u8 *MessageBuffer, u8 MessageType);
-void N6110_ReplySetCellBroadcast (u16 MessageLength, u8 *MessageBuffer, u8 MessageType);
-void N6110_ReplyReadCellBroadcast(u16 MessageLength, u8 *MessageBuffer, u8 MessageType);
+#ifndef UCLINUX
+static void N6110_ReplySendSMSMessage(u16 MessageLength, u8 *MessageBuffer, u8 MessageType);
+static void N6110_ReplySetSMSCenter  (u16 MessageLength, u8 *MessageBuffer, u8 MessageType);
+static void N6110_ReplyGetSMSCenter  (u16 MessageLength, u8 *MessageBuffer, u8 MessageType);
+static void N6110_Dispatch0x02Message(u16 MessageLength, u8 *MessageBuffer, u8 MessageType);
+static void N6110_ReplySetCellBroadcast (u16 MessageLength, u8 *MessageBuffer, u8 MessageType);
+static void N6110_ReplyReadCellBroadcast(u16 MessageLength, u8 *MessageBuffer, u8 MessageType);
 
-void N6110_ReplyCallDivert    (u16 MessageLength, u8 *MessageBuffer, u8 MessageType);
-void N6110_Dispatch0x06Message(u16 MessageLength, u8 *MessageBuffer, u8 MessageType);
+static void N6110_ReplyCallDivert    (u16 MessageLength, u8 *MessageBuffer, u8 MessageType);
+static void N6110_Dispatch0x06Message(u16 MessageLength, u8 *MessageBuffer, u8 MessageType);
+#endif /* UCLINUX */
 
-void N6110_ReplySetDateTime(u16 MessageLength,u8 *MessageBuffer, u8 MessageType);
-void N6110_ReplyGetDateTime(u16 MessageLength,u8 *MessageBuffer, u8 MessageType);
-void N6110_ReplySetAlarm   (u16 MessageLength,u8 *MessageBuffer, u8 MessageType);
-void N6110_ReplyGetAlarm   (u16 MessageLength,u8 *MessageBuffer, u8 MessageType);
+#ifndef UCLINUX
+static void N6110_ReplySetDateTime(u16 MessageLength,u8 *MessageBuffer, u8 MessageType);
+static void N6110_ReplyGetDateTime(u16 MessageLength,u8 *MessageBuffer, u8 MessageType);
+static void N6110_ReplySetAlarm   (u16 MessageLength,u8 *MessageBuffer, u8 MessageType);
+static void N6110_ReplyGetAlarm   (u16 MessageLength,u8 *MessageBuffer, u8 MessageType);
+#endif /* UCLINUX */
 
-void N6110_ReplyEnableExtendedCommands  (u16 MessageLength,u8 *MessageBuffer,u8 MessageType);
-void N6110_ReplyResetPhoneSettings      (u16 MessageLength,u8 *MessageBuffer,u8 MessageType);
-void N6110_ReplyIMEI                    (u16 MessageLength,u8 *MessageBuffer,u8 MessageType);
-void N6110_ReplyGetProductProfileSetting(u16 MessageLength,u8 *MessageBuffer,u8 MessageType);
-void N6110_ReplySetProductProfileSetting(u16 MessageLength,u8 *MessageBuffer,u8 MessageType);
-void N6110_ReplyNetmonitor              (u16 MessageLength,u8 *MessageBuffer,u8 MessageType);
-void N6110_ReplySimlockInfo             (u16 MessageLength,u8 *MessageBuffer,u8 MessageType);
-void N6110_ReplyPlayTone                (u16 MessageLength,u8 *MessageBuffer,u8 MessageType);
-void N6110_ReplyHW                      (u16 MessageLength,u8 *MessageBuffer,u8 MessageType);
-void N6110_Dispatch0x40Message          (u16 MessageLength,u8 *MessageBuffer,u8 MessageType);
+static void N6110_ReplyEnableExtendedCommands  (u16 MessageLength,u8 *MessageBuffer,u8 MessageType);
+#ifndef UCLINUX
+static void N6110_ReplyResetPhoneSettings      (u16 MessageLength,u8 *MessageBuffer,u8 MessageType);
+#endif /* UCLINUX */
+static void N6110_ReplyIMEI                    (u16 MessageLength,u8 *MessageBuffer,u8 MessageType);
+#ifndef UCLINUX
+static void N6110_ReplyGetProductProfileSetting(u16 MessageLength,u8 *MessageBuffer,u8 MessageType);
+static void N6110_ReplySetProductProfileSetting(u16 MessageLength,u8 *MessageBuffer,u8 MessageType);
+static void N6110_ReplyNetmonitor              (u16 MessageLength,u8 *MessageBuffer,u8 MessageType);
+static void N6110_ReplySimlockInfo             (u16 MessageLength,u8 *MessageBuffer,u8 MessageType);
+static void N6110_ReplyPlayTone                (u16 MessageLength,u8 *MessageBuffer,u8 MessageType);
+#endif /* UCLINUX */
+static void N6110_ReplyHW                      (u16 MessageLength,u8 *MessageBuffer,u8 MessageType);
+static void N6110_Dispatch0x40Message          (u16 MessageLength,u8 *MessageBuffer,u8 MessageType);
 
-void N6110_DispatchACKMessage (u16 MessageLength, u8 *MessageBuffer, u8 MessageType);
-void N6110_ReplyID(u16 MessageLength, u8 *MessageBuffer, u8 MessageType);
+static void N6110_DispatchACKMessage (u16 MessageLength, u8 *MessageBuffer, u8 MessageType);
+static void N6110_ReplyID(u16 MessageLength, u8 *MessageBuffer, u8 MessageType);
 
-GSM_Error GSM_EncodeNokiaSMSFrame(GSM_SMSMessage *SMS, unsigned char *req, int *length, SMS_MessageType PDU);
-GSM_Error GSM_DecodeNokiaSMSFrame(GSM_SMSMessage *SMS, unsigned char *req, int length);
+#ifndef UCLINUX
+static GSM_Error GSM_EncodeNokiaSMSFrame(GSM_SMSMessage *SMS, unsigned char *req, int *length, SMS_MessageType PDU);
+static GSM_Error GSM_DecodeNokiaSMSFrame(GSM_SMSMessage *SMS, unsigned char *req, int length);
 
-int N6110_MakeCallerGroupFrame (unsigned char *req,GSM_Bitmap Bitmap);
-int N6110_MakeOperatorLogoFrame(unsigned char *req,GSM_Bitmap Bitmap);
-int N6110_MakeStartupLogoFrame (unsigned char *req,GSM_Bitmap Bitmap);
+static int N6110_MakeCallerGroupFrame (unsigned char *req,GSM_Bitmap Bitmap);
+static int N6110_MakeOperatorLogoFrame(unsigned char *req,GSM_Bitmap Bitmap);
+static int N6110_MakeStartupLogoFrame (unsigned char *req,GSM_Bitmap Bitmap);
+#endif /* UCLINUX */
 
 #endif /* __n_6110_h */
Index: include/newmodules/n7110.h
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/include/newmodules/n7110.h,v
retrieving revision 1.1.1.2
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.2 -r1.1.1.1.2.1
Index: include/newmodules/sniff/sniff.h
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/include/newmodules/sniff/sniff.h,v
retrieving revision 1.1.1.6
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.6 -r1.1.1.1.2.1
Index: include/protocol/fbus.h
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/include/protocol/fbus.h,v
retrieving revision 1.1.1.1
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.1 -r1.1.1.1.2.1
--- include/protocol/fbus.h	18 Feb 2002 02:06:41 -0000	1.1.1.1
+++ include/protocol/fbus.h	25 Feb 2002 02:49:24 -0000	1.1.1.1.2.1
@@ -49,13 +49,4 @@
   FBUS_RX_GetMessage
 };
 
-GSM_Error FBUS_Initialise(char *port_device, char *initlength,
-                          GSM_ConnectionType connection,
-                          void (*rlp_callback)(RLP_F96Frame *frame));
-
-int FBUS_SendMessage(u16 message_length, u8 message_type, u8 *buffer);
-int FBUS_SendFrame(u16 message_length, u8 message_type, u8 *buffer);
-void FBUS_Terminate(void);
-void FBUS_RX_StateMachine(unsigned char rx_byte);
-
 #endif /* __fbus_h */
Index: include/protocol/fbus3110.h
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/include/protocol/fbus3110.h,v
retrieving revision 1.1.1.1
retrieving revision 1.1.2.1
diff -u -r1.1.1.1 -r1.1.2.1
Index: utils/Makefile
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/utils/Makefile,v
retrieving revision 1.1.1.2
retrieving revision 1.1.1.2.2.1
diff -u -r1.1.1.2 -r1.1.1.2.2.1
--- utils/Makefile	18 Feb 2002 02:06:42 -0000	1.1.1.2
+++ utils/Makefile	25 Feb 2002 02:49:24 -0000	1.1.1.2.2.1
@@ -11,7 +11,7 @@
 
 OBJS = mgnokiidev.o
 
-all: mgnokiidev
+all: #mgnokiidev
 
 mgnokiidev: $(OBJS) 
 
Index: win32_makefile/dll_vc6/GnokiiAPI.def
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/win32_makefile/dll_vc6/GnokiiAPI.def,v
retrieving revision 1.1.1.2
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.2 -r1.1.1.1.2.1
Index: win32_makefile/dll_vc6/GnokiiAPI.dsp
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/win32_makefile/dll_vc6/GnokiiAPI.dsp,v
retrieving revision 1.1.1.3
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.3 -r1.1.1.1.2.1
Index: win32_makefile/dll_vc6/Script1.rc
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/win32_makefile/dll_vc6/Script1.rc,v
retrieving revision 1.1.1.1
retrieving revision 1.1.2.1
diff -u -r1.1.1.1 -r1.1.2.1
Index: win32_makefile/dll_vc6/clean.bat
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/win32_makefile/dll_vc6/clean.bat,v
retrieving revision 1.1.1.2
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.2 -r1.1.1.1.2.1
Index: win32_makefile/dll_vc6/gnokiiapi.c
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/win32_makefile/dll_vc6/gnokiiapi.c,v
retrieving revision 1.1.1.2
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.2 -r1.1.1.1.2.1
Index: win32_makefile/dll_vc6/gnokiiapi.h
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/win32_makefile/dll_vc6/gnokiiapi.h,v
retrieving revision 1.1.1.2
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.2 -r1.1.1.1.2.1
Index: win32_makefile/dll_vc6/resource.h
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/win32_makefile/dll_vc6/resource.h,v
retrieving revision 1.1.1.1
retrieving revision 1.1.2.1
diff -u -r1.1.1.1 -r1.1.2.1
Index: win32_makefile/gnokii_vc6/gnokii.mak
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/win32_makefile/gnokii_vc6/gnokii.mak,v
retrieving revision 1.1.1.2
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.2 -r1.1.1.1.2.1
Index: win32_makefile/gui_delphi/Calendar.dfm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/win32_makefile/gui_delphi/Calendar.dfm,v
retrieving revision 1.1.1.2
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.2 -r1.1.1.1.2.1
Index: win32_makefile/gui_delphi/Calendar.pas
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/win32_makefile/gui_delphi/Calendar.pas,v
retrieving revision 1.1.1.2
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.2 -r1.1.1.1.2.1
Index: win32_makefile/gui_delphi/GnokiiAPI.pas
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/win32_makefile/gui_delphi/GnokiiAPI.pas,v
retrieving revision 1.1.1.3
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.3 -r1.1.1.1.2.1
Index: win32_makefile/gui_delphi/Project1.dof
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/win32_makefile/gui_delphi/Project1.dof,v
retrieving revision 1.1.1.2
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.2 -r1.1.1.1.2.1
Index: win32_makefile/gui_delphi/Project1.dpr
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/win32_makefile/gui_delphi/Project1.dpr,v
retrieving revision 1.1.1.2
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.2 -r1.1.1.1.2.1
Index: win32_makefile/gui_delphi/backup.dfm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/win32_makefile/gui_delphi/backup.dfm,v
retrieving revision 1.1.1.1
retrieving revision 1.1.2.1
diff -u -r1.1.1.1 -r1.1.2.1
Index: win32_makefile/gui_delphi/backup.pas
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/win32_makefile/gui_delphi/backup.pas,v
retrieving revision 1.1.1.1
retrieving revision 1.1.2.1
diff -u -r1.1.1.1 -r1.1.2.1
Index: win32_makefile/gui_delphi/backup2.dfm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/win32_makefile/gui_delphi/backup2.dfm,v
retrieving revision 1.1.1.1
retrieving revision 1.1.2.1
diff -u -r1.1.1.1 -r1.1.2.1
Index: win32_makefile/gui_delphi/backup2.pas
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/win32_makefile/gui_delphi/backup2.pas,v
retrieving revision 1.1.1.1
retrieving revision 1.1.2.1
diff -u -r1.1.1.1 -r1.1.2.1
Index: win32_makefile/gui_delphi/logo.ico
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/win32_makefile/gui_delphi/logo.ico,v
retrieving revision 1.1.1.1
retrieving revision 1.1.2.1
diff -u -r1.1.1.1 -r1.1.2.1
Index: win32_makefile/gui_delphi/mainunit.dfm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/win32_makefile/gui_delphi/mainunit.dfm,v
retrieving revision 1.1.1.3
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.3 -r1.1.1.1.2.1
Index: win32_makefile/gui_delphi/mainunit.pas
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/win32_makefile/gui_delphi/mainunit.pas,v
retrieving revision 1.1.1.3
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.3 -r1.1.1.1.2.1
Index: win32_makefile/gui_delphi/pbkedit.dfm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/win32_makefile/gui_delphi/pbkedit.dfm,v
retrieving revision 1.1.1.2
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.2 -r1.1.1.1.2.1
Index: win32_makefile/gui_delphi/pbkedit.pas
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/win32_makefile/gui_delphi/pbkedit.pas,v
retrieving revision 1.1.1.2
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.2 -r1.1.1.1.2.1
Index: win32_makefile/gui_delphi/pbkedit2.dfm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/win32_makefile/gui_delphi/pbkedit2.dfm,v
retrieving revision 1.1.1.1
retrieving revision 1.1.2.1
diff -u -r1.1.1.1 -r1.1.2.1
Index: win32_makefile/gui_delphi/pbkedit2.pas
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/win32_makefile/gui_delphi/pbkedit2.pas,v
retrieving revision 1.1.1.1
retrieving revision 1.1.2.1
diff -u -r1.1.1.1 -r1.1.2.1
Index: win32_makefile/gui_delphi/smsedit.dfm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/win32_makefile/gui_delphi/smsedit.dfm,v
retrieving revision 1.1.1.2
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.2 -r1.1.1.1.2.1
Index: win32_makefile/gui_delphi/smsedit.pas
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/win32_makefile/gui_delphi/smsedit.pas,v
retrieving revision 1.1.1.2
retrieving revision 1.1.1.1.2.1
diff -u -r1.1.1.2 -r1.1.1.1.2.1
Index: win32_makefile/gui_delphi/wapbook.dfm
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/win32_makefile/gui_delphi/wapbook.dfm,v
retrieving revision 1.1.1.1
retrieving revision 1.1.2.1
diff -u -r1.1.1.1 -r1.1.2.1
Index: win32_makefile/gui_delphi/wapbook.pas
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/win32_makefile/gui_delphi/wapbook.pas,v
retrieving revision 1.1.1.1
retrieving revision 1.1.2.1
diff -u -r1.1.1.1 -r1.1.2.1
Index: xgnokii/xgnokii_contacts.c
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/xgnokii/xgnokii_contacts.c,v
retrieving revision 1.1.1.4
retrieving revision 1.1.1.3.2.1
diff -u -r1.1.1.4 -r1.1.1.3.2.1
Index: xgnokii/xgnokii_logos.c
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/xgnokii/xgnokii_logos.c,v
retrieving revision 1.1.1.4
retrieving revision 1.1.1.3.2.1
diff -u -r1.1.1.4 -r1.1.1.3.2.1
Index: xgnokii/xgnokii_sms.c
===================================================================
RCS file: /home/short/pserver/cvs/gnokii/xgnokii/xgnokii_sms.c,v
retrieving revision 1.1.1.8
retrieving revision 1.1.1.3.2.1
diff -u -r1.1.1.8 -r1.1.1.3.2.1
