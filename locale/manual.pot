# Gammu manual translation
# Copyright (C) 2003 - 2011 Michal Čihař <michal@cihar.com>
# This file is distributed under the same license as the Gammu-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Gammu-manual 1.28.96\n"
"Report-Msgid-Bugs-To: michal@cihar.com\n"
"POT-Creation-Date: 2011-01-10 13:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: docs/manual/config/index.rst:2
msgid ".. _gammurc:"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:4
#, no-wrap
msgid ""
"Gammu Configuration File\n"
"========================\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:7 docs/manual/smsd/inject.rst:9 docs/manual/smsd/monitor.rst:9 docs/manual/smsd/smsd.rst:9 docs/manual/utils/gammu-config.rst:9 docs/manual/utils/jadmaker.rst:9 docs/manual/utils/gammu-detect.rst:12
#, no-wrap
msgid ""
"Synopsis\n"
"--------\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:11
msgid ""
"On Linux, MacOS X, BSD and other Unix-like systems, the config file is "
"searched in following order:"
msgstr ""

#. type: Bullet: '1. '
#: docs/manual/config/index.rst:16
msgid "``$XDG_CONFIG_HOME/gammu/config``"
msgstr ""

#. type: Bullet: '2. '
#: docs/manual/config/index.rst:16
msgid "``~/.config/gammu/config``"
msgstr ""

#. type: Bullet: '3. '
#: docs/manual/config/index.rst:16
msgid "``~/.gammurc``"
msgstr ""

#. type: Bullet: '4. '
#: docs/manual/config/index.rst:16
msgid "``/etc/gammurc``"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:18
msgid "On Microsoft Windows:"
msgstr ""

#. type: Bullet: '1. '
#: docs/manual/config/index.rst:21
msgid "``$PROFILE\\Application Data\\gammurc``"
msgstr ""

#. type: Bullet: '2. '
#: docs/manual/config/index.rst:21
msgid "``.\\gammurc``"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:23 docs/manual/smsd/run.rst:7 docs/manual/smsd/config.rst:7 docs/manual/smsd/inject.rst:16 docs/manual/smsd/monitor.rst:16 docs/manual/smsd/smsd.rst:17 docs/manual/utils/gammu-config.rst:16 docs/manual/utils/jadmaker.rst:16 docs/manual/utils/gammu-detect.rst:19
#, no-wrap
msgid ""
"Description\n"
"-----------\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:28
msgid ""
"Gammu requires configuration to be able to properly talk to your phone.  "
":ref:`gammu` reads configuration from a config file. It's location is "
"determined on runtime, see above for search paths."
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:31
msgid ""
"You can use :ref:`gammu-config` or :ref:`gammu-detect` to generate "
"configuration file or start from :ref:`Fully documented example`."
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:35
msgid ""
"For hints about configuring your phone, you can check Gammu Phone Database "
"<http://wammu.eu/phones/> to see what user users experienced."
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:37 docs/manual/smsd/config.rst:14 docs/manual/formats/smsbackup.rst:10 docs/manual/formats/backup.rst:9
msgid "This file use ini file syntax, see :ref:`ini`."
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:43
msgid ""
"Configuration file for gammu can contain several sections - ``[gammu]``, "
"``[gammu1]``, ``[gammuN]``, ... Each section configures one connection setup "
"and in default mode gammu tries all of them in numerical order. You can also "
"specify which configuration section to use by giving it's number "
"(:config:section:`[gammu]` has number 0) as a parameter to :ref:`gammu` and "
"it will then use only this section."
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:45
msgid ".. config:section:: [gammu]"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:47
msgid "This section is read by default unless you specify other on command line."
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:50
msgid "Device connection parameters ++++++++++++++++++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:52
msgid ".. config:option:: Connection"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:54
#, no-wrap
msgid "    Protocol which will be used to talk to your phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:56
#, no-wrap
msgid "    For Nokia cables you want to use one of following:\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:67
#, no-wrap
msgid ""
"    ``fbus``           \n"
"        serial FBUS connection\n"
"    ``dlr3``           \n"
"        DLR-3 and compatible cables\n"
"    ``dku2``           \n"
"        DKU-2 and compatible cables\n"
"    ``dku5``           \n"
"        DKU-5 and compatible cables\n"
"    ``mbus``           \n"
"        serial MBUS connection\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:71
#, no-wrap
msgid ""
"    If you use some non original cable, you might need to append ``-nodtr`` "
"(eg. for\n"
"    ARK3116 based cables) or ``-nopower``, but Gammu should be able to "
"detect this\n"
"    automatically.\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:73
#, no-wrap
msgid "    For non-Nokia phones connected using cable you generally want:\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:76
#, no-wrap
msgid ""
"    ``at``             \n"
"        generic AT commands based connection\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:79
#, no-wrap
msgid ""
"    You can optionally specify speed of the connection, eg. ``at19200``, but "
"it is\n"
"    not needed for modern USB cables.\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:81
#, no-wrap
msgid "    For IrDA connections use one of following:\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:90
#, no-wrap
msgid ""
"    ``irdaphonet``     \n"
"        Phonet connection for Nokia phones.\n"
"    ``irdaat``         \n"
"        AT commands connection for most of phones (this is not supported on "
"Linux).\n"
"    ``irdaobex``       \n"
"        OBEX (IrMC or file transfer) connection for most of phones.\n"
"    ``irdagnapbus``    \n"
"        GNapplet based connection for Symbian phones\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:92
#, no-wrap
msgid "    For Bluetooth connection use one of following:\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:101
#, no-wrap
msgid ""
"    ``bluephonet``     \n"
"        Phonet connection for Nokia phones.\n"
"    ``blueat``         \n"
"        AT commands connection for most of phones.\n"
"    ``blueobex``       \n"
"        OBEX (IrMC or file transfer) connection for most of phones.\n"
"    ``bluerfgnapbus``  \n"
"        GNapplet based connection for Symbian phones\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:103
msgid ".. config:option:: Device"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:105
#, no-wrap
msgid "    .. versionadded:: 1.27.95\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:107
#, no-wrap
msgid "    Device node or address of phone. It depends on used connection. \n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:113
#, no-wrap
msgid ""
"    For **cables** or emulated serial ports, you enter device name (for "
"example\n"
"    ``/dev/ttyS0``, ``/dev/ttyACM0``, ``/dev/ircomm0``, ``/dev/rfcomm0`` on "
"Linux,\n"
"    ``/dev/cuad0`` on FreeBSD or ``COM1:`` on Windows). The special "
"exception are\n"
"    DKU-2 and DKU-5 cables on Windows, where the device is automatically "
"detected\n"
"    from driver information and this parameters is ignored.\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:117
#, no-wrap
msgid ""
"    For **USB** connections (currently only fbususb and dku2 on Linux), you "
"can\n"
"    specify to which USB device Gammu should connect. You can either "
"provide\n"
"    vendor/product IDs or device address on USB::\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:123
#, no-wrap
msgid ""
"        Device = 0x1234:0x5678  # Match device by vendor and product id\n"
"        Device = 0x1234:-1      # Match device by vendor id\n"
"        Device = 1.10           # Match device by usb bus and device "
"address\n"
"        Device = 10             # Match device by usb device address\n"
"        Device = serial:123456  # Match device by serial string\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:125 docs/manual/config/index.rst:157 docs/manual/config/index.rst:219 docs/manual/smsd/config.rst:90 docs/manual/gammu/index.rst:1054 docs/manual/gammu/index.rst:1344
#, no-wrap
msgid "    .. note::\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:130
#, no-wrap
msgid ""
"        On Linux systems, you might lack permissions for some device "
"nodes.\n"
"        You might need to be member of some group (eg. :samp:`plugdev` or\n"
"        :samp:`dialout`) or or add special udev rules to enable you access\n"
"        these devices as non-root.\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:134
#, no-wrap
msgid ""
"        For Nokia phones you can put follofing file (also available in "
"sources\n"
"        as :file:`contrib/udev/45-nokiadku2.rules`) as\n"
"        :file:`/etc/udev/rules.d/45-nokiadku2.rules`:\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:137
#, no-wrap
msgid ""
"        .. literalinclude:: ../../../contrib/udev/45-nokiadku2.rules\n"
"           :language: sh\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:142
#, no-wrap
msgid ""
"    For **Bluetooth** connection you have to enter Bluetooth address of your "
"phone\n"
"    (you can list Bluetooth devices in range on Linux using "
":command:`hcitool scan`\n"
"    command). Optionally you can also force Gammu to use specified channel "
"by\n"
"    including channel number after slash.\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:145
#, no-wrap
msgid ""
"    Before using Gammu, your device should be paired with computer or you "
"should\n"
"    have set up automatic pairing.\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:147
#, no-wrap
msgid "    For **IrDA** connections, this parameters is not used at all.\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:150
#, no-wrap
msgid ""
"    If IrDA does not work on Linux, you might need to bring up the interface "
"and\n"
"    enable discovery (you need to run these commands as root):\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:152 docs/manual/gammu/index.rst:1233 docs/manual/gammu/index.rst:1239 docs/manual/gammu/index.rst:1245
#, no-wrap
msgid "    .. code-block:: sh\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:155
#, no-wrap
msgid ""
"        ip l s dev irda0 up\n"
"        sysctl net.irda.discovery=1\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:161
#, no-wrap
msgid ""
"        Native IrDA is not supported on Linux, you need to setup virtual\n"
"        serial port for it (eg. ``/dev/ircomm0``) and use it same way as "
"cable.\n"
"        This can be usually achieved by loading module ``ircomm-tty``.\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:163
msgid ".. config:option:: Port"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:165
#, no-wrap
msgid "    .. deprecated:: 1.27.95\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:167
#, no-wrap
msgid "    Alias for :config:option:`Device`, kept for backward compatibility.\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:169
msgid ".. config:option:: Model"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:172
#, no-wrap
msgid ""
"    Do not use this parameter unless really needed! The only use case for "
"this is\n"
"    when Gammu does not know your phone and misdetects it's features.\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:176
#, no-wrap
msgid ""
"    The only special case for using model is to force special type of OBEX\n"
"    connection instead of letting Gammu try the best suited for selected\n"
"    operation:\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:185
#, no-wrap
msgid ""
"    ``obexfs`` \n"
"        force using of file browsing service (file system support)\n"
"    ``obexirmc`` \n"
"        force using of IrMC service (contacts, calendar and notes support)\n"
"    ``obexnone`` \n"
"        none service chosen, this has only limited use for sending file "
"(:option:`gammu sendfile` command)\n"
"    ``mobex``\n"
"        m-obex service for Samsung phones\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:187
msgid ".. config:option:: Use_Locking"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:193
#, no-wrap
msgid ""
"    On Posix systems, you might want to lock serial device when it is being "
"used\n"
"    using UUCP-style lock files. Enabling this option (setting to yes) will "
"make\n"
"    Gammu honor these locks and create it on startup. On most distributions "
"you\n"
"    need additional privileges to use locking (eg. you need to be member of "
"uucp\n"
"    group).\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:195
#, no-wrap
msgid "    This option has no meaning on Windows.\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:198
msgid "Connection options ++++++++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:200
msgid ".. config:option:: SynchronizeTime"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:202
#, no-wrap
msgid ""
"    If you want to set time from computer to phone during starting "
"connection.\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:204
msgid ".. config:option:: StartInfo"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:209
#, no-wrap
msgid ""
"    This option allow to set, that you want (setting ``yes``) to see message "
"on the\n"
"    phone screen or phone should enable light for a moment during starting\n"
"    connection. Phone will not beep during starting connection with this \n"
"    option. This works only with some Nokia phones.\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:213
msgid "Debugging options +++++++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:215 docs/manual/smsd/config.rst:109
msgid ".. config:option:: LogFile"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:217
#, no-wrap
msgid "    Path to file where information about communication will be stored.\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:222
#, no-wrap
msgid ""
"        For most debug levels (excluding ``errors``) the log file is "
"overwritten on\n"
"        each execution.\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:224
msgid ".. config:option:: LogFormat"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:226
#, no-wrap
msgid ""
"    Determines what all will be logged to :config:option:`LogFile`. Possible "
"values are:\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:241
#, no-wrap
msgid ""
"    ``nothing``     \n"
"        no debug level\n"
"    ``text``        \n"
"        transmission dump in text format\n"
"    ``textall``     \n"
"        all possible info in text format\n"
"    ``textalldate`` \n"
"        all possible info in text format, with time stamp\n"
"    ``errors``      \n"
"        errors in text format\n"
"    ``errorsdate``  \n"
"        errors in text format, with time stamp\n"
"    ``binary``      \n"
"        transmission dump in binary format\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:244
#, no-wrap
msgid ""
"    For debugging use either ``textalldate`` or ``textall``, it contains "
"all\n"
"    needed information to diagnose problems.\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:246
msgid ".. config:option:: Features"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:252
#, no-wrap
msgid ""
"    Custom features for phone. This can be used as override when values "
"coded\n"
"    in ``common/gsmphones.c`` are bad or missing. Consult\n"
"    ``include/gammu-info.h`` for possible values (all :c:type:`GSM_Feature` "
"values\n"
"    without leading ``F_`` prefix). Please report correct values to Gammu\n"
"    authors.\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:255
msgid "Locales and character set options +++++++++++++++++++++++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:257
msgid ".. config:option:: GammuCoding"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:261
#, no-wrap
msgid ""
"    Forces using specified codepage (for example ``1250`` will force CP-1250 "
"or\n"
"    ``utf8`` for UTF-8). This should not be needed, Gammu detects it "
"according\n"
"    to your locales.\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:263
msgid ".. config:option:: GammuLoc"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:267
#, no-wrap
msgid ""
"    Path to directory with localisation files (the directory should "
"contain\n"
"    ``LANG/LC_MESSAGES/gammu.mo``). If gammu is properly installed it should "
"find\n"
"    these files automatically.\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:269 docs/manual/smsd/tables.rst:341 docs/manual/smsd/run.rst:90 docs/manual/smsd/config.rst:494 docs/manual/smsd/inject.rst:46 docs/manual/smsd/smsd.rst:102 docs/manual/testing/dummy-driver.rst:69 docs/manual/formats/backup.rst:11 docs/manual/formats/ini.rst:14
#, no-wrap
msgid ""
"Examples\n"
"--------\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:272
msgid "There is more complete example available in Gammu documentation."
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:275
msgid "Connection examples +++++++++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:277
msgid "Gammu configuration for Nokia phone using DLR-3 cable:"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:279 docs/manual/config/index.rst:288 docs/manual/config/index.rst:297 docs/manual/config/index.rst:305 docs/manual/config/index.rst:319 docs/manual/smsd/usage.rst:49 docs/manual/smsd/run.rst:99 docs/manual/smsd/config.rst:503 docs/manual/smsd/config.rst:516 docs/manual/smsd/config.rst:529 docs/manual/smsd/config.rst:536 docs/manual/smsd/config.rst:543 docs/manual/gammu/index.rst:1911 docs/manual/testing/dummy-driver.rst:74 docs/manual/testing/dummy-driver.rst:83 docs/manual/formats/smsbackup.rst:36 docs/manual/formats/smsbackup.rst:109 docs/manual/formats/ini.rst:20 docs/manual/utils/gammu-detect.rst:86
msgid ".. code-block:: ini"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:283
#, no-wrap
msgid ""
"    [gammu]\n"
"    device = /dev/ttyACM0\n"
"    connection = dlr3\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:286
msgid ""
"Gammu configuration for Sony-Ericsson phone (or any other AT compatible "
"phone) connected using USB cable:"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:292
#, no-wrap
msgid ""
"    [gammu]\n"
"    device = /dev/ttyACM0\n"
"    connection = at\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:295
msgid ""
"Gammu configuration for Sony-Ericsson (or any other AT compatible phone) "
"connected using bluetooth:"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:301
#, no-wrap
msgid ""
"    [gammu]\n"
"    device = B0:0B:00:00:FA:CE\n"
"    connection = blueat\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:303
msgid ""
"Gammu configuration for phone which needs to manually adjust Bluetooth "
"channel to use channel 42:"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:309
#, no-wrap
msgid ""
"    [gammu]\n"
"    device = B0:0B:00:00:FA:CE/42\n"
"    connection = blueat\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:312
msgid "Working with multiple phones ++++++++++++++++++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:317
msgid ""
"Gammu can be configured for multiple phones (however only one connection is "
"used at one time, you can choose which one to use with :option:`gammu -s` "
"parameter). Configuration for phones on three serial ports would look like "
"following:"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:323
#, no-wrap
msgid ""
"    [gammu]\n"
"    device = /dev/ttyS0\n"
"    connection = at\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:327
#, no-wrap
msgid ""
"    [gammmu1]\n"
"    device = /dev/ttyS1\n"
"    connection = at\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:331
#, no-wrap
msgid ""
"    [gammmu2]\n"
"    device = /dev/ttyS2\n"
"    connection = at\n"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:333
msgid ".. _Fully documented example:"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:336
msgid "Fully documented example ++++++++++++++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:338
msgid ""
"You can find this sample file as :file:`docs/config/gammurc` in Gammu "
"sources."
msgstr ""

#. type: Plain text
#: docs/manual/config/index.rst:341
#, no-wrap
msgid ""
".. literalinclude:: ../../../docs/config/gammurc\n"
"   :language: ini\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6110.rst:2
#, no-wrap
msgid ""
"Nokia 6110\n"
"==========\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6110.rst:19
#, no-wrap
msgid ""
"Assembled by\n"
"Balazs Nagy          <js@iksz.hu>\n"
"Harri Yli-Torkko     <hyt@surfeu.fi>\n"
"Alfred R. Nurnberger <arnu@flosys.com>\n"
"Hugh Blemings        <Hugh.Blemings@vsb.com.au>\n"
"Mike Bradley         <mike@trumpington.st>\n"
"Odinokov Serge       <serge@takas.lt>\n"
"Pavel Janik          <Pavel@Janik.cz>\n"
"BORBELY Zoltan       <bozo@andrews.hu>\n"
"Pawel Kot            <pkot@linuxnews.pl>\n"
"Marcin Wiacek        <Marcin@MWiacek.com>\n"
"Walek                <walek@pa98.opole.sdi.tpnet.pl>\n"
"... and other members of gnokii mailing list\n"
"and authors of some WWW pages.\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6110.rst:23 docs/manual/protocol/n7110.rst:21 docs/manual/protocol/nokia.rst:9 docs/manual/protocol/n6510.rst:17
msgid ""
"The data provided is for information purposes only.  Some of the frames "
"might be hazardous to your phone. Be careful!!! We do not take any "
"responsibility or liability for damages, etc."
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6110.rst:26 docs/manual/protocol/n7110.rst:23 docs/manual/protocol/nokia.rst:32 docs/manual/protocol/index.rst:23 docs/manual/smsd/dbi.rst:15 docs/manual/smsd/dbi.rst:43 docs/manual/smsd/tables.rst:427 docs/manual/smsd/pgsql.rst:25 docs/manual/smsd/mysql.rst:27 docs/manual/smsd/mysql.rst:42 docs/manual/gammu/index.rst:1063 docs/manual/project/motivation.rst:5 docs/manual/formats/smsbackup.rst:44 docs/manual/c/hints.rst:161 docs/manual/utils/gammu-detect.rst:24 docs/manual/utils/gammu-detect.rst:36 docs/manual/utils/gammu-detect.rst:76
msgid ".. note::"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6110.rst:30 docs/manual/protocol/n7110.rst:27 docs/manual/protocol/nokia.rst:36 docs/manual/protocol/n6510.rst:23
#, no-wrap
msgid ""
"    this information isn't (and can't be) complete.  If you know anything\n"
"    about features not listed here or you noticed a bug in this list, "
"please\n"
"    notify us via e-mail.  Thank you.\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6110.rst:34
msgid ""
"Document describing frames used in GSM/PCN Nokia 6110 and derivatives (Nokia "
"6130, 6150, 6190, 5110, 5130, 5150, 5190, 3210, 3310)"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6110.rst:37
msgid ""
"Correct format is FBUS version 2/Direct IRDA/MBUS version 2 (see nokia.txt "
"for protocol details):"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6110.rst:39 docs/manual/protocol/n7110.rst:35
msgid "List::"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6110.rst:88
#, no-wrap
msgid ""
"    0x00: Monitoring values\n"
"        r monitoring value      {+0x01, 0x01, block... }\n"
"          where block: 0x5e, 0x05, 0x7a(?), 0xd0(?), 0x85(?), 0x02, "
"percentHI, percentLO\n"
"                          Battery percent level\n"
"                       0x5e, 0x0c, 0x52(?), 0x4b(?), 0x6f(?), 0x02, "
"voltageHI, voltageLO\n"
"                          Battery standby voltage\n"
"                       ...\n"
"    0x01: Call Information\n"
"        s Make call             { 0x0001, \"number\", type, block }\n"
"                                  where type:\n"
"                                          0x01 - data call\n"
"                                          0x05 - voice call\n"
"                            block:\n"
"                          data call (non digital lines):\n"
"                            "
"0x02,0x01,0x05,0x81,0x01,0x00,0x00,0x01,0x02,0x0a,\n"
"                            "
"0x07,0xa2,0x88,0x81,0x21,0x15,0x63,0xa8,0x00,0x00\n"
"                          data call (digital lines):\n"
"                            "
"0x02,0x01,0x05,0x81,0x01,0x00,0x00,0x01,0x02,0x0a,\n"
"                            "
"0x07,0xa1,0x88,0x89,0x21,0x15,0x63,0xa0,0x00,0x06,\n"
"                            0x88,0x90,0x21,0x48,0x40,0xbb\n"
"                                          voice call:\n"
"                            0x01, 0x01, 0x05, 0x81/0x00, sendnum, 0x00, "
"0x00, 0x01\n"
"                                            where:\n"
"                                              sendnum (own number "
"sending):\n"
"                                                  0x01: preset (depends on "
"network)\n"
"                                                  0x03: on\n"
"                                                  0x02: off\n"
"        r Call going msg        { 0x0002 }\n"
"        r Call in progress      { 0x0003, seqnr }\n"
"        r Remote end hang up    { 0x0004, seqnr, ?, error (like in netmon in "
"39) }\n"
"        r incoming call alert   { 0x0005, seqnr, numlen, \"number\", "
"namelen, \"name\" }\n"
"        s Answer call part 2    { 0x0006, seqnr, 0x00 }\n"
"        r answered call         { 0x0007, seqnr }\n"
"        s Hang up               { 0x0008, seqnr, 0x85 }\n"
"        r terminated call       { 0x0009, seqnr }\n"
"        r call msg              { 0x000a, seqnr }\n"
"        r call held             { 0x0023, seqnr, 0x01 }\n"
"        r call resumed          { 0x0025, seqnr, 0x01 }\n"
"        r Send DTMF/voice call  { 0x0040}\n"
"        s Answer call part 1    { "
"0x0042,0x05,0x01,0x07,0xa2,0x88,0x81,0x21,0x15,0x63,0xa8,0x00,0x00,\n"
"                         0x07,0xa3,0xb8,0x81,0x20,0x15,0x63,0x80 }\n"
"        s Sent after issuing    { "
"0x0042,0x05,0x81,0x07,0xa1,0x88,0x89,0x21,0x15,0x63,0xa0,0x00,0x06,\n"
"          data call\t\t             "
"0x88,0x90,0x21,0x48,0x40,0xbb,0x07,0xa3,\n"
"          (digital lines)                0xb8,0x81,0x20,0x15,0x63,0x80 }\n"
"        s Sent after issuing    { "
"0x0042,0x05,0x01,0x07,0xa2,0xc8,0x81,0x21,0x15,0x63,0xa8,0x00,0x00,\n"
"          data call\t\t             "
"0x07,0xa3,0xb8,0x81,0x20,0x15,0x63,0x80,\n"
"          (non digital lines)            0x01,0x60 }\n"
"        s Send DTMF             { 0x0050, length, {ascii codes for DTMF}, "
"0x01 }\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6110.rst:100
#, no-wrap
msgid ""
"        Note:\n"
"          to make data call (non digital lines):\n"
"            1.send \"Make call\" for non digital lines\n"
"        2.send \"Sent after issuing data call (non digital lines)\"\n"
"          to make data call (digital lines):\n"
"            1.send \"Answer call part 1\"\n"
"        2.send \"Sent after issuing data call (digital lines)\"\n"
"            3.send \"Make call\" for digital lines\n"
"          to answer call:\n"
"            1.send \"Answer call part 1\"\n"
"            2.send \"Answer call part 2\"\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6110.rst:212
#, no-wrap
msgid ""
"    0x02: SMS handling\n"
"        s Send SMS message      { 0x0001, 0x02, 0x00 (SEND REQUEST), ... }\n"
"        r Message sent          { 0x0002 }\n"
"        r Send failed           { 0x0003, ?, ?, error (like in netmon in "
"65)}    \n"
"        s Get SMS message       { 0x0007, 0x02, location, 0x01, 0x64 }\n"
"        s Initiate connection   { 0x000d, 0x00, 0x00, 0x02 }\n"
"        r Initiate ACK          { 0x000e, 0x01 }\n"
"        r SMS message received  { 0x0010, ...... } (whole message)\n"
"        s Set CellBroadcast     { 0x0020, 0x01, 0x01, 0x00, 0x00, 0x01, 0x01 "
"}\n"
"                                          for enable cell broadcast ?\n"
"                                          0x00, 0x00, 0x00, 0x00, 0x00, 0x00 "
"}\n"
"                                          for disable cell broadcast ?\n"
"        r Set CellBroadcast OK  { 0x0021, 0x01 }\n"
"        r Read CellBroadcast    { 0x0023, ?, ?, ?, channel, ?, message... } "
"?\n"
"        s Set SMS center        { 0x0030, 0x64, priority, checksum? ,0?, "
"format,\n"
"                                          validity, {DefaultRecipient "
"no.}[12], \n"
"                                          {SMScenter no.}[12], {SMSC name}, "
"0x00}\n"
"                                  where tel.no.[12]: {len, type, "
"{number(BCD)}}\n"
"                                        type: 0x81: normal\n"
"                                              0x91: + (international)\n"
"                                              0xd0: alphanumeric\n"
"                                        format: 0x00: text\n"
"                                                0x22: fax\n"
"                                                0x24: voice\n"
"                                                0x25: ERMES\n"
"                                                0x26: paging\n"
"                                                0x31: X.400\n"
"                                                0x32: email\n"
"                                        validity: 0x0b:  1 hour\n"
"                                                  0x47:  6 hours\n"
"                                                  0xa7: 24 hours\n"
"                                                  0xa9: 72 hours\n"
"                                                  0xad:  1 week\n"
"                                                  0xff: max.time\n"
"        r Set SMS center OK     { 0x0031 }\n"
"        r Set SMS center error  { 0x0032, reason }\n"
"        s Get SMS center        { 0x0033, 0x64, priority }\n"
"        r SMS center received   { 0x0034, priority, checksum?, format, "
"0x00?,\n"
"                                          validity, {DefaultRecipient "
"no.}[12],\n"
"                                          {SMScenter no.}[12], {SMSC name}, "
"0x00}\n"
"                                          tel.no[12]: {len, type, "
"{number(BCD)}} \n"
"                                  where priority, checksum, type, "
"validity,\n"
"                                        tel.no.[12]: see 0x02/0x0030\n"
"        r SMS center error recv { 0x0035, reason }\n"
"    0x03: Phonebook functions\n"
"        s Get mem location      { 0x0001, memtype, location, 0 }\n"
"                                where memory:\n"
"                                         0x01: telephone and SIM phonebook "
"(in one)\n"
"                                         0x02: telephone phonebook\n"
"                                         0x03: SIM phonebook\n"
"                                         0x04: SIM fixdialling-phonebook "
"(?)\n"
"                                         0x05: Own numbers\n"
"                                         0x07: Dialled numbers\n"
"                                         0x08: Missed calls\n"
"                                         0x09: Received calls\n"
"                                         0x0b: voice mailbox (location not "
"important)\n"
"        r mem location recvd    { 0x0002, "
"0x00,namelen,\"name\",numlen,\"number\",groupID, 0x01?, yearLO, yearHI, "
"month, day, hour, minute, sec. }\n"
"                                Note: in 3310 all entries have null name "
"(\"feature\" of bug ?)\n"
"        r mem loc error recvd   { 0x0003, errtype }\n"
"                                where errtype:\n"
"                                         0x7d: invalid memory type\n"
"                                         0x74: empty location ?\n"
"                                         0x8d: no PIN\n"
"        s Set mem location      { 0x0004, "
"memtype,location,namelen,\"Name\",numlen,\"number\",groupID }\n"
"        r mem set OK            { 0x0005 }\n"
"        r mem set error         { 0x0006, errtype }\n"
"                                where errtype: 0x7d: name is too long\n"
"        s Mem status request    { 0x0007, memtype }\n"
"        r Mem status recvd      { 0x0008, memtype, free, used }\n"
"        r Mem status error recv { 0x0009, errtype }\n"
"                                where errtype: 0x6f: mem status error\n"
"                                               0x7d: invalid memory type\n"
"                                               0x8d: waiting for pin\n"
"        s Get caller group data { 0x0010, groupID }\n"
"        r Get caller group data { 0x0011, groupID, size, \"Name\", "
"ringtoneID, graphic_on?1:0, lenHI, lenLO, OTABitmap (72x14 logo) }\n"
"        r Get call.group error  { 0x0012, reason }\n"
"                                where reason: 0x7d: invalid location\n"
"        s Set caller group data { 0x0013, groupID, size, \"Name\", "
"ringtoneID, graphic_on?1:0, lenHI, lenLO, OTABitmap (72x14 logo) }\n"
"        r Set caller group OK   { 0x0014 }\n"
"        r Set call.group error  { 0x0015, reason }\n"
"                                where reason: 0x7d: invalid location\n"
"        s Get speed dial        { 0x0016, index(1-9) }\n"
"        r Get speed dial OK     { 0x0017, mem.type, location }\n"
"                                where mem.type: 0x02: ME        (== 0 if not "
"stored)\n"
"                                                0x03: SIM\n"
"                                      location: memory location (== 0 if not "
"stored)\n"
"        r Get speed dial error  { 0x0018 }\n"
"        s Set speed dial        { 0x0019, index(1-9), mem.type, location }\n"
"        r Set speed dial OK     { 0x001a }\n"
"        r Set speed dial error  { 0x001b }\n"
"    0x04: Phone Status\n"
"        s Phone status          { 0x0001 }\n"
"        r Phone status          { 0x0002, mode, signal str, ???, pwr, "
"batt.level }\n"
"                                where mode: 1: registered within the "
"network\n"
"                                            2: call in progress\n"
"                                            3: waiting for pin\n"
"                                            4: powered off\n"
"                                      pwr: 1: AC/DC\n"
"                                           2: battery\n"
"        s Request Phone ID      { 0x0003 }\n"
"        r RequestPhone ID       { 0x0004, 0x01,\"NOKIA\"\"imei\", 0, "
"\"model\", 0, \"prod.code\", 0, \"HW\", 0, \"firmware\", 0x00, 0x01 }\n"
"    0x05: Profile settings\n"
"        s Set profile feature   { 0x0010, 1, nr, feature, a, 1 }\n"
"                                where nr: see 0x05/0x0013\n"
"                                      feature: see 0x05/0x0014\n"
"                                      a: see 0x05/0x0014\n"
"        r Set profile feat. OK  { 0x0011, 1 }\n"
"        s Get profile feature   { 0x0013, 1, nr, feature, 1 }\n"
"                                where nr is profile number (general=0, "
"silent, meeting, outdoor, pager, car, headset=6)\n"
"                                      feature: see 0x05/0x0014\n"
"        r Get profile feature   { 0x0014, 1, nr, feature, 4, a, b, c, d, 1 "
"}\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6110.rst:216
#, no-wrap
msgid ""
"                                 Note: Settings num 0x00 .. 0x09 can be "
"assigned\n"
"                                 separately to each profile (0x00 .. 0x05), "
"but rest are common\n"
"                                 to all profiles.\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6110.rst:218
#, no-wrap
msgid "                                 6110\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6110.rst:258
#, no-wrap
msgid ""
"                                 Feature  Description                    "
"Value\n"
"                                 -------  -------------------            "
"-----------------\n"
"                                 0x00     keypad notes                   "
"0xff=off, 0x00=level 1, 0x01=level 2, 0x02=level 3\n"
"                                 0x01     lights (? only in car profile) "
"0x00=off, 0x??=on (maybe 0x01)\n"
"                                 0x02     incoming call alert            "
"1=ringing, 2=beep once, 3=unknown, 4=off, 5=ring once,\n"
"                                                                         "
"6=ascending, 7=caller groups (see feature #0x08)\n"
"                                 0x03     ringing tone ID                for "
"original 6110: 0x12=ring ring, 0x13=low, etc.\n"
"                                 0x04     ringing volume                 "
"level 1 (0x06) - level 5 (0x0a)\n"
"                                 0x05     message alert tone             "
"0=no tone, 1=standard, 2=special, 3=beep once, 4=ascending\n"
"                                 0x06     vibration                      "
"0=off, 1=on\n"
"                                 0x07     warning and game tones         "
"0xff=off, 0x04=on\n"
"                                 0x08     incoming caller groups         "
"1=family, 2=VIP, 4=friends, 8=collegues, 16=other\n"
"                                 0x09     automatic answer               "
"0x00=off, 0x01=on \n"
"                                 -------------------------\n"
"                                 0x16     Anykey answer                  "
"0x00=Off, 0x01=On\n"
"                                 0x17     ???                            "
"0x00 | 0x01\n"
"                                 0x18     Memory in use                  "
"0x00=Phone, 0x01=SIM card\n"
"                                 0x19     Network selection              "
"0x00=Automatic, 0x01=Manual\n"
"                                 0x1a     Automatic redial               "
"0x00=Off, 0x01=On\n"
"                                 0x1b     ???                            "
"0x00 | 0x01\n"
"                                 0x1c     ???                            "
"0x00...0x18\n"
"                                 0x1d     Speed dialling                 "
"0x00=Off, 0x01=On\n"
"                                 0x1e     Own number sending             "
"0x00=Preset, 0x01=On, 0x02=Off\n"
"                                 0x1f     Cell info display              "
"0x00=Off, 0x01=On\n"
"                                 0x21     Language                       "
"0x00=English\n"
"                                                                         "
"0x01=Deutsch\n"
"                                                                         "
"0x02=Francais\n"
"                                                                         "
"0x03=Italiano\n"
"                                                                         "
"0x06=Nederlands\n"
"                                                                         "
"0x07=Dansk\n"
"                                                                         "
"0x08=Svenska\n"
"                                                                         "
"0x09=Suomi\n"
"                                                                         "
"0x0e=Norsk\n"
"                                                                         "
"0x10=Automatic\n"
"                                 0x26     Reply via same centre          "
"0x00=No, 0x01=Yes\n"
"                                 0x27     Delivery reports               "
"0x00=No, 0x01=Yes\n"
"                                 0x28     Hide clock                     "
"0x00=Show clock, 0x01=Hide clock\n"
"                                 0x29     Time format                    "
"0x00=24-hour, 0x01=12-hour\n"
"                                 0x2a     Selected profile               "
"0x00=General, 0x01.. the rest\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6110.rst:260
#, no-wrap
msgid "                                 33x0\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6110.rst:311
#, no-wrap
msgid ""
"                                 Feature  Description                    "
"Value\n"
"                                 -------  -------------------            "
"-----------------\n"
"                                 0x00     keypad notes                   "
"0xff=off, 0x00=level 1, 0x01=level 2, 0x02=level 3\n"
"                                 0x01     incoming call alert            "
"1=ringing, 2=beep once, 3=unknown, 4=off, 5=ring once,\n"
"                                                                         "
"6=ascending\n"
"                                 0x02     ringing tone ID                \n"
"                                 0x03     ringing volume                 "
"level 1 (0x06) - level 5 (0x0a)\n"
"                                 0x04     message alert tone             "
"0=no tone, 1=standard, 2=special, 3=beep once, 4=ascending\n"
"                                 0x05     vibration                      "
"0=off, 1=on, 2=vibrate first\n"
"                                 0x06     warning tones                  "
"0xff=off, 0x04=on\n"
"                                 0x07     screen saver                   "
"1=on, 0=off\n"
"                                 0x08     Screen saver -> Timeout        "
"0x00=5 sec, 0x01=20 sec,....\n"
"                                 0x09     Screen saver -> Screen saver   "
"0x00 ... 0x0d = Number of picture image\n"
"                                 -------------------------\n"
"                                 0x0a:    ???:\n"
"                                 ...:     ???:\n"
"                                 0x15:    ???: Read only?\n"
"                                 -------------------------\n"
"                                 0x16:    ???:                           "
"0x00=??? 0x01=???\n"
"                                 0x17:    Memory in use (Nokia 3330):    "
"0x00=Phone, 0x01=SIM card\n"
"                                 0x18:    Network selection:             "
"0x00=Automatic, 0x01=Manual\n"
"                                 0x19:    Automatic redial:              "
"0x00=Off, 0x01=On\n"
"                                 0x1a:    Speed dialling:                "
"0x00=Off, 0x01=On\n"
"                                 0x1b:    Own number sending:            "
"0x00=Set by network, 0x01=On, 0x02=Off\n"
"                                 0x1c:    Cell info display:             "
"0x00=Off\n"
"                                 0x1d:    Type of view:                  "
"0x00=Name list,0x01=Name, number,0x02=Large font\n"
"                                 0x1e:    Language:                      "
"0x00=English\n"
"                                                                         "
"0x07=Dansk\n"
"                                                                         "
"0x08=Svenska\n"
"                                                                         "
"0x09=Suomi\n"
"                                                                         "
"0x0c=Turcke\n"
"                                                                         "
"0x0e=Norsk\n"
"                                                                         "
"0x10=Automatic\n"
"                                 0x32:    Reboots ME (3330)\n"
"                                 0x1f:    ???: Read only? (3330)\n"
"                                 0x20:    Reply via same centre:         "
"0x00=No, 0x01=Yes\n"
"                                 0x21:    Delivery reports:              "
"0x00=No, 0x01=Yes\t\n"
"                                 0x22:    Show/Hide clock:               "
"0x00=Show, 0x01=Hide\n"
"                                 0x23:    Time format:                   "
"0x00=24-hour, 0x01=12-hour\n"
"                                 0x24:    Select profile:                "
"0x00=General, 0x01 ... 0x05=rest of them\n"
"                                 0x25:    ???: Read only? (N3330)\n"
"                                 0x26:    Confirm SIM service actions:   "
"0x00=Not asked, 0x01=Asked\n"
"                                 0x27:    T9 Dictionary:                 "
"0x00=Off, 0x01=English, 0x0a=Suomi\n"
"                                 0x28:    Messages -> Character support: "
"0x00=Automatic, 0x01=GSM alphabet, 0x02=Unicode\n"
"                                 0x29:    Startup logo settings:         "
"0x00=Your own uploaded logo,0x01=Nokia\n"
"                                                                         "
"0x02=Draft HUMAN technology(tm),0x03=Itineris\n"
"                                 0x2a:    ???:                           "
"0x00=??? 0x01=???\n"
"                                 0x2b:    ???:                           "
"0x00=??? 0x01=???\n"
"                                 0x2c:    ???: Read only? (N3330)\n"
"                                 0x2d:    Auto update of date and time:  "
"0x00=Off,0x01=Confirm first,0x02=On\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6110.rst:508
#, no-wrap
msgid ""
"        s Get welcome message   { 0x0016 }\n"
"        r Get welcome message   { 0x0017, no.of blocks, { block } * }\n"
"                                where block: { id, {blockspecific} }\n"
"                                      id: 1: startup logo { y, x, picture "
"(coding?) }\n"
"                                          2: welcome note { len, \"message\" "
"}\n"
"                                          3: operator msg { len, \"message\" "
"}\n"
"        s Set welcome message   { 0x0018, no.of blocks, { block } * }\n"
"                                where block: see 0x05/0x0017\n"
"        r Set welcome OK        { 0x0019, 0x01 }\n"
"        s Get profile name      { 0x001a, nr }\n"
"                                where nr: see 0x05/0x0013\n"
"        r Profile name          { 0x001b, 1, 1, 3, flen, nr, len, {text} }\n"
"                                where nr: see 0x05/0x0013\n"
"                                      len: text length \n"
"                                      flen len + len(nr, len) = len + 2\n"
"                                Note: in Nokia 3310 name is in Unicode\n"
"        s ???                   { 0x001c }\n"
"        r ???                   { 0x001d, 0x93 }\n"
"        s Set oplogo            { 0x0030, location, MCC1, MCC2, MNC, "
"lenhi=0x00, lenlo=0x82, OTABitmap }\n"
"        r Set oplogo OK         { 0x0031 }\n"
"        r Set oplogo error      { 0x0032, reason }\n"
"                                where reason: 0x7d invalid location\n"
"        s Get oplogo            { 0x0033, location }\n"
"                                where location: 1 (doesn't seem to matter)\n"
"        r Get oplogo            { 0x0034, location, MCC1, MCC2, MNC, "
"lenhi=0x00, lenlo=0x82, OTABitmap }\n"
"        r Get oplogo error      { 0x0035, reason }\n"
"                                where reason: 0x7d invalid location\n"
"        s Set ringtone          { 0x0036, location,0x00,0x78, ringtone "
"packed according to SM2.0}\n"
"        r Set ringtone OK       { 0x0037 }\n"
"        r Set ringtone error    { 0x0038, reason }\n"
"                                where reason=0x7d, when not supported "
"location\n"
"        s Get services settings { 0x0080, setting (2 bytes) }\n"
"                                where: setting: 0x02,0x00=Nokia access "
"number 1\n"
"                                                0x02,0x01=Operator access "
"number 1\n"
"                                                0x01,0x00=Personal bookmark "
"1 settings (name only ?)\n"
"                                                0x01,0x01=?\n"
"                                                0x02,0x02=?\n"
"        r Get services sett.OK  { 0x0081, .... }\n"
"        r Get services sett.err { 0x0082, 0x7b }\n"
"    0x06: Calling line restriction/Call forwarding etc\n"
"        r Get call divert       { 0x0001, 0x02, x, 0x00, divtype, 0x02, "
"calltype, y, z, 0x0b, number, 0x00...0x00, timeout (byte 45) }\n"
"        s Set call divert       { 0x0001, 0x03, 0x00, divtype, calltype, "
"0x01, number(packed like in SMS), 0x00 ... 0x00,\n"
"                                          length of number (byte 29), 0x00 "
"... 0x00, timeout (byte 52), 0x00, 0x00, 0x00}\n"
"                                NOTE: msglen=0x37\n"
"                                where timeout:\n"
"                                  0x00: not set ?\n"
"                                  0x05: 5 second\n"
"                                  0x0a: 10 second\n"
"                                  0x0f: 15 second\n"
"                                  0x14: 20 second\n"
"                                  0x19: 25 second\n"
"                                  0x1e: 30 second\n"
"                                where divtype:\n"
"                                  0x02: all diverts for all call types ?\n"
"                                        Found only, when deactivate all "
"diverts for all call types (with call type 0x00)\n"
"                                  0x15: all calls\n"
"                                  0x43: when busy\n"
"                                  0x3d: when not answered\n"
"                                  0x3e: if not reached\n"
"                                calltype:\n"
"                                  0x00: all calls (data, voice, fax)\n"
"                                  0x0b: voice calls\n"
"                                  0x0d: fax calla\n"
"                                  0x19: data calls\n"
"        s Deactivate calldiverts{ 0x0001, 0x04, 0x00, divtype, calltype, "
"0x00 }\n"
"                                where divtype, calltype: see above\n"
"        r Deactivate calldiverts{ 0x0002, 0x04, 0x00, divtype, 0x02, "
"calltype, data }\n"
"        s Get call diverts      { 0x0001, 0x05, 0x00, divtype, calltype, "
"0x00 }\n"
"                                where divtype, calltype: see above\n"
"        r Get call diverts ok   { 0x0002, 0x05, 0x00, divtype, 0x02, "
"calltype, data }\n"
"                                where divtype, calltype: see above\n"
"                          data: { 0x01, 0x00 } - isn't active\n"
"                            { 0x02, 0x01, number(packed like in SMS), 0x00, "
"0x00..., timeout }\n"
"        r Get prepaid(?) info   { 0x0005, ?,?,?,length,message(packed like "
"in 7bit SMS)}\n"
"        r Call diverts active   { 0x0006, ??? }\n"
"    0x07:\n"
"        s ???                   { 0x0022, ? (1&2 sounds OK) }\n"
"        r ??? OK                { 0x0023, ?,?,? }\n"
"        r ??? error             { 0x0024, reason }\n"
"        s ???                   { 0x0025, ??? }\n"
"        r ??? OK                { 0x0026, ??? }\n"
"        r ??? error             { 0x0027, reason }\n"
"    0x08: Security codes\n"
"        s Change code           { 0x0004, code, \"current\", 0x00, \"new\", "
"0x00 }\n"
"                                where code: 1: security code (5 chars)\n"
"                                            2: PIN (4 chars)\n"
"                                            3: PIN2 (4 chars)\n"
"                                            4: PUK (8 chars)\n"
"                                            5: PUK2 (8 chars)\n"
"        s Status request        { 0x0007, 0x01 }\n"
"        r pin recvd             { 0x0008, accepted }\n"
"                                where accepted: 0x0c (or 0x06): OK\n"
"                                                code: waiting for "
"(0x08/0x0004) code\n"
"        s entering code         { 0x000a, code, \"code\", 0x00 }\n"
"                                where code: see 0x08/0x0004\n"
"    0x09: SIM login\n"
"        r login                 { 0x0080 }\n"
"        r logout                { 0x0081 }\n"
"    0x0a: Network status\n"
"        s Key duplication on/off{ 0x0044, on? 0x01: 0x02 }\n"
"        s get used network      { 0x0070 }\n"
"        r network registration  { 0x0071, "
"?,?,?,length,netstatus,netsel,cellIDH,cellIDL,lacH,lacL,netcode,netcode,netcode "
"}\n"
"    0x0c: Keys\n"
"        s Get key assignments   { 0x0040, 0x01 }\n"
"        r Get key assignments   { 0x0041, {key '1'}, 0x00, {key '2'} "
"... {key '0'}, 0,0,0, {symbols}, 0 }\n"
"                                where {key '0'} => ' ', '0'\n"
"        s Press key             { 0x0042, press: 0x01; release: 0x02, "
"button, 0x01 }\n"
"                                where button: 0x01 - 0x09: 1-9\n"
"                                              0x0a: 0\n"
"                                              0x0b: #\n"
"                                              0x0c: *\n"
"                                              0x0d: Power\n"
"                                              0x0e: Pick up phone\n"
"                                              0x0f: Hang\n"
"                                              0x10: Volume +\n"
"                                              0x11: Volume -\n"
"                                              0x17: Up\n"
"                                              0x18: Down\n"
"                                              0x19: Menu\n"
"                                              0x1a: Names\n"
"                                              0x1B onwards: don't know but "
"they do produce\n"
"                                                   a beep and light up the "
"keypad as if\n"
"                                                   a key had been "
"pressed. \n"
"        r Press key ack         { 0x0043, press/release/error(0x05) }\n"
"        s ???                   { 0x0044 }\n"
"        r ??? ack               { 0x0045, 0x01 }\n"
"    0x0d: Status\n"
"        r Display               { 0x0050, 0x01, y, x, len, "
"\"string\"(unicode) }\n"
"        s Status request        { 0x0051 }\n"
"        r Status                { 0x0052, no. of byte pairs, {byte pair} }\n"
"                                where {byte pair}: {cmd, 1:off 2:on}\n"
"                                cmd: 1: call in progress\n"
"                                     2: ???\n"
"                                     3: have unread sms\n"
"                                     4: voice call active\n"
"                                     5: fax call active\n"
"                                     6: data call active\n"
"                                     7: key lock active\n"
"                                     8: is SMS storage full\n"
"        s Display status        { 0x0053, 1:on 2:off }\n"
"                                (will send displayed messages with x,y "
"coordinates)\n"
"        r Display status ack    { 0x0054, 1 }\n"
"    0x11: Phone clock & alarm\n"
"        s set date and time     { 0x0060, "
"1,1,7,yearh,yearl,month,mday,hour,min,0x00 }\n"
"        r date and time set     { 0x0061 }\n"
"        s get date and time     { 0x0062 }\n"
"        r date and time recvd   { "
"0x0063,date_set?,time_set?,?,?,yearh,yearl,month,mday,hour,min,second }\n"
"                                where: date_set & time_set==0x01 - set\n"
"                                                0x00 - not set, "
"?,?,yearh,yearl,month,mday,hour,min,second\n"
"                                                                   not "
"available in frame\n"
"        s set alarm             { 0x006b, 1,32,3,0x02(on-off),hour,min,0x00 "
"}\n"
"        r alarm set             { 0x006c }\n"
"        s get alarm             { 0x006d }\n"
"        r alarm received        { 0x006e,?,?,?,?,alrm(==2:on),hour,min }\n"
"    0x12: Connect to NBS port (61xx only ?)\n"
"        s Send                  {+0x0c, 0x01, UDH header, data}\n"
"                                (without 0,1 header  -- for oplogo, cli, "
"ringtone etc upload)\n"
"                    where: UDH header = 0x06, 0x05, "
"0x04,destporth,destportl,srcporth,srcportl\n"
"    0x13: Calendar notes\n"
"        s Write calendar note   { 0x0064, 0x01, 0x10, length, type, yearH, "
"yearL, month, day, hour, timezone,\n"
"                                  alarm?(alarm yearH, yearL, month, day, "
"hour, timezone): (0,0,0,0,0,0),\n"
"                                  textlen, \"text\" }\n"
"        r Write cal.note report { 0x0065, return }\n"
"                                where return: 0x01: ok\n"
"                                              0x73: failure\n"
"                          0x81: calendar functions busy. Exit Calendar menu "
"and try again\n"
"        s Calendar notes set    { 0x0066... }\n"
"        r Calendar note recvd   { 0x0067, 0x01, ?, length, type, "
"yrH,yrL,mon,day,hr,tz,alrm yrH,yrL,mon,day,hr,tz,textlen, \"text\" }\n"
"        r Cal.note recvd error  { 0x0067, err }\n"
"                                where err: 0x93: not available\n"
"                                          (0x01: OK)\n"
"                                           other: error\n"
"        s Delete cal.note       { 0x0068, location }\n"
"        r Del. cal.note report  { 0x0069, err }\n"
"                                where err: 0x01: OK\n"
"                                           0x93: cannot delete\n"
"    0x14: SMS funcs\n"
"        s Write SMS to SIM      { 0x0004, .... }\n"
"        s Mark SMS as read      { 0x0007, 0x02, location, 0x00, 0x64 }\n"
"        r SMS message frame rcv { 0x0008,subtype,?,num,?,BCD(smscenter)...} "
"20->type, 22->status\n"
"                                where type: 0x06: delivery report \n"
"                                      status: 0x00: delivered\n"
"                                              0x30: pending\n"
"                                              0x46: failed\n"
"                                              0x09: reading failed\n"
"                                      subtype: 0x02: invalid mem type\n"
"                                               0x07: empty SMS location\n"
"                           0x0c: no access to memory (no PIN in card, "
"etc.)\n"
"        s Delete SMS message    { 0x000a, 0x02, location }\n"
"        r Delete OK             { 0x000b }\n"
"        s SMS status request    { 0x0036, 0x64 }\n"
"        r SMS status            { 0x0037,?,?,?,?,?,?,msgnumber,unread }\n"
"        r SMS status error      { 0x0038 }\n"
"    0x3f: WAP \n"
"        s Enable WAP frames     { 0x0000}\n"
"        r Enable WAP frames     { 0x0002, 0x01}\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6110.rst:511 docs/manual/protocol/n7110.rst:458
#, no-wrap
msgid ""
"        s  ??                   { 0x0003}\n"
"        r  ??                   { 0x0004}\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6110.rst:521 docs/manual/protocol/n7110.rst:468
#, no-wrap
msgid ""
"        s Get WAP bookmark      { 0x0006, 0x00, location}\n"
"                                  where location: 0 - 14\n"
"        r Get WAP bookmark      { 0x0007, 0x00, name_len, name(unicode),\n"
"                                  url_len, url(unicode), "
"0x01,0x80,0x00[7]}\n"
"        r Get WAP bookmark err  { 0x0008, error }\n"
"                                  where error:\n"
"                                    0x00(?)invalid position\n"
"                                    0x01   user inside \"Bookmarks\" "
"menu. Must leave it\n"
"                                    0x02   invalid/too high/empty location\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6110.rst:534 docs/manual/protocol/n7110.rst:481
#, no-wrap
msgid ""
"        s Set WAP bookmark      { 0x0009, 0xff, 0xff, name_len, "
"name(unicode),\n"
"                                  url_len, url(unicode), 0x01,0x80,0x00[7] "
"}\n"
"                                  Note: bookmark is added to the first free "
"location.\n"
"        r Set WAP bookmark OK   {+0x01, 0x36, 0x0a, block }\n"
"                                  where block:\n"
"                                    0x0a, "
"location_of_just_written_bookmark(?),\n"
"                                    0x00, next_free_location(?)\n"
"        r Set WAP bookmark err  {+0x01, 0x36, 0x0b, error }\n"
"                                  where error:\n"
"                                   0x04 - memory is full\n"
"                                   0x01 - we are in the bookmark menu\n"
"                                   0x00 - unknown reason for now ;(\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6110.rst:539 docs/manual/protocol/n7110.rst:486
#, no-wrap
msgid ""
"    ?   s Delete WAP bookmark   { 0x000c, 0x00, location }\n"
"                                  where: location = 0-14\n"
"    ?   r Delete WAR bookmark OK{ 0x000d }\n"
"    ?   r Delete WAPbookmark err{ 0x000e, 0x02 }\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6110.rst:542 docs/manual/protocol/n7110.rst:489
#, no-wrap
msgid ""
"        s ??                    { 0x000F}\n"
"        r ??                    { 0x0010, 0x00}\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6110.rst:555
#, no-wrap
msgid ""
"        s Get WAP settings 1    { 0x0015, location}\n"
"                                where location: 0x00 - 0x05\n"
"        r Get WAP settings 1 OK { 0x0016, title length, title (Unicode), URL "
"length, URL(Unicode),con_type, ???[6 bytes],location, ???[5 "
"bytes],security,...}\n"
"                                where:\n"
"                                  con_type: 0x00 - temporary\n"
"                                            0x01 - continuous\n"
"                                  location: when use \"Get WAP settings 2 "
"frame\", must give it\n"
"                                  security: 0x00 = no, 0x01 = yes\n"
"        r Get WAP settings 1 err{ 0x0017, error }\n"
"                                  where error:\n"
"                                    0x01   user inside \"Settings\" "
"menu. Must leave it\n"
"                                    0x02   invalid/too high/empty location\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6110.rst:798
#, no-wrap
msgid ""
"        s Get WAP settings 2    { 0x001b, location}\n"
"                                where location: 0x00 - 0x1d (you get it in "
"\"Get WAP settings 1\" frame)\n"
"        r Get WAP settings 2 OK { 0x001c, 0x01, type, frame...}\n"
"                                where type : 0x00 - SMS bearer\n"
"                                               frame:\n"
"                                                 service_num_len, "
"service_num (Unicode), server_num_len, server_num(Unicode)\n"
"                                             0x01 - data bearer\n"
"                                               frame:\n"
"                                                 auth, call_type, "
"call_speed, ?, IP len, IP (Unicode), dialup len, dialup (Unicode),\n"
"                                                 user len, user (Unicode), "
"password len, password (Unicode)\n"
"                                                 where auth: 0x00 - normal, "
"0x01 - secure\n"
"                                                       call_type: 0x00 - "
"analogue, 0x01 - ISDN\n"
"                                                       call_speed: 0x00 - "
"9600, 0x01 - 14400\n"
"                         0x02 - USSD bearer\n"
"                           frame: type, service number len/IP len,service "
"num (Unicode)/IP (Unicode),service code len,\n"
"                                  service code (Unicode)\n"
"                             where type: 0x01 - service number, 0x00 - IP\n"
"        r Get WAP settings 2 err{ 0x001d,error}\n"
"                                where: error=0x05    \n"
"    0x40: Security commands\n"
"        s ???                   {+0x00, 0x00, 0x07, 0x11, 0x00, 0x10, 0x00, "
"0x00}\n"
"                                This frame hangs phone (N3310 4.02). Meaning "
"unknown !\n"
"        s Open simlock 1        { 0x02, 0x03, 0x1f, 0x11, 0x01, 0x01, 0x10, "
"0x00}\n"
"        r Open simlock 1        { 0x02 }\n"
"        s ???(N6150)            { 0x08, 0x00 }\n"
"        r ???(N6150)            { 0x08 }\n"
"        s Enable extended cmds  { 0x64, cmd }\n"
"                                where cmd: 0x00: off\n"
"                                           0x01: on\n"
"                           0x02: enter service mode ?\n"
"                                           0x03: reset (doesn't ask for PIN "
"again)\n"
"                                           0x04: reset (PIN is requested)\n"
"                                                 In 5110 makes reset without "
"PIN\n"
"                                           0x06: CONTACT SERVICE!!! Don't "
"try it!\n"
"        s Reset phone settings  { 0x65, value, 0x00 }\n"
"                                where value: 0x08 - reset UI (User "
"Interface) settings\n"
"                                 0x38 - reset UI, SCM and call counters\n"
"                                             0x40 - reset test 36 in "
"netmonitor\n"
"        r Reset phone settings  { 0x65, 0x00 }\n"
"        s Get IMEI              { 0x66 }\n"
"        r Get IMEI              { 0x66, 0x01, IMEI, 0x00}\n"
"        s (ACD Readings)?(N6150 { 0x68 }\n"
"        r (ACD Readings)?(N6150 { 0x68, ... }\n"
"        s Get Product Profile\n"
"          Settings              { 0x6a}\n"
"        r Get Product Profile\n"
"          Settings              { 0x6a, 4bytes with Product Profile Settings "
"}\n"
"        s Set Product Profile\n"
"          Settings              { 0x6b, 4bytes with Product Profile Settings "
"}\n"
"        r Set Product Profile\n"
"          Settings OK ?         { 0x6b }\n"
"        s Get code              { 0x6e, code }\n"
"                                where code: see 0x08/0x0004 (only sec.code "
"is allowed)\n"
"        r Get code              { 0x6e, code, allowed, allowed? (sec code "
"(text)) }\n"
"                                where code: see 0x08/0x0004\n"
"                                      allowed: 0: no\n"
"                                               1: yes\n"
"        s Set code              { 0x6f, code, sec code(text), 0x00 }\n"
"                                where code: see 0x08/0x0004\n"
"        s Start monitoring      { 0x70, block }\n"
"                                where block(N6150):\n"
"                                  "
"0x7f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,\n"
"                                  "
"0xff,0xff,0xff,0xff,0xff,0xf9,0x76,0x65,0x20,0x00,\n"
"                                  "
"0x00,0x00,0x00,0x00,0x18,0x26,0x15,0x7d,0x0a,0x00,\n"
"                                  "
"0xf5,0x82,0x7f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,\n"
"                                  "
"0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,0x77,0x80,\n"
"                                  "
"0x77,0x80,0xf2,0x82,0x20,0x20,0x20,0x20,0x20,0x20,\n"
"                                  0x20,0x20,0x20,0x20\n"
"                                This block enables probably all possible "
"monitorred parameters.\n"
"                                After it phone sends 0x00 message type "
"values\n"
"        s Break monitoring      { 0x71 }\n"
"        r Break monitoring      { 0x71 }\n"
"    ?   s ????                  { 0x74, 0x01, 0x01, 0x0e }\n"
"    ?   r ????                  { 0x74 }\n"
"        s Call commands         { 0x7c, block }\n"
"                                where where: command, (values)\n"
"                          command: 0x01\n"
"                          values: number(ASCII), 0x00 - makes voice call\n"
"                      command: 0x02 - answer call\n"
"                      command: 0x03 - release call\n"
"        r Call commands         { 0x7c, command }\n"
"        s Netmonitor            { 0x7e, field }\n"
"                                where: field: 00: next\n"
"                                              F0: reset\n"
"                                              F1: off\n"
"                                              F2: field test menus\n"
"                                              F3: developer menus\n"
"        s Open simlock 2        { 0x81, 0x01, locknumber, 0x10, 0x10, 0x10, "
"0x10, 0x10 }\n"
"                                Note: sets simlock type to factory?\n"
"                    where locknumber: 1,2,4,8\n"
"        s Open simlock 2        { 0x81, 0x01, locknumber }\n"
"                    where locknumber: 1,2,4,8\n"
"        s Close simlock         { 0x82, 0x01, locknumber, 0x00, 0x00, "
"locksinfo(lock1,4,2,3), 0x00 }\n"
"                                where locknumber: 1,2,4,8\n"
"        r Close simlock         { 0x82, the rest like in 0x40/0x8a }\n"
"        s Get simlock info      { 0x8a, 0x00}\n"
"        r Get simlock info      { 0x8a, 0x00, 0x01, lockstype, locksclosed, "
"0x00, 0x00, locksinfo(lock1,4,2,3), counter1,counter2,counter4,counter4,0x00 "
"}\n"
"                                where: lockstype:   bit1,bit2,bit3,bit4 - if "
"set, selected lock is user lock\n"
"                                       locksclosed: bit1,bit2,bit3,bit4 - if "
"set, selected lock is closed\n"
"                                       counter1 - counter4: counters for "
"locks\n"
"        s Set downloaded OpName { 0x8b, 0x00, MCC1, MCC2, MNC, Name, 0x00 "
"}\n"
"        r SetdownloadedOpNameOK?{ 0x8b, 0x00, 0x01 }\n"
"        s Get downloaded OpName { 0x8c, 0x00 }\n"
"        r Get downloaded OpName { 0x8c, 0x00, 0x01, MCC1, MCC2, MNC, Name, "
"0x00,...}\n"
"        s Buzzer pitch          { 0x8f, volume, hzLO, hzHI }\n"
"                                if volume and hz is 0, it's off\n"
"        r Buzzer pitch          { 0x8f}\n"
"        s ACD Readings ?        { 0x91, parameter?(0x02,0x03,0x04,0x05,0x07) "
"}\n"
"        r ACD Readings ?        { 0x91, parameter?, value? }\n"
"        s Sleep mode test       { 0x92, 0x00, 0x00, howlong(2 bytes), enable "
"}\n"
"                                where: enable == 0x01 - enable after test\n"
"                                     0x00 - don't enable after test\n"
"                       howlong (ms) = 0x07, 0xd0 = 2000\n"
"        s ???(N6150)            { 0x98, 0x00 }\n"
"        r ???(N6150)            { 0x98, 0x00, 0x04 }\n"
"        s Get bin ringtone      { 0x9e, location }\n"
"                                where: location=0,1,etc.\n"
"        r Get bin ringtone      { 0x9e, location, error, contents... }\n"
"                                where location=0,1,etc.\n"
"                                      error=0x0a, ringtone NOT available\n"
"                                            0x00, OK\n"
"        s Set bin ringtone      { 0xa0, location, 0x00, contenst... }\n"
"                                where: location=0,1,etc.\n"
"        r Set bin ringtone      { 0xa0, location, error }\n"
"                                  where location=0,1,etc.\n"
"                                        error=0x0a, ringtone NOT set\n"
"                                              0x00, ringtone set OK\n"
"        r Get MSid              { 0xb5, 0x01, 0x2f, msid, 0x25 }\n"
"        s Get info about phone  { 0xc8, 0x01 }\n"
"        r Get info about phone  { 0xc8, 0x01, 0x00, \"V \", \"firmware\", "
"0x0a, \"firmware date\", 0x0a, \"model\", 0x0a, \"(c) NMP.\", 0x00 }\n"
"        s Get MCU SW Checksum   { 0xc8, 0x02 }\n"
"        r Get MCU SW Checksum   { 0xc8, 0x02, 0x00, checksum (4 bytes),0x00 "
"}\n"
"        s DPS External SW       { 0xc7, 0x03 }\n"
"        r DSP External SW       { 0xc7, 0x03, 0x00, string,0x00 }\n"
"        s Get HW                { 0xc8, 0x05 }\n"
"        r Get HW                { 0xc8, 0x05, 0x00, HW version (4 bytes), "
"0x00 }\n"
"        s Get \"Made\" Date       { 0xc8, 0x05 }\n"
"        r Get \"Made\" Date       { 0xc8, 0x05, 0x00, date(4 bytes), 0x00 "
"}\n"
"        s Get DSP Internal SW   { 0xc8, 0x09 }\n"
"        r Get DSP Internal SW   { 0xc8, 0x09, 0x00, version (1 bytes), 0x00 "
"}\n"
"        s Get PCI version       { 0xc8, 0x0b }\n"
"        r Get PCI version       { 0xc8, 0x0b, 0x00, version, 0x00 }\n"
"        s Get system ASIC       { 0xc8, 0x0c }\n"
"        r Get system ASIC       { 0xc8, 0x0c, 0x00, string, 0x00 }\n"
"        s Get COBBA             { 0xc8, 0x0d }\n"
"        r Get COBBA             { 0xc8, 0x0d, 0x00, string, 0x00 }\n"
"        s Get PLUSSA            { 0xc8, 0x0e }\n"
"        r Get PLUSSA            { 0xc8, 0x0e, available, 0x00 }\n"
"                                where available: 0x01: not available\n"
"        s Get CCONT             { 0xc8, 0x0f }\n"
"        r Get CCONT             { 0xc8, 0x0f, available, 0x00 }\n"
"                                where available: 0x01: not available\n"
"        s Get PPM version       { 0xc8, 0x10 }\n"
"        r Get PPM version       { 0xc8, 0x10, 0x00, \"V \", \"firmware\", "
"0x0a, \"firmware date\", 0x0a, \"model\", 0x0a, \"(c) NMP.\", 0x00 }\n"
"        s Get PPM info          { 0xc8, 0x12 }\n"
"        r Get PPM info          { 0xc8, 0x12, 0x00, PPM version (\"B\", "
"\"C\", etc.), 0x00 }\n"
"        s Set HW version        { 0xc9, 0x05, version, 0x00 }\n"
"        s Get Product Code      { 0xca, 0x01 }\n"
"        r Get Product Code      { 0xca, 0x01, 0x00, number, 0x00 }\n"
"        s Get Order Number      { 0xca, 0x02 }\n"
"        r Get Order Number      { 0xca, 0x02, 0x00, string, 0x00 }\n"
"        s Get Prod.Ser.Number   { 0xca, 0x03 }\n"
"        r Get Prod.Ser.Number   { 0xca, 0x03, 0x00, number, 0x00 }\n"
"        s Get Basic Prod.Code   { 0xca, 0x04 }\n"
"        r Get Basic Prod.Code   { 0xca, 0x04, 0x00, number, 0x00 }\n"
"        s Set Product Code      { 0xcb, 0x01, product code, 0x00 }\n"
"        s Set Order Number      { 0xcb, 0x02, number, 0x00 }\n"
"        s Set Prod.Ser.Number   { 0xcb, 0x03, number, 0x00 }\n"
"        s Get (original ?)IMEI  { 0xcc, 0x01 }\n"
"        r Get (original ?)IMEI  { 0xcc, 0x01, IMEI, 0x00 }\n"
"        s Get Manufacture Month { 0xcc, 0x02 }\n"
"        r Get Manufacture Month { 0xcc, 0x02, 0x00, string, 0x00 }\n"
"        s Get Purchare date     { 0xcc, 0x04 }\n"
"        r Get Purchare date     { 0xcc, 0x04, 0x00, string, 0x00 }\n"
"        s Set \"Made\" date       { 0xcd, 0x02, string, 0x00 }\n"
"        s Make \"all\" phone tests{ 0xce,0x1d,0xfe,0x23,0x00,0x00}\n"
"        s Make one phone test   { 0xce,0x1d,num1,num2,num3,num4}\n"
"                                Where num1-num4: 0x02,0x00,0x00,0x00;\n"
"                                                 0x04,0x00,0x00,0x00;\n"
"                                                 0x08,0x00,0x00,0x00;\n"
"                                                 0x10,0x00,0x00,0x00;\n"
"                                                 0x20,0x00,0x00,0x00;\n"
"                                                 0x40,0x00,0x00,0x00;\n"
"                                                 0x80,0x00,0x00,0x00;\n"
"                                                 0x00,0x01,0x00,0x00;\n"
"                                                 0x00,0x02,0x00,0x00;\n"
"                                                 0x00,0x04,0x00,0x00; - "
"\"Power off\"\n"
"                                                   No test for \"Security "
"data\"\n"
"                                                 0x00,0x10,0x00,0x00;\n"
"                                                 0x00,0x20,0x00,0x00;\n"
"                                                 0x00,0x40,0x00,0x00;\n"
"                                                 0x00,0x80,0x00,0x00;\n"
"                                                 0x00,0x00,0x01,0x00;\n"
"                                                 ....\n"
"                                                 0x00,0x00,0x10,0x00;\n"
"        s Result of phone tests { 0xcf }\n"
"        r Result of phone tests { 0xcf, number of tests, results of next "
"tests }\n"
"        s ???                   { 0xd1 }\n"
"        r ???(N5110)            { 0xd1, 0x00, 0x1d, 0x00, 0x01, 0x08, 0x00 "
"}\n"
"        s LCD Test              { 0xd3, value }\n"
"                                where value: 0x03, 0x02 - 1'st test\n"
"                                             0x03, 0x01 - 2'nd test\n"
"                                             0x02, 0x03 - clears screen\n"
"        s ACD Readings(N6150)?  { 0xd4, 0x02, 0x00, 0x02, 0x00, 0x0e, "
"0x01}\n"
"        r ACD Readings(N6150)?  { 0xd4, 0x02, 0x00, 0x02, 0x00, 0x0e, 0x01, "
"?}\n"
"        s Get EEPROM            { 0xd4, 0x02, 0x00, 0xa0, locationLo, "
"locationHi, numofbytes }\n"
"                                where: numofbytes - how many bytes to read\n"
"                    Note: Works ONLY in MBUS\n"
"        r Get EEPROM            { 0xd4, 0x02, 0x00, 0xa0, locationLo, "
"locationHi, numofbytes, contest... }\n"
"                                where numofbytes - how many bytes "
"available\n"
"                             contest - bytes with contests (if numofbytes != "
"0)\n"
"    0x41: Snake game ?\n"
"    0x47:\n"
"        s Get Picture Image     { 0x0001, location }\n"
"        r Get Picture Image     when contains sender number\n"
"                                { 0x0002, location, number(like in SMS), "
"0x00, len, text, 0x00, width, height, 0x01, bitmap }\n"
"                    NOTE:\n"
"                                  Supports only 0x81 and 0x91 coding (NOT "
"alphanumeric numbers!)\n"
"                                  in sender without sender number\n"
"                                { 0x0002, location, 0x00, 0x00, 0x00, len, "
"text, 0x00, width, height, 0x01, bitmap }\n"
"        s Set Picture Image     { 0x0003, frame...}\n"
"                                where frame: see 0x47/0x0002\n"
"        r Get/Set PictureImageOK{ 0x0004 }\n"
"        r Set Picture Image err { 0x0005, error? }\n"
"                                where error=0x74 - wrong location ?\n"
"    0x64:\n"
"        s Phone ID request      { 0x0010 }\n"
"        r Phone ID recvd        { 0x0011, \"NOKIA\", \"imei\", 0, \"model\", "
"0, \"prod.code\", 0, \"HW\", 0, \"firmware\", magic bytes x 4 ... }\n"
"        s Accessory connection  { 0x0012, 16x0x00, 'NOKIA&NOKIA accessory', "
"3x0x00 } (45 bytes)\n"
"    0x7f: Acknowledge(FBUS/IRDA){+type, seq }\n"
"          Acknowledge(MBUS)...\n"
"    0xd0: \n"
"        s Power on message seq1 {+04 }\n"
"        r Power on message seq1 {+05 }\n"
"    0xd1:\n"
"        s Get HW&SW version     { 0x0003, 0x00 }\n"
"    0xd2:\n"
"        r Get HW&SW version     { 0x0003 \"V \" \"firmware\\n\" \"firmware "
"date\\n\"\n"
"                                  \"model\\n\" \"(c) NMP.\" }\n"
"    0xda: ? (during playing 2 player snake)\n"
"    0xf0:\n"
"        s Send RLP frame        {+0x00, 0xd9, ... }\n"
"    0xf4: Power on message seq 2\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung.rst:2
#, no-wrap
msgid ""
"SAMSUNG Organizer AT commands\n"
"=============================\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung.rst:6
msgid "Get organizer information +++++++++++++++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung.rst:8 docs/manual/protocol/samsung.rst:35 docs/manual/protocol/samsung.rst:264 docs/manual/protocol/samsung.rst:283
msgid "Invocation::"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung.rst:10
#, no-wrap
msgid "    AT+ORGI?\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung.rst:12 docs/manual/protocol/samsung.rst:272 docs/manual/protocol/samsung.rst:289 docs/manual/python/objects.rst:194 docs/manual/python/objects.rst:244 docs/manual/python/objects.rst:280 docs/manual/python/objects.rst:492 docs/manual/python/objects.rst:578 docs/manual/python/objects.rst:644 docs/manual/python/objects.rst:799
msgid "Example::"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung.rst:16
#, no-wrap
msgid ""
"    AT+ORGI?\n"
"    +ORGI: 84,400,30,100,30\n"
"    OK\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung.rst:18
msgid "Return 5 values:"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung.rst:29
#, no-wrap
msgid ""
"par1\n"
"    ( 84) Busy entries (1 to par1 of par2 possibles entries)\n"
"par2\n"
"    (400) Max possible entries\n"
"par3\n"
"    ( 30) Unknown\n"
"par4\n"
"    (100) Unknown\n"
"par5\n"
"    ( 30) Unknown\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung.rst:33
msgid "Get organizer details +++++++++++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung.rst:37
#, no-wrap
msgid "    AT+ORGR=number\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung.rst:40
msgid "Get organizer details for index entry \"number\" Returns 24 values:"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung.rst:42
msgid "Example 1::"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung.rst:46
#, no-wrap
msgid ""
"    AT+ORGR=10\n"
"    +ORGR: 161,1,\"Comprar lagrimas "
"artificiales\",\"Farmacia\",2,4,2009,9,0,2,4,2009,9,10,\"Farmacia\",1,1,0,3,,,29,1,2010\n"
"    OK\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung.rst:48
msgid "Example 2::"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung.rst:52
#, no-wrap
msgid ""
"    AT+ORGR=15\n"
"    +ORGR: 67,2,,\"Laura Santiesteban "
"Cabrera\",3,11,2009,9,0,,,,,,,1,3,0,4,,,,,\n"
"    OK\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung.rst:54
msgid "Example 3::"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung.rst:58
#, no-wrap
msgid ""
"    AT+ORGR=19\n"
"    +ORGR: 205,3,,\"Cemento\",13,3,2009,10,35,13,3,2009,,,,1,3,0,0,1,0,,,\n"
"    OK\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung.rst:60
msgid "Example 4::"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung.rst:64
#, no-wrap
msgid ""
"    AT+ORGR=23\n"
"    +ORGR: "
"235,4,\"Curso\",\"Averiguar\",13,3,2009,9,50,13,3,2009,9,59,,1,1,0,,,,,,\n"
"    OK\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung.rst:66
msgid "+ORGR: AT+ORGR answer header"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung.rst:71
#, no-wrap
msgid ""
"par01\n"
"    Pointer to real memory position\n"
"par02\n"
"    Organizer entry type (1=appointments, 2=aniversaries, 3=tasks, "
"4=miscellany )\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung.rst:73
msgid "If par02 =1, appointment entry type"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung.rst:118
#, no-wrap
msgid ""
"par03\n"
"    Organizer entry short name\n"
"par04\n"
"    Organizer entry detailed description\n"
"par05\n"
"    Start day\n"
"par06\n"
"    Start month\n"
"par07\n"
"    Start year\n"
"par08\n"
"    Start hour\n"
"par09\n"
"    Start minute\n"
"par10\n"
"    End day\n"
"par11\n"
"    End month\n"
"par12\n"
"    End year\n"
"par13\n"
"    End hour\n"
"par14\n"
"    End minute\n"
"par15\n"
"    Location\n"
"par16\n"
"    Alarm flag (0=no, 1=yes)\n"
"par17\n"
"    Alarm time unit (1=minutes, 2=hours, days, 4=weeks)\n"
"par18\n"
"    Alarm items quantity\n"
"par19\n"
"    Alarm repeat flag (0 or empty=no, 2=yes)\n"
"par20\n"
"    Empty\n"
"par21\n"
"    Empty\n"
"par22\n"
"    Repeat until day\n"
"par23\n"
"    Repeat until month\n"
"par24\n"
"    Repeat until year\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung.rst:120
msgid "If par02 = 2, aniversary entry type"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung.rst:165
#, no-wrap
msgid ""
"par03\n"
"    Empty\n"
"par04\n"
"    Ocassion name\n"
"par05\n"
"    Alarm day\n"
"par06\n"
"    Alarm month\n"
"par07\n"
"    Alarm year\n"
"par08\n"
"    Alarm hour\n"
"par09\n"
"    Alarm minutes\n"
"par10\n"
"    Empty\n"
"par11\n"
"    Empty\n"
"par12\n"
"    Empty\n"
"par13\n"
"    Empty\n"
"par14\n"
"    Empty\n"
"par15\n"
"    Empty\n"
"par16\n"
"    Alarm flag (0=no, 1=yes)\n"
"par17\n"
"    Alarm time unit (1=minutes, 2=hours, days, 4=weeks)\n"
"par18\n"
"    Alarm items quantity\n"
"par19\n"
"    Repeat each year (0=no, 4=yes)\n"
"par20\n"
"    Empty\n"
"par21\n"
"    Empty\n"
"par22\n"
"    Empty\n"
"par23\n"
"    Empty\n"
"par24\n"
"    Empty\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung.rst:167
msgid "If par02 = 3, task entry type"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung.rst:212
#, no-wrap
msgid ""
"par03\n"
"    Empty\n"
"par04\n"
"    Task name\n"
"par05\n"
"    Start day\n"
"par06\n"
"    Start month\n"
"par07\n"
"    Start year\n"
"par08\n"
"    Alarm hour\n"
"par09\n"
"    Alarm minute\n"
"par10\n"
"    Due day\n"
"par11\n"
"    Due month\n"
"par12\n"
"    Due year\n"
"par13\n"
"    Empty\n"
"par14\n"
"    Empty\n"
"par15\n"
"    Empty\n"
"par16\n"
"    Alarm flag (0=no, 1=yes)\n"
"par17\n"
"    Alarm time unit (1=minutes, 2=hours, days, 4=weeks)\n"
"par18\n"
"    Alarm items quantity\n"
"par19\n"
"    Empty\n"
"par20\n"
"    Task priority (1=high, 2=normal, 3=low)\n"
"par21\n"
"    Task status (0=undone, 1=done)\n"
"par22\n"
"    Empty\n"
"par23\n"
"    Empty\n"
"par24\n"
"    Empty\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung.rst:214
msgid "If par02 = 4, miscellany entry type"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung.rst:259
#, no-wrap
msgid ""
"par03\n"
"    Entry name\n"
"par04\n"
"    Details\n"
"par05\n"
"    Start day\n"
"par06\n"
"    Start month\n"
"par07\n"
"    Start year\n"
"par08\n"
"    Start hour\n"
"par09\n"
"    Start minutes\n"
"par10\n"
"    End day\n"
"par11\n"
"    End month\n"
"par12\n"
"    End year\n"
"par13\n"
"    End hour\n"
"par14\n"
"    End minutes\n"
"par15\n"
"    Empty\n"
"par16\n"
"    Alarm flag (0=no, 1=yes)\n"
"par17\n"
"    Alarm time unit (1=minutes, 2=hours, days, 4=weeks)\n"
"par18\n"
"    Alarm items quantity\n"
"par19\n"
"    Empty\n"
"par20\n"
"    Empty\n"
"par21\n"
"    Empty\n"
"par22\n"
"    Empty\n"
"par23\n"
"    Empty\n"
"par24\n"
"    Empty\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung.rst:262
msgid "Write organizer entry +++++++++++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung.rst:266
#, no-wrap
msgid "    AT+ORGW=par0,par1,par2...par24\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung.rst:268
msgid "Write organizer entry in memory location par0"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung.rst:270
msgid "If par0=65535 then locate next empty entry on memory"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung.rst:276
#, no-wrap
msgid ""
"    "
"AT+ORGW=65535,0,4,\"p2\",\"p2\",14,3,2009,2,23,14,3,2009,3,23,,0,0,0,,,,,,\n"
"    +ORGW: 253,253\n"
"    OK\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung.rst:278
msgid "par1 to par24 has the same significance than in the AT+ORGR command"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung.rst:281
msgid "Delete organizer entry ++++++++++++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung.rst:285
#, no-wrap
msgid "    AT+ORGD=number\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung.rst:287
msgid "Delete organizer entry of index \"number\""
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung.rst:291
#, no-wrap
msgid "    AT+ORGD=21\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung.rst:293
#, no-wrap
msgid "    OK\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung.rst:296 docs/manual/testing/dummy-driver.rst:38
msgid "Notes +++++"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung.rst:298
msgid "Read command use index reference."
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung.rst:300
msgid ""
"Write command uses index and direct memory reference with special 65535 "
"value to locate empty memory position."
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung.rst:302
msgid ""
"Delete command use direct memory reference, index are automatically "
"reorganized."
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung.rst:304
msgid ""
"Hint: After create or delete an organizer entry, reread full information to "
"update index table."
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:2
#, no-wrap
msgid ""
"m-obex protocol used by some Samsung mobiles\n"
"============================================\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:5
msgid ""
"This document is copied from <http://code.google.com/p/samsyncro/wiki/mobex> "
"and extended."
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:7
#, no-wrap
msgid ""
"Introduction\n"
"------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:10
msgid ""
"This is an attempt to document the m-obex protocol. It is a obex-variation "
"by Samsung used to exchange PIM data and files over bluetooth."
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:12
msgid ""
"This documentation is by no means complete but is only a reference for the "
"samsyncro implementation. As I don't know the obex protocol I can't say in "
"which parts it differs from the standard-obex. The only thing I found "
"strange is the fact, that you will always get 0xA0 as a response. Wich means "
"Ok, sucess in obex. If there was an error you will find it's error code in "
"the 0x42 header. If this is a normal behavior: Why are there so many "
"response codes defined?"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:14
msgid ""
"The information about the protocol was gained by listening to the transfered "
"data from Samsungs New PC Studio to a SGH-F480i and B2100 mobile."
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:16
#, no-wrap
msgid ""
"Requirements\n"
"------------\n"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/protocol/m-obex.rst:20
msgid "Established bluetooth connection to the serial channel of the mobile"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/protocol/m-obex.rst:20
msgid "Some way to access this serial port. For example minicom."
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:22
#, no-wrap
msgid ""
"Starting the obex server\n"
"------------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:25
msgid "To start the obex server you have to send this AT command first::"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:27
#, no-wrap
msgid "    AT+SYNCML=MOBEXSTART\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:29
msgid "Some phones seem to start with following command::"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:31
#, no-wrap
msgid "    AT$TSSPCSW=1\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:33
#, no-wrap
msgid ""
"Obex commands\n"
"-------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:36
msgid ""
"In the following chapters I will describe the obex packages to read and edit "
"data on the mobile. I think most of them are in standard-obex format and are "
"following this structure:"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:45
#, no-wrap
msgid ""
"+-------------------------------------------+-----------------------------------+-------------------------------------------+\n"
"|Package Header                             |Session Id                         "
"|Obex Header(s)                             |\n"
"+===========================================+===================================+===========================================+\n"
"|* First byte: Type of request.             |* 0xCB and four bytes of "
"session id|* First byte: Type of header.              |\n"
"|* Second and third bytes: length of package|                                   "
"|* Second and third bytes: length of header.|\n"
"|                                           |                                   "
"|* Next bytes: data.                        |\n"
"|                                           |                                   "
"|* Last byte: 0x00                          |\n"
"+-------------------------------------------+-----------------------------------+-------------------------------------------+\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:47
msgid ""
"For detailed information about obex, for example what types of packages and "
"headers exists, get the official Obex documentation from Inrared Data "
"Association. But I don't know if this is available for free."
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:49
msgid "Here is a list of the most used types for the Samsung mobiles:"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:51
msgid ""
"There exists mainly two types of operations: Put (package header 0x02 and "
"0x82) to write data to the mobile and Get (package header 0x03 and 0x83) to "
"retrieve data from the mobile. A put or get operation can be divided into "
"several packages. The high-bit indicates if this is the last package of an "
"operation. For example if you want to transfer a file to the mobile you send "
"n-time 0x02 packages and only the last one is 0x82."
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:53
msgid ""
"Headers consists normally out of three blocks: First byte: Header type, "
"second and third byte: length of the header (if the headers length is "
"variable), following bytes: data. The most used header types are"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:71
#, no-wrap
msgid ""
"+-----------------------+------+------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+\n"
"| Obex description      | Byte | following two bytes    | following bytes                                                                                                                                   "
"|\n"
"+=======================+======+========================+===================================================================================================================================================+\n"
"| Name                  | 0x01 | length of header       | Used for "
"filesystem operation to name a path or file                                                                                              "
"|\n"
"+-----------------------+------+------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+\n"
"| Type                  | 0x42 | length of header       | Obex command for "
"example \"m-obex/contacts/list\"                                                                                                   "
"|\n"
"+-----------------------+------+------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+\n"
"| Length                | 0xC3 |                        | Used in put "
"operations and specifies the length of the transfered data (without header "
"bytes). The length is represented in 4 bytes.              |\n"
"+-----------------------+------+------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+\n"
"| Body                  | 0x48 | length of header       | Data in a "
"multi-package put operation                                                                                                             "
"|\n"
"+-----------------------+------+------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+\n"
"| End of Bady           | 0x49 | length of header       | Last data package "
"in a put operation                                                                                                              "
"|\n"
"+-----------------------+------+------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+\n"
"| Session id            | 0xCB |                        | Four bytes "
"representing the session id. Needed for multiplexing                                                                                   "
"|\n"
"+-----------------------+------+------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+\n"
"| Application Parameter | 0X4C | length of header       | In a request: "
"Parameters for example a contact's id. <p>In an answer: The error/return "
"code. If it is 0x00 0x00 than the operation was successful |\n"
"+-----------------------+------+------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:73
#, no-wrap
msgid ""
"Contacts\n"
"--------\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:77
msgid "Get contacts count ++++++++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:80
msgid "Request ~~~~~~~"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:89
#, no-wrap
msgid ""
"*83* 00 25\n"
"    Obex Get\n"
"CB 00 00 00 00\n"
"    Session Id\n"
"*42* 00 19 6D 2D 6F 62 65 78 2F 63 6F 6E 74 61 63 74 73 2F 63 6F 75 6E 74 "
"00\n"
"    m-obex command: m-obex/contacts/count\n"
"4C 00 04 01\n"
"    Unknown! Didn' see PC Studio sending something other than 0x01 as "
"parameter\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:100
#, no-wrap
msgid ""
"Answer\n"
"~~~~~~\n"
"*A0* 00 14 \n"
"    Obex ok    \n"
"*C3* 00 00 00 04                                                                                         "
"\n"
"    Maybe the number of requests you have to send to get all contacts. See "
"next chapter for more information \n"
"*4C* 00 05 00 00 \n"
"    Error code       \n"
"*49* 00 07 07 D0 00 18\n"
"    First two data bytes: maximal number of contacts (0x07D0 = 2000). Last "
"two data bytes: Current number of contacts\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:104 docs/manual/protocol/m-obex.rst:276
msgid "List all ++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:115
#, no-wrap
msgid ""
"Request\n"
"~~~~~~~\n"
"*83* 00 26\n"
"    Obex Get package\n"
"*CB* 00 00 00 00\n"
"    Session Id\n"
"*42* 00 18 6D 2D 6F 62 65 78 2F 63 6F 6E 74 61 63 74 73 2F 6C 6F 61 64 00\n"
"    m-obex Command: m-obex/contacts/load\n"
"*4C* 00 06 01 00 00\n"
"    First Byte unknown. Last two bytes: increment until all contacts "
"recieved\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:126
#, no-wrap
msgid ""
"Answer\n"
"~~~~~~\n"
"*A0* 08 C1\n"
"    Obex Ok\n"
"*C3* 00 00 08 B1\n"
"    Length of sent data\n"
"*4C* 00 05 00 02\n"
"    Indicates if these are the last contacts\n"
"*49* 07 41 01 10 01 8D ....\"\n"
"    The first byte is unknown but all answers have this byte, then byte 2 "
"and 3 contains the length of the answer, bytes 4 and 5 are the ID of the "
"first entry bytes 6 and 7 are the length of this entry.\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:128
#, no-wrap
msgid ""
"    In one response more than 1 vcard can be returned in this case, entries "
"are separated by 4 bytes with the following meaning: bytes 1 and 2 ID of the "
"entry, bytes 3 and 4: length of the entry.\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:130
msgid ""
"To get all contacts the request have to be sent several times. The last two "
"bytes must be incremented by every call."
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:132
msgid ""
"The end of the contacts list is reached if the header 0x4C is 0. The header "
"will be 4C 00 05 00 00."
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:136
msgid "Create a contact ++++++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:138 docs/manual/protocol/m-obex.rst:170
msgid ""
"Beware: This is a put operation and is performed in some obex "
"implementations in several packages (for example 0x02, 0x02, 0x82). But I "
"didn't get the mobile to accept this. I had to create/update PIM data in "
"exactly one package."
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:153
#, no-wrap
msgid ""
"Request\n"
"~~~~~~~\n"
"*82* 00 88\n"
"    Obex put\n"
"*CB* 00 00 00 00\n"
"    Session id\n"
"*42* 00 1A 6D 2D 6F 62 65 78 2F 63 6F 6E 74 61 63 74 73 2F 63 72 65 61 74 65 "
"00\n"
"    m-obex/contacts/create\n"
"*4C* 00 04 01\n"
"    ? maybe flag for internal/external memory\n"
"C3 00 00 00 5A\n"
"    Length of the vcard string\n"
"49 00 5D 42 45....\n"
"    Contact as vcard\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:164
#, no-wrap
msgid ""
"Answer\n"
"~~~~~~\n"
"*A0* 00 12\n"
"    Obex ok\n"
"*C3* 00 00 00 02\n"
"    ?\n"
"*4C* 00 05 00 00\n"
"    Error code\n"
"*49* 00 05 00 21\n"
"    last two bytes: the id of the newly created contact\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:168
msgid "Update a contact ++++++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:185
#, no-wrap
msgid ""
"Request\n"
"~~~~~~~\n"
"*82* 00 8D\n"
"    Obex put\n"
"*CB* 00 00 00 00\n"
"    Session id\n"
"*42* 00 19 6D 2D 6F 62 65 78 2F 63 6F 6E 74 61 63 74 73 2F 77 72 69 74 65 "
"00\n"
"    m-obex/contacts/write\n"
"*4C* 00 06 01 00 20\n"
"    Id of the contact which should be updated\n"
"C3 00 00 00 5E\n"
"    Length of the vcard string\n"
"49 00 61 42...\n"
"    Contact as vcard\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:192
#, no-wrap
msgid ""
"Answer\n"
"~~~~~~\n"
"*A0* 00 08\n"
"    Obex ok\n"
"*4C* 00 05 00 00\n"
"    Error code: 0x00 0x00 means successful\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:196
msgid "Read one contact ++++++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:198
msgid "There is also the possibility to read exactly one contact."
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:209
#, no-wrap
msgid ""
"Request\n"
"~~~~~~~\n"
"*83* 00 26\n"
"    Obex get\n"
"*CB* 00 00 00 00\n"
"    Session id\n"
"*42* 00 18 6D 2D 6F 62 65 78 2F 63 6F 6E 74 61 63 74 73 2F 72 65 61 64 00\n"
"    m-obex/contacts/read\n"
"*4C* 00 06 01 00 20\n"
"    First byte:? Last two bytes: Id of contact\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:220
#, no-wrap
msgid ""
"Answer\n"
"~~~~~~\n"
"*A0* 00 C4\n"
"    Obex ok\n"
"*C3* 00 00 00 B4\n"
"    Length of vcard (without headers, just data)\n"
"*4C* 00 05 00 00\n"
"    Error code\n"
"49 00 B7 42 45 47 49 4E ...\n"
"    contact as vcard. TODO: where is id? First two bytes?\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:223
msgid "Delete contact ++++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:225
msgid "To delete a contact you only have to know it's id."
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:236
#, no-wrap
msgid ""
"Request\n"
"~~~~~~~\n"
"*82* 00 28\n"
"    Obex put\n"
"*CB* 00 00 00 00\n"
"    Session id\n"
"*42* 00 1A 6D 2D 6F 62 65 78 2F 63 6F 6E 74 61 63 74 73 2F 64 65 6C 65 74 65 "
"00\n"
"    m-obex/contacts/delete\n"
"*4C* 00 06 01 00 19\n"
"    First byte: ? Last two bytes: Id of contact\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:239
msgid "Answer ~~~~~~"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:244
#, no-wrap
msgid ""
"*A0* 00 08\n"
"    Obex ok\n"
"*4C* 00 05 00 00\n"
"    Error code\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:247
#, no-wrap
msgid ""
"Calendar\n"
"--------\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:251
msgid "Get count +++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:262
#, no-wrap
msgid ""
"Request\n"
"~~~~~~~\n"
"*83* 00 25\n"
"    Obex get\n"
"*CB* 00 00 00 00\n"
"    Session id\n"
"*42* 00 19 6D 2D 6F 62 65 78 2F 63 61 6C 65 6E 64 61 72 2F 63 6F 75 6E 74 "
"00\n"
"    m-obex/calendar/count\n"
"*4C* 00 04 FF\n"
"    ?\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:273
#, no-wrap
msgid ""
"Answer\n"
"~~~~~~\n"
"A0 00 1C\n"
"    Obex ok\n"
"*C3* 00 00 00 0C\n"
"    length of data\n"
"*4C* 00 05 00 00\n"
"    Error code\n"
"*49* 00 0F 01 2C 00 06 00 64 00 00 00 64 00 00\n"
"    ?TODO?\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:285
#, no-wrap
msgid ""
"Request\n"
"~~~~~~~\n"
"*83* 00 20\n"
"    Obex get\n"
"*CB* 00 00 00 00\n"
"    Session id\n"
"*42* 00 18 6D 2D 6F 62 65 78 2F 63 61 6C 65 6E 64 61 72 2F 69 6E 66 6F 00\n"
"    m-obex/calendar/load\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:297
#, no-wrap
msgid ""
"Answer\n"
"~~~~~~\n"
"*A0* 00 C0\n"
"    Obex ok\n"
"*C3* 00 00 00 B0\n"
"    Session\n"
"*4C* 00 05 00 00\n"
"    Error code\n"
"*49* 00 B3 01 07 08 00 00 00 00 00 00 00 00 ...\n"
"    Calendar items in vcalendar format. TODO: where are the ids?\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:300
msgid "Create ++++++"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:315
#, no-wrap
msgid ""
"Request\n"
"~~~~~~~\n"
"*82* 00 CC\n"
"    Obex put\n"
"*CB* 00 00 00 00\n"
"    Session\n"
"*42* 00 1A 6D 2D 6F 62 65 78 2F 63 61 6C 65 6E 64 61 72 2F 63 72 65 61 74 65 "
"00\n"
"    m-obex/calendar/create\n"
"4C 00 04 01\n"
"    ?\n"
"*C3* 00 00 00 9E\n"
"    Length of vcalendar\n"
"*49* 00 A1 42 45 47 49 4E 3A 56 43 41 4C 45 ...\n"
"    vcalendar\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:326
#, no-wrap
msgid ""
"Answer\n"
"~~~~~~\n"
"*A0* 00 12\n"
"    Obex ok\n"
"*C3* 00 00 00 02\n"
"    Length\n"
"*4C* 00 05 00 00\n"
"    Error code\n"
"*49* 00 05 00 06\n"
"    Id of the created item\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:329
msgid "Update ++++++"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:344
#, no-wrap
msgid ""
"Request\n"
"~~~~~~~\n"
"*82* 00 F7\n"
"    Obex put\n"
"*CB* 00 00 00 00\n"
"    Session\n"
"*42* 00 19 6D 2D 6F 62 65 78 2F 63 61 6C 65 6E 64 61 72 2F 77 72 69 74 65 "
"00\n"
"    m-obex/calendar/write\n"
"*4C* 00 06 01 00 05\n"
"    First byte: ? Second and third byte: Id of the item\n"
"*C3* 00 00 00 C8\n"
"    Length of vcalendar\n"
"*49* 00 CB 42 45 47 49 4E 3A 56\n"
"    vcalendar item\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:351
#, no-wrap
msgid ""
"Answer\n"
"~~~~~~\n"
"*A0* 00 08\n"
"    Obex ok\n"
"*4C* 00 05 00 00\n"
"    Error code\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:355
msgid "Read ++++"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:366
#, no-wrap
msgid ""
"Request\n"
"~~~~~~~\n"
"*83* 00 26\n"
"    Obex get\n"
"*CB* 00 00 00 00\n"
"    Session\n"
"*42* 00 18 6D 2D 6F 62 65 78 2F 63 61 6C 65 6E 64 61 72 2F 72 65 61 64 00\n"
"    m-obex/calendar/read\n"
"4C 00 06 01 00 06\n"
"    Id of calendar item\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:377
#, no-wrap
msgid ""
"Answer\n"
"~~~~~~\n"
"*A0* 00 C0\n"
"    Obex ok\n"
"*C3* 00 00 00 B0\n"
"    Length\n"
"*4C* 00 05 00 00\n"
"    Error code\n"
"*49* 00 B3 42 45 47 49 4E 3A 56 43 41 4C 45 4E 44 41 52 0D 0A 56 45 52 53 49 "
"4F 4E 3A 31 2E 3....\n"
"    vcalendar item. TODO: Where is the id?\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:380
msgid "Delete ++++++"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:391
#, no-wrap
msgid ""
"Request\n"
"~~~~~~~\n"
"*82* 00 28\n"
"    Obex put\n"
"*CB* 00 00 00 00\n"
"    Session\n"
"*42* 00 1A 6D 2D 6F 62 65 78 2F 63 61 6C 65 6E 64 61 72 2F 64 65 6C 65 74 65 "
"00\n"
"    m-obex/calendar/delete\n"
"*4C* 00 06 01 00 06\n"
"    id of calendar item\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:394
#, no-wrap
msgid ""
"Notes\n"
"-----\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:398
#, no-wrap
msgid ""
"Tasks\n"
"-----\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:402
#, no-wrap
msgid ""
"Files\n"
"-----\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:405
msgid ""
"To get the file structure on the mobile, there are two commands. One that "
"lists all subdirectories and one that lists all files."
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:408
msgid "List directories ++++++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:411
msgid "List files ++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:414
msgid "Get file ++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:417
msgid "Create file +++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:420
msgid "Delete file +++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:423
#, no-wrap
msgid ""
"SMS\n"
"---\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:427
msgid "0x01: Inbox 0x08: Outbox"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:430
msgid "Get sms count +++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:433
msgid "List all sms ++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:436
msgid "Send sms ++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:439
msgid "Create sms ++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/m-obex.rst:440
msgid ""
"I don't think this is possible. At least I didn't find the function in New "
"PC Studio. So sadly there will be no backup of sms messages."
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:2
#, no-wrap
msgid ""
"Nokia 6210/6310, CARC91, PC Experiment\n"
"======================================\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:6
#, no-wrap
msgid ""
"Author:\n"
"    Jens Bennfors\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:9
#, no-wrap
msgid ""
"Company\n"
"    AB Indevia\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:12
#, no-wrap
msgid ""
"Date:\n"
"    2002-04-09\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:14
#, no-wrap
msgid ""
"Introduction\n"
"-------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:17
msgid ""
"The purpose of this experiment is to gain understanding about how Nokias "
"commands for handsfree works in a way that can be of use in the construction "
"of Com.n.sense. The means available is a Nokia 6210, a Nokia 6310, a HFU-2 "
"CARC91 and a PC with a LabVIEW program installed."
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:19
#, no-wrap
msgid ""
"Setup\n"
"-----\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:22
msgid ""
"I have connected the phone to a Nokia original handsfree (CARC91). I then "
"use the PC for listening to the data communication between the phone and "
"CARC91. I also send the frames directly from the PC to the phone."
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:24
#, no-wrap
msgid ""
"Nokia 6210\n"
"----------\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:28 docs/manual/protocol/carkit.rst:320
msgid "Phone connected to PC +++++++++++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:63
#, no-wrap
msgid ""
"Initiation\n"
"~~~~~~~~~~\n"
"1F0004 D0 0001 04 00CE\n"
"    Power up from PC\n"
"1F0004 D0 0001 04 01CF\n"
"    Power up from PC\n"
"1F0400 D0 0001 05 10DF\n"
"    Power up from phone\n"
"1F0004 79 0005 0201 0164 00 0203 \n"
"    Enable carkit mode from PC\n"
"1F0004 79 0005 0201 0164 00 0302\n"
"    Enable carkit mode from PC\n"
"1F0400 7F 0367\n"
"    Ack from phone\n"
"1F0004 79 0012 0201 0206 0056 2030 372E 3030 0A48 4655 3200 044F\n"
"      HFU-2 Version\n"
"1F0400 7F 0460\n"
"    Ack from phone\n"
"1F0400 78 0004 0102 0801 117C\n"
"    Status 0x08, 0x01 from phone\n"
"1F0400 DA 0002 0002 12D3\n"
"    Type => 0xDA, data => 0x00, 0x02\n"
"1F0004 79 0005 0201 0164 00 0504 \n"
"    Enable carkit mode from PC\n"
"1F0004 79 0005 0201 0164 00 0607\n"
"    Enable carkit mode from PC\n"
"1F0400 7F 0662\n"
"    Ack from phone\n"
"1F0004 78 0003 0201 0307 67 \n"
"    Status confirm from PC\n"
"1F0004 78 0003 0201 0308 68\n"
"    Status confirm from PC\n"
"1F0400 7F 086C\n"
"    Ack from phone\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:65
msgid ""
"The phone enters the profile ”handsfree” when the frame carkit enable is "
"sent. It sends out an unknown status frame 0x08, 0x01."
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:68 docs/manual/protocol/carkit.rst:182 docs/manual/protocol/carkit.rst:355 docs/manual/protocol/carkit.rst:512
msgid "Incoming call ~~~~~~~~~~~~~"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:73
#, no-wrap
msgid ""
"1F0400 78 0004 0102 0701 197B\n"
"    Status 0x07, 0x01 from phone\n"
"1F0400 78 0004 0102 0E03 1A73\n"
"    Status 0x0E, 0x03 from phone\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:75
msgid ""
"Status type 0x07 with status 0x01 means mute external audio "
"equipment. Status type 0x0E with status 0x03 means audio amplifier on."
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:78 docs/manual/protocol/carkit.rst:198 docs/manual/protocol/carkit.rst:369 docs/manual/protocol/carkit.rst:542
msgid "Connected ~~~~~~~~~"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:80 docs/manual/protocol/carkit.rst:200
msgid "The phone doesn’t send out anything when a call has been set up."
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:83 docs/manual/protocol/carkit.rst:203 docs/manual/protocol/carkit.rst:374 docs/manual/protocol/carkit.rst:576
msgid "Initiation with connected phone ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:114
#, no-wrap
msgid ""
"1F0004 D0 0001 04 00CE\n"
"    Power up from PC\n"
"1F0400 D0 0001 05 1BD4\n"
"    Power up from phone\n"
"1F0004 79 0005 0201 0164 0001 00\n"
"    Enable carkit mode from PC\n"
"1F0400 7F 0165\n"
"    Ack from phone\n"
"1F0400 78 0004 0102 0E03 1C75\n"
"    Status 0x0E, 0x03 from phone\n"
"1F0400 78 0004 0102 0701 1D7F\n"
"    Status 0x07, 0x01 from phone\n"
"1F0004 79 0012 0201 0206 00 5620 3037 2E30 300A 4846 5532 00 0249\n"
"    HFU-2 Version from PC\n"
"1F0400 7F 0266\n"
"    Ack from phone\n"
"1F0400 78 0004 0102 0801 1E73\n"
"    Status 0x08, 0x01 from phone\n"
"1F0004 79 0005 0201 0164 0003 02\n"
"    Enable carkit mode from PC\n"
"1F0400 7F 0367\n"
"    Ack from phone\n"
"1F0400 78 0004 0102 0E03 1F76\n"
"    Status 0x0E, 0x03 from phone\n"
"1F0400 78 0004 0102 0701 2042\n"
"    Status 0x07, 0x01 from phone\n"
"1F0004 78 0003 0201 03 0464\n"
"    Status confirm from PC\n"
"1F0400 7F 0460\n"
"    Ack from phone\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:117 docs/manual/protocol/carkit.rst:261 docs/manual/protocol/carkit.rst:462 docs/manual/protocol/carkit.rst:622
msgid "Disconnected ~~~~~~~~~~~~"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:120
#, no-wrap
msgid ""
"1F04 0078 0004 0102 0700 2142\n"
"    Status 0x07, 0x00\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:123 docs/manual/protocol/carkit.rst:277 docs/manual/protocol/carkit.rst:467 docs/manual/protocol/carkit.rst:652
msgid "Incoming SMS ~~~~~~~~~~~~"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:130
#, no-wrap
msgid ""
"FCF0 F0F0 F0F0 F0F0 F0F0 F0F0 F0F0 F0F0 F0F0 F0F0 F0F0 F0F0 F0F0 F0F0 F0F0 "
"F0F0 F0F0 F0F0 F0F0 F0F0 F0F0 F0F0 F0F0 F0F0 F0F0 F0F0 F0F0 F0F0 F0F0 F0F0 "
"F0F0 F0F0 F0F0 F0F0 F0F0 F0F0 F0\n"
"    Initiation of bit length from phone\n"
"1F0400 78 0004 0102 0E03 254C\n"
"    Status 0x0E, 0x03 from phone\n"
"F0F0F0F0\n"
"    Initiation of bit length from phone\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:133 docs/manual/protocol/carkit.rst:477
msgid "Phone connected to CARC91 +++++++++++++++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:136 docs/manual/protocol/carkit.rst:323 docs/manual/protocol/carkit.rst:480
msgid "Initiation ~~~~~~~~~~"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:179
#, no-wrap
msgid ""
"1F0004 D0 0001 04 00CE\n"
"    Power up from HFU-2\n"
"1F0400 D0 0001 05 02CD\n"
"    Power up from phone\n"
"1F0004 79 0005 0201 0164 00 0100\n"
"    Enable carkit mode from HFU-2\n"
"1F0400 7F 0165\n"
"    Ack from phone\n"
"1F0004 79 0012 0201 0206 0056 2030 372E 3030 0A48 4655 3200 0249\n"
"    HFU-2 Version\n"
"1F0400 7F 0266\n"
"    Ack from phone\n"
"1F0400 78 0004 0102 0801 036E\n"
"    Status 0x08, 0x01\n"
"1F0004 79 0005 0201 0164 00 0302\n"
"    Enable carkit mode from HFU-2\n"
"1F0400 7F 0367\n"
"    Ack from phone\n"
"1F0400 78 0004 0102 0801 036E\n"
"    Status 0x08, 0x01\n"
"1F0004 7F 0367\n"
"    Ack from HFU-2\n"
"1F0400 DA 0002 0002 04C5\n"
"    Status type => 0xDA, data => 0x00, 0x02\n"
"1F0004 7F 0460\n"
"    Ack from HFU-2\n"
"1F0400 78 0004 0102 0E03 056C\n"
"    Status 0x0E, 0x03\n"
"1F0004 7F 0561\n"
"    Ack from HFU-2\n"
"1F0004 78 0003 0201 03 0464\n"
"    Status confirm from HFU-2\n"
"1F0400 7F 0460\n"
"    Ack from phone\n"
"1F0400 78 0004 0102 0E00 066C\n"
"    Status 0x0E, 0x00\n"
"1F0004 7F 0662\n"
"    Ack from HFU-2\n"
"1F0004 78 0003 0201 03 0565\n"
"    Status confirm from HFU-2\n"
"1F0400 7F 0561\n"
"    Ack from phone\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:195
#, no-wrap
msgid ""
"1F0400 78 0004 0102 0701 1173\n"
"    Status 0x07, 0x01\n"
"1F0004 7F 1175\n"
"    Ack from HFU-2\n"
"1F0400 78 0004 0102 0E03 127B\n"
"    Status 0x0E, 0x03\n"
"1F0004 7F 1276\n"
"    Ack from HFU-2\n"
"1F0004 78 0003 0201 03 0868\n"
"    Status confirm from HFU-2\n"
"1F0400 7F 086C\n"
"    Ack from phone\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:258
#, no-wrap
msgid ""
"1F0004 D0 0001 04 00CE\n"
"    Power up from HFU-2\n"
"1F0400 D0 0001 05 1AD5\n"
"    Power up from phone\n"
"1F0004 79 0005 0201 0164 00 0100\n"
"    Enable carkit mode from HFU-2\n"
"1F0400 7F 0165\n"
"    Ack from phone\n"
"1F0400 78 0004 0102 0E03 1B72\n"
"    Status 0x0E, 0x03\n"
"1F0004 79 0012 0201 0206 0056 2030 372E 3030 0A48 4655 3200 0249\n"
"    HFU-2 Version\n"
"1F0400 7F 0266\n"
"    Ack from phone\n"
"1F0004 79 0005 0201 0164 00 0302\n"
"    Enable carkit mode from HFU-2\n"
"1F0400 7F 0367\n"
"    Ack from phone\n"
"1F0400 78 0004 0102 0E03 1B72\n"
"    Status 0x0E, 0x03\n"
"1F0004 7F 1B7F\n"
"    Ack from HFU-2\n"
"1F0400 78 0004 0102 0801 1C71\n"
"    Status 0x08, 0x01\n"
"1F0004 78 0003 0201 03 0464\n"
"    Status confirm from HFU-2\n"
"1F0400 7F 0460\n"
"    Ack from phone\n"
"1F0400 78 0004 0102 0801 1C71\n"
"    Status 0x08, 0x01\n"
"1F0004 7F 1C78\n"
"    Ack from HFU-2\n"
"1F0400 78 0004 0102 0E03 1D74\n"
"    Status 0x0E, 0x03\n"
"1F0004 7F 1D79\n"
"    Ack from HFU-2\n"
"1F0400 78 0004 0102 0701 1E7C\n"
"    Status 0x07, 0x01\n"
"1F0004 78 0003 0201 03 0565\n"
"    Status confirm from HFU-2\n"
"1F0400 7F 0561\n"
"    Ack from phone\n"
"1F0400 78 0004 0102 0701 1E7C\n"
"    Status 0x07, 0x01\n"
"1F0004 7F 1E7A\n"
"    Ack from HFU-2\n"
"1F0400 78 0004 0102 0701 1F7D\n"
"    Status 0x07, 0x01\n"
"1F0004 7F 1F7B\n"
"    Ack from phone\n"
"1F0400 DA 0002 0002 20E1\n"
"    Typ => 0xDA, data => 0x00. 0x02\n"
"1F0004 7F 2044\n"
"    Ack from HFU-2\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:274
#, no-wrap
msgid ""
"1F0400 78 0004 0102 0700 1774\n"
"    Status 0x07, 0x00\n"
"1F0004 7F 1773\n"
"    Ack from HFU-2\n"
"1F0400 78 0004 0102 0E00 1872\n"
"    Status 0x0E, 0x00\n"
"1F0004 7F 187C\n"
"    Ack from HFU-2\n"
"1F0004 78 0003 0201 03 0B6B\n"
"    Status confirm from HFU-2\n"
"1F0400 7F 0B6F\n"
"    Ack from phone\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:294
#, no-wrap
msgid ""
"1F0400 78 0004 0102 0E03 076E\n"
"    Status 0x0E, 0x03\n"
"1F0004 7F 0763\n"
"    Ack from HFU-2\n"
"1F0004 78 0003 0201 03 0666\n"
"    Status confirm from HFU-2\n"
"1F0400 7F 0662\n"
"    Ack from phone\n"
"1F0400 78 0004 0102 0E00 0862\n"
"    Status 0x0E, 0x00\n"
"1F0004 7F 086C\n"
"    Ack from HFU-2\n"
"1F0004 78 0003 0201 03 0767\n"
"    Status confirm from HFU-2\n"
"1F0400 7F 0763\n"
"    Ack from phone\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:297 docs/manual/protocol/carkit.rst:672
msgid "Button pushed ~~~~~~~~~~~~~"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:314
#, no-wrap
msgid ""
"1F0400 78 0004 0102 0E03 0960\n"
"    Status 0x0E, 0x03\n"
"1F0004 7F 096D\n"
"    Ack from HFU-2\n"
"1F0004 78 0003 0201 03 0868\n"
"    Status confirm from HFU-2\n"
"1F0400 7F 086C\n"
"    Ack from phone\n"
"1F0400 78 0004 0102 0E00 0A60\n"
"    Status 0x0E, 0x00\n"
"1F0004 7F 0A6E\n"
"    Ack from HFU-2\n"
"1F0004 78 0003 0201 03 0969\n"
"    Status confirm from HFU-2\n"
"1F0400 7F 096D\n"
"    Ack from phone\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:316
#, no-wrap
msgid ""
"Nokia 6310\n"
"----------\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:350
#, no-wrap
msgid ""
"1F0004 D0 0001 04 02CC\n"
"    Power up from PC\n"
"1F0400 D0 0001 05 0DC2 \n"
"    Power up from phone\n"
"1F0004 79 0005 0201 0164 00 0C0D \n"
"    Enable carkit mode from PC\n"
"1F0400 7F 0C68 \n"
"    Ack from phone\n"
"1F0400 78 0004 0128 0B00 0E4B \n"
"    Status 0x0B, 0x00 from phone\n"
"1F0004 79 0012 0201 0206 0056 2030 372E 3030 0A48 4655 3200 0D46  \n"
"    HFU-2 version from PC\n"
"1F0400 7F 0E6A \n"
"    Ack from phone\n"
"1F0400 DA 0004 0028 0000 0FE2\n"
"    ?\n"
"1F0004 79 0005 0201 0164 00 1716\n"
"    Enable carkit mode from PC\n"
"1F0400 7F 1773\n"
"    Ack from phone\n"
"1F0400 78 0004 0128 0B00 1055\n"
"    Status 0x0B, 0x00 from phone\n"
"1F0004 78 0003 0201 03 1878\n"
"    Status confirm from PC\n"
"1F0400 7F 1A7E\n"
"    Ack from phone\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:352
msgid "An unknown status frame (0x0B) is sent by the phone."
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:364
#, no-wrap
msgid ""
"1F0400 78 0004 0128 0701 0D45 \n"
"    Status 0x07, 0x01 from phone\n"
"1F0400 78 0004 0128 0E01 0F4E \n"
"    Status 0x0E, 0x01 from phone\n"
"1F0400 78 0004 0128 0A00 1054\n"
"    Status 0x0A, 0x00 from phone\n"
"1F0400 78 0004 0128 0901 1157\n"
"    Status 0x09, 0x01 from phone\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:366
msgid ""
"Byte 8 in the status frames is some kind of ID number. 0x28 is the ID for "
"6310. Status 0x0A, 0x09 is unknown."
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:371
msgid ""
"The phone doesn’t send out anything when a call has been set up. This "
"might be because the profile “handsfree” is lost when ack isn’t sent."
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:459
#, no-wrap
msgid ""
"1F0004 79 0012 0201 0206 0056 2030 372E 3030 0A48 4655 3200 1C57\n"
"    HFU-2 version from PC\n"
"1F0400 7F 1C78\n"
"    Ack from phone\n"
"1F0400 78 0004 0128 0E02 1A58\n"
"    Status 0x0E, 0x02\n"
"1F0400 78 0004 0128 0A00 1B5F\n"
"    Status 0x0A, 0x00\n"
"1F0400 78 0004 0128 0900 1C5B\n"
"    Status 0x09, 0x00\n"
"1F0400 78 0004 0128 0701 1D55\n"
"    Status 0x07, 0x01\n"
"1F0004 D0 0001 04 00CE\n"
"    Power up from HFU-2\n"
"1F0400 D0 0001 05 74BB\n"
"    Power up from phone\n"
"1F0004 79 0005 0201 0164 00 0100\n"
"    Enable carkit mode from HFU-2\n"
"1F0400 7F 0165\n"
"    Ack from phone\n"
"1F0004 79 0012 0201 0206 0056 2030 372E 3030 0A48 4655 3200 0249\n"
"    HFU-2 Version\n"
"1F0400 7F 0266\n"
"    Ack from phone\n"
"1F0400 78 0004 0128 0E01 7534\n"
"    Status 0x0E, 0x01\n"
"1F0004 79 0005 0201 0164 00 0302\n"
"    Enable carkit mode from HFU-2\n"
"1F0400 7F 0367\n"
"    Ack from phone\n"
"1F0400 78 0004 0128 0E01 7534\n"
"    Status 0x0E, 0x01\n"
"1F0004 7F 7511\n"
"    Ack from HFU-2\n"
"1F0400 78 0004 0128 0A01 7633\n"
"    Status 0x0A, 0x01\n"
"1F0004 7F 7612\n"
"    Ack from HFU-2\n"
"1F0400 78 0004 0128 0901 7731\n"
"    Status 0x09, 0x01\n"
"1F0004 7F 7713\n"
"    Ack from HFU-2\n"
"1F0400 78 0004 0128 0701 7830\n"
"    Status 0x07, 0x01\n"
"1F0004 7F 781C\n"
"    Ack from HFU-2\n"
"1F0400 78 0004 0128 0E01 7938\n"
"    Status 0x0E, 0x01\n"
"1F0004 7F 791D\n"
"    Ack from HFU-2\n"
"1F0004 78 0003 2801 03 044E\n"
"    Status confirm from HFU-2\n"
"1F0400 7F 0460\n"
"    Ack from phone\n"
"1F0400 DA 0004 0028 0000 7A97\n"
"    Type => 0xDA, data => 0x0028, 0x0000\n"
"1F0004 7F 7A1E\n"
"    Ack from HFU-2\n"
"1F0400 78 0004 0128 0E01 7B3A\n"
"    Status 0x0E, 0x01\n"
"1F0004 7F 7B1F\n"
"    Ack from HFU-2\n"
"1F0400 78 0004 0128 0A00 7C38\n"
"    Status 0x0A, 0x00\n"
"1F0004 78 0003 2801 03 054F\n"
"    Status confirm from HFU-2\n"
"1F0400 7F 0561\n"
"    Ack from phone\n"
"1F0400 78 0004 0128 0A00 7C38\n"
"    Status 0x0A, 0x00\n"
"1F0004 7F 7C18\n"
"    Ack from HFU-2\n"
"1F0400 78 0004 0128 0700 7D34\n"
"    Status 0x07, 0x00\n"
"1F0004 7F 7D19\n"
"    Ack from HFU-2\n"
"1F0400 78 0004 0128 0E00 7E3E\n"
"    Status 0x0E, 0x00\n"
"1F0004 7F 7E1A\n"
"    Ack from HFU-2\n"
"1F0004 78 0003 2801 03 064C\n"
"    Status confirm from HFU-2\n"
"1F0400 7F 0662\n"
"    Ack from phone\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:464
msgid "No response. Probably because phone has lost the profile “handsfree”."
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:474
#, no-wrap
msgid ""
"1F0400 78 0004 0128 0E01 0849\n"
"    Status 0x0E, 0x01\n"
"1F0400 78 0004 0128 0A00 094D\n"
"    Status 0x0A, 0x00\n"
"1F0400 78 0004 0128 0901 0A4C\n"
"    Status 0x09, 0x01\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:509
#, no-wrap
msgid ""
"1F0004 D0 0001 04 00CE\n"
"    Power up from HFU-2\n"
"1F0400 D0 0001 05 2DE2 \n"
"    Power up from phone\n"
"1F0004 79 0005 0201 0164 00 0100\n"
"    Enable carkit mode from HFU-2\n"
"1F0400 7F 0165\n"
"    Ack from phone\n"
"1F0004 79 0012 0201 0206 0056 2030 372E 3030 0A48 4655 3200 0249\n"
"    HFU version from HFU-2\n"
"1F0400 7F 0266\n"
"    Ack from phone\n"
"1F0004 79 0005 0201 0164 00 0302 \n"
"    Enable carkit mode from HFU-2\n"
"1F0400 7F 0367 \n"
"    Ack from phone\n"
"1F0400 78 0004 0128 0E00 2E6E \n"
"    Status 0x0E, 0x00\n"
"1F0004 7F 2E4A \n"
"    Ack from HFU-2\n"
"1F0004 78 0003 2801 03 044E\n"
"    Status confirm from HFU-2\n"
"1F0400 7F 0460\n"
"    Ack from phone\n"
"1F0400 DA 0004 0028 0000 2FC2\n"
"    ?\n"
"1F0004 7F 2F4B\n"
"    Ack from HFU-2\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:539
#, no-wrap
msgid ""
"1F0400 78 0004 0128 0701 3078\n"
"    Status 0x07, 0x01\n"
"1F0004 7F 3054\n"
"    Ack from HFU-2\n"
"1F0400 78 0004 0128 0701 3179\n"
"    Status 0x07, 0x01\n"
"1F0004 7F 3155\n"
"    Ack from HFU-2\n"
"1F0400 78 0004 0128 0E01 3273\n"
"    Status 0x0E, 0x01\n"
"1F0004 7F 3256\n"
"    Ack from HFU-2\n"
"1F0400 78 0004 0128 0A00 3377\n"
"    Status 0x0A, 0x00\n"
"1F0004 78 0003 2801 03 054F\n"
"    Status confirm from HFU-2\n"
"1F0400 7F 0561\n"
"    Ack from phone\n"
"1F0400 78 0004 0128 0A00 3377\n"
"    Status 0x0A, 0x00\n"
"1F0004 7F 33 57\n"
"    Ack from HFU-2\n"
"1F0400 78 0004 0128 0901 3472\n"
"    Status 0x09, 0x01\n"
"1F0004 7F 3450\n"
"    Ack from HFU-2\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:573
#, no-wrap
msgid ""
"1F0400 78 0004 0128 0E01 3574\n"
"    Status 0x0E, 0x01\n"
"1F0004 7F 3551\n"
"    Ack from HFU-2\n"
"1F0400 78 0004 0128 0A01 3673\n"
"    Status 0x0A, 0x01\n"
"1F0004 78 0003 2801 03 064C \n"
"    Status confirm from HFU-2\n"
"1F0400 7F 0662\n"
"    Ack from phone\n"
"1F0400 78 0004 0128 0A01 3673\n"
"    Status 0x0A, 0x01\n"
"1F0004 7F 3652\n"
"    Ack from HFU-2\n"
"1F0400 78 0004 0128 0A00 3773\n"
"    Status 0x0A, 0x00\n"
"1F0004 7F 3753\n"
"    Ack from HFU-2\n"
"1F0400 78 0004 0128 0900 387F\n"
"    Status 0x09, 0x00\n"
"1F0004 7F 385C\n"
"    Ack from HFU-2\n"
"1F0400 78 0004 0128 0A01 397C\n"
"    Status 0x0A, 0x01\n"
"1F0004 7F 395D\n"
"    Ack from HFU-2\n"
"1F0400 78 0004 0128 0901 3A7C\n"
"    Status 0x09, 0x01\n"
"1F0004 7F 3A5E \n"
"    Ack from HFU-2\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:619
#, no-wrap
msgid ""
"1F0004 D0 0001 04 00CE\n"
"    Power up from HFU-2\n"
"1F0400 D0 0001 05 5996\n"
"    Power up from phone\n"
"1F0004 79 0005 0201 0164 00 0100\n"
"    Enable carkit mode from HFU-2\n"
"1F0400 7F 0165\n"
"    Ack from phone\n"
"1F0004 79 0012 0201 0206 0056 2030 372E 3030 0A48 4655 3200 0249\n"
"    HFU-2 Version\n"
"1F0400 7F 0266\n"
"    Ack from phone\n"
"1F0400 78 0004 0128 0E01 5A1B\n"
"    Status 0x0E, 0x01\n"
"1F0004 79 0005 0201 0164 00 0302\n"
"    Enable carkit mode from HFU-2\n"
"1F0400 7F 0367\n"
"    Ack from phone\n"
"1F0400 78 0004 0128 0E01 5A1B\n"
"    Status 0x0E, 0x01\n"
"1F0004 7F 5A3E\n"
"    Ack from HFU-2\n"
"1F0400 78 0004 0128 0A01 5B1E\n"
"    Status 0x0A, 0x01\n"
"1F0004 7F 5B3F\n"
"    Ack from HFU-2\n"
"1F0400 78 0004 0128 0901 5C1A\n"
"    Status 0x09, 0x01\n"
"1F0004 7F 5C38\n"
"    Ack from HFU-2\n"
"1F0400 78 0004 0128 0701 5D15\n"
"    Status 0x07, 0x01\n"
"1F0004 7F 5D39\n"
"    Ack from HFU-2\n"
"1F0004 78 0003 2801 0305 4F\n"
"    Status confirm from HFU-2\n"
"1F0400 7F 0561\n"
"    Ack from phone\n"
"1F0400 DA 0004 0028 0000 5EB3\n"
"    ?\n"
"1F0004 7F 5E3A\n"
"    Ack from HFU-2\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:649
#, no-wrap
msgid ""
"1F0400 78 0004 0128 0E01 3B7A \n"
"    Status 0x0E, 0x01\n"
"1F0004 7F 3B5F \n"
"    Ack from HFU-2\n"
"1F0400 78 0004 0128 0A00 3C78 \n"
"    Status 0x0A, 0x00\n"
"1F0004 78 0003 2801 03 074D\n"
"    Status confirm from HFU-2\n"
"1F0400 7F 0763\n"
"    Ack from phone\n"
"1F0400 78 0004 0128 0A00 3C78\n"
"    Status 0x0A, 0x00\n"
"1F0004 7F 3C58\n"
"    Ack from HFU-2\n"
"1F0400 78 0004 0128 0700 3D74\n"
"    Status 0x07, 0x00\n"
"1F0004 7F 3D59\n"
"    Ack from HFU-2\n"
"1F0400 78 0004 0128 0E00 3E7E\n"
"    Status 0x0E, 0x00\n"
"1F0004 7F 3E5A\n"
"    Ack from HFU-2\n"
"1F0004 78 0003 2801 0308 42\n"
"    Status confirm from HFU-2\n"
"1F0400 7F 086C\n"
"    Ack from phone\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:669
#, no-wrap
msgid ""
"1F0400 78 0004 0128 0E01 6627\n"
"    Status 0x0E, 0x01\n"
"1F0004 7F 6602\n"
"    Ack from HFU-2\n"
"1F0004 78 0003 2801 03 064C\n"
"    Status confirm from HFU-2\n"
"1F0400 7F 0662\n"
"    Ack from phone\n"
"1F0400 78 0004 0128 0E00 6727\n"
"    Status 0x0E, 0x00\n"
"1F0004 7F 6703\n"
"    Ack from HFU-2\n"
"1F0004 78 0003 2801 03 074D\n"
"    Status confirm from HFU-2\n"
"1F0400 7F 0763\n"
"    Ack from phone\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:689
#, no-wrap
msgid ""
"1F0400 78 0004 0128 0E01 0948\n"
"    Status 0x0E, 0x01\n"
"1F0004 7F 096D\n"
"    Ack from HFU-2\n"
"1F0004 78 0003 2801 03 064C\n"
"    Status confirm from HFU-2\n"
"1F0400 7F 0662\n"
"    Ack from phone\n"
"1F0400 78 0004 0128 0E00 0A4A\n"
"    Status 0x0E, 0x00\n"
"1F0004 7F 0A6E\n"
"    Ack from HFU-2\n"
"1F0004 78 0003 2801 03 074D\n"
"    Status confirm from HFU-2\n"
"1F0400 7F 0763\n"
"    Ack from phone\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:691
#, no-wrap
msgid ""
"Result\n"
"------\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/carkit.rst:694
msgid ""
"Important things to consider when designing a program for Com.n.sense that "
"is to work with 6310."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/protocol/carkit.rst:698
msgid "6310 sends out status 0x0E, 0x01 when speaker should be enabled"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/protocol/carkit.rst:698
msgid ""
"HFU-2 version has to be sent in order for 6310 to switch to profile "
"”Handsfree”."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/protocol/carkit.rst:698
msgid ""
"Status 0x0A might say weather the phone is ringing or connected. Only 6310 "
"send this status."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/protocol/carkit.rst:698
msgid "Status confirm should be sent when status 0x0E is received."
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n7110.rst:2
#, no-wrap
msgid ""
"Nokia 7110\n"
"==========\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n7110.rst:17
#, no-wrap
msgid ""
"Assembled by\n"
"Balazs Nagy    <js@iksz.hu>\n"
"Marcin Wiacek  <Marcin@MWiacek.com>\n"
"Jens Bennfors  <jens.bennfors@ing.hj.se>\n"
"Michael Hund   <michael@drhund.de>\n"
"Jay Bertrand   <jay.bertrand@libertysurf.fr>\n"
"Gabriele Zappi <gzappi@inwind.it>\n"
"Markus Plail   <plail@web.de>\n"
"Ralf Thelen    <ralf@mythelen.de>\n"
"Walek          <walek@pa98.opole.sdi.tpnet.pl>\n"
"... and other members of gnokii mailing list\n"
"and authors of some WWW pages.\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n7110.rst:30
msgid "Document describing frames used in GSM Nokia 6210 and derivatives (7110)"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n7110.rst:33
msgid ""
"Correct format is FBUS version 2/Infrared/MBUS version 2 (see nokia.txt for "
"protocol details):"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n7110.rst:297
#, no-wrap
msgid ""
"    0x00: Connect to NBS port ?\n"
"        r Set ringtone          {+0x7c,0x01,0x00,0x0d,0x06[6],0x78,ringtone "
"packed according to SM2.0}\n"
"                                Seems not to work in MBUS!\n"
"    0x01: Communication Status\n"
"    ?   r Call msg              { 0x0002 }\n"
"    ?   r Call in progress      { 0x0003, seqnr }\n"
"    ?   r Remote end hang up    { 0x0004, seqnr, ?, error (like in netmon in "
"39) }\n"
"    ?   r incoming call alert   { 0x0005, seqnr, numlen, \"number\", "
"namelen, \"name\" }\n"
"    ?   r answered call         { 0x0007, seqnr }\n"
"    ?   r terminated call       { 0x0009, seqnr }\n"
"    ?   r call msg              { 0x000a, seqnr }\n"
"        Note: in 6210 4.27 all msg from 0x01 seems to be unavailable\n"
"    0x02: SMS handling\n"
"        s Send SMS message      { 0x0001, 0x02, 0x00 (SEND REQUEST), ... }\n"
"        r Message sent          { 0x0002 }\n"
"        r Send failed           { 0x0003, ?, ?, error (like in netmon in "
"65)}\n"
"        s Incoming SMS info on  { 0x000d, 0x00, 0x00, 0x02}\n"
"                                note: no info about Delivery Reports\n"
"        r Incoming SMS info onOK{ 0x000e }\n"
"                                note: no info about Delivery Reports\n"
"        r Incoming SMS infoonerr{ 0x000f, error }\n"
"                                where error: 0x0c - no PIN\n"
"        r SMS message received  { 0x0011, ...... } (whole message)\n"
"        s Set CellBroadcast     { 0x0020, 0x01, 0x01, 0x00, 0x00, 0x01, 0x01 "
"}\n"
"                                          for enable cell broadcast ?\n"
"                                          0x00, 0x00, 0x00, 0x00, 0x00, 0x00 "
"}\n"
"                                          for disable cell broadcast ?\n"
"        r Set CellBroadcast OK  { 0x0021, 0x01 }\n"
"        r Read CellBroadcast    { 0x0023, ?, ?, ?, channel, ?, message... } "
"?\n"
"        s Set SMS center        { 0x0030, 0x64, priority, checksum?, "
"format,\n"
"                                          validity[2], {DefaultRecipient "
"no.}[12],\n"
"                                          {SMScenter no.}[12], {SMSC name}, "
"0x00}\n"
"                                  where tel.no.[12]: {len, type, "
"{number(BCD)}}\n"
"                                        type: 0x81: normal\n"
"                                              0x91: + (international)\n"
"                                              0xd0: alphanumeric\n"
"                                        format: 0x00: text\n"
"                                                0x22: fax\n"
"                                                0x24: voice\n"
"                                                0x25: ERMES\n"
"                                                0x26: paging\n"
"                                                0x31: X.400\n"
"                                                0x32: email\n"
"                                        validity: 0x000b:  1 hour\n"
"                                                  0x0047:  6 hours\n"
"                                                  0x00a7: 24 hours\n"
"                                                  0x00a9: 72 hours\n"
"                                                  0x00ad:  1 week\n"
"                                                  0x00ff: max.time\n"
"        r Set SMS center OK     { 0x0031 }\n"
"        r Set SMS center error  { 0x0032, reason }\n"
"        s Get SMS center        { 0x0033, 0x64, priority }\n"
"        r SMS center received   { 0x0034, priority, checksum?, type,\n"
"                                          validity[2], {DefaultRecipient "
"no.}[12],\n"
"                                          {SMScenter no.}[12], {SMSC name}, "
"0x00 }\n"
"                                  where priority, checksum, type, "
"validity,\n"
"                                        tel.no.[12]: see 0x02/0x0030\n"
"        r SMS center error recv { 0x0035, reason }\n"
"        s??                     { 0x0074}\n"
"        r??                     { 0x0075, 0xFF, 0x11, 0x98}\n"
"        s??                     { 0x008C}\n"
"        r??                     { 0x008D, 0x00}\n"
"    0x03: Phonebook functions\n"
"        s Get memory status     { 0x0103, 0x02, memory type }\n"
"                                where: memory type - see 0x03/0x0107\n"
"        r Get memory status     { 0x0104, 0x00, xL, 0x00[2], y1H, y1L, "
"0x10,\n"
"                                          0x00[2], z?, ymaxH, ymaxL, y2H, "
"y2L,\n"
"                                          0x0d?, xH?, 0x00[2]? }\n"
"                                  where y1: location (lowermost)\n"
"                                        y2: no. of locations\n"
"                                        ymax: maximum location no.\n"
"        s Read memory           { 0x0107, 0x01, 0x01, 0x00, 0x01, xH, xL,\n"
"                                         yH, yL, 0x00, 0x00}\n"
"                                where x: memory type\n"
"                                         0x01: (256) Dialled numbers\n"
"                                         0x02: (512) Missed calls\n"
"                                         0x03: (768) Received calls\n"
"                                         0x05: (500) telephone phonebook\n"
"                                         0x06: (160) SIM phonebook\n"
"                                         0x07: (10/0)\n"
"                                         0x08: (1/0)\n"
"                                         0x09: (4) voice mailbox\n"
"                                         0x0e: (10) speed dials\n"
"                                         0x10: (5) caller groups\n"
"                                      y: location\n"
"        r Read memory error     { 0x0108, 0x00, 0x01,\n"
"                                 code,0x00, 0x00, z, error}\n"
"                                where code==0x0f\n"
"                                      error: 0x34 - phonebook location not "
"found\n"
"                                             0x3b - speed dial not "
"assigned\n"
"        r Read memory OK        { 0x0108, 0x00, 0x01,\n"
"                                 code,0x00, 0x00, z, xH, xL, yH, yL, 0x00, "
"0x00, 0x00, no.of blocks, { block } * }\n"
"                                where code: != 0x0f\n"
"                                  y: location\n"
"                                  z: generic block size\n"
"                                  block: {id, 0, 0, blocksize, block no.,\n"
"                                          {contents}, 0x00}\n"
"                                    id: 0x04 pointer to another memory "
"location { 0xff?, yH, yL, xL,0x00[3] }\n"
"                                        0x07 name {len, (unicode)},\n"
"                                        0x08 email\n"
"                                        0x09 postal\n"
"                                        0x0a note {len, (unicode)}\n"
"                                        0x0b number {type, 0x00[3], len, "
"(unicode)}\n"
"                                        0x0c ringtone {ringtone no., 0, 0}\n"
"                        0x13 date for a called list (DC, RC, etc.)\n"
"                                        0x1b caller group graphic {width, "
"height, 0, 0 {bitmap}}\n"
"                                        0x1c caller group graphic on? {(1: "
"yes, 0: no), 0, 0}\n"
"                                        0x1e caller group number {number, 0, "
"0}\n"
"                                       type: 0x0a: General,\n"
"                                             0x03: Mobile (office ?),\n"
"                                             0x06: Work,\n"
"                                             0x04: Fax,\n"
"                                             0x02: Home (mobile ?)\n"
"        s Set mem location      { 0x010b, 0x00, 0x01, 0x01, 0x00, 0x00, z,\n"
"                                          xH, xL, yH, yL, 0x00, 0x00, "
"0x00,\n"
"                                          no.of blocks, { block }[no.of "
"blocks] }\n"
"        r Set mem location      { 0x010c, 0?, 1?, code, 0?, 0?, z?, 0?, "
"0?,\n"
"                                          yH, yL, xL }\n"
"                                where code:\n"
"                                        0x3d - wrong entry type\n"
"                                        0x3e - too much entries\n"
"        s Delete mem location   { 0x010f, 0x00, 0x01, 0x04, 0x00, 0x00, "
"0x0c, 0x01, 0xff, xH, xL,\n"
"                                          yH, yL, 0x00, 0x00}\n"
"                                          where   x: location\n"
"                                          y: memory type\n"
"        r Delete mem location   { 0x0110, 0x00, 0x00 }\n"
"    0x06: Calling line restriction/Call forwarding etc\n"
"        r Get call divert       { 0x0001, 0x02, x, 0x00, divtype, 0x02, "
"calltype, y, z, 0x0b, number, 0x00...0x00, timeout (byte 45) }\n"
"        s Set call divert       { 0x0001, 0x03, 0x00, divtype, calltype, "
"0x01, number(packed like in SMS), 0x00 ... 0x00,\n"
"                                          length of number (byte 29), 0x00 "
"... 0x00, timeout (byte 52), 0x00, 0x00, 0x00}\n"
"                                NOTE: msglen=0x37\n"
"                                where timeout:\n"
"                                  0x00: not set ?\n"
"                                  0x05: 5 second\n"
"                                  0x0a: 10 second\n"
"                                  0x0f: 15 second\n"
"                                  0x14: 20 second\n"
"                                  0x19: 25 second\n"
"                                  0x1e: 30 second\n"
"                                where divtype:\n"
"                                  0x02: all diverts for all call types ?\n"
"                                        Found only, when deactivate all "
"diverts for all call types (with call type 0x00)\n"
"                                  0x15: all calls\n"
"                                  0x43: when busy\n"
"                                  0x3d: when not answered\n"
"                                  0x3e: if not reached\n"
"                                calltype:\n"
"                                  0x00: all calls (data, voice, fax)\n"
"                                  0x0b: voice calls\n"
"                                  0x0d: fax calla\n"
"                                  0x19: data calls\n"
"        s Deactivate calldiverts{ 0x0001, 0x04, 0x00, divtype, calltype, "
"0x00 }\n"
"                                where divtype, calltype: see above\n"
"        r Deactivate calldiverts{ 0x0002, 0x04, 0x00, divtype, 0x02, "
"calltype, data }\n"
"        s Get call diverts      { 0x0001, 0x05, 0x00, divtype, calltype, "
"0x00 }\n"
"                                where divtype, calltype: see above\n"
"        r Get call diverts ok   { 0x0002, 0x05, 0x00, divtype, 0x02, "
"calltype, data }\n"
"                                where divtype, calltype: see above\n"
"                          data: { 0x01, 0x00 } - isn't active\n"
"                            { 0x02, 0x01, number(packed like in SMS), 0x00, "
"0x00..., timeout }\n"
"        r Get prepaid(?) info   { 0x0005, ?,?,?,length,message(packed like "
"in 7bit SMS)}\n"
"        r Call diverts active   { 0x0006, ??? }\n"
"    0x0a: Network status\n"
"        s get used network      { 0x0070 }\n"
"        r get used network      { 0x0071, "
"available,?,?,length,netstatus,netsel,cellIDH,\n"
"                                          "
"cellIDL,lacH,lacL,MCC+MNC[3],{Opstr}, 4?,\n"
"                                          len, xlen(78), ylen(21), 0, "
"{bitmap} }\n"
"                                  where {Opstr}: namelen, {operator "
"name(unicode)}\n"
"                                        len: {xlen, ylen, 0, {bitmap} + 2\n"
"                                        {bitmap}: bitmaplen, 0, 0, {OTA "
"bitmap}\n"
"                        available: 0x02 if the logo following is valid,\n"
"                                   0x01 for no operator logo following\n"
"        s get network status    { 0x0081 }\n"
"        r get network status    { 0x0082, network%, 0x14? }\n"
"        s set operator logo     { 0x01a3 0x01, oplogo?, MCC+MNC[3], "
"0?,4?,len,\n"
"                                         xlen(78),ylen(21), 0 (frames?),\n"
"                                         {bitmap}*?, 0x00(padding) }\n"
"                                  where len, {bitmap}: see 0x0a/0x0071\n"
"        r set operator logo OK  { 0x01a4 }\n"
"        s clear operator logo   { 0x00af, x}\n"
"                                where x==0 to 4\n"
"        r clear operator logo   { 0x00bf}\n"
"    0x13: Calendar notes\n"
"        s Add meeting note      { 0x0001, body like in subtype 0x001a...}\n"
"        r Add meeting note      { 0x0002, location (2 bytes), status (2 "
"bytes)}\n"
"        s Add call note         { 0x0003, body like in subtype 0x001a...}\n"
"        r Add call note         { 0x0004, location (2 bytes), status (2 "
"bytes)}\n"
"        s Add birthday note     { 0x0005, location (2 bytes), entry type, "
"0x00, year of birth(2 bytes),\n"
"                                          Month, Day, 0x00, 0x00, alarm (4 "
"bytes), alarm type, length, text (Unicode)}\n"
"        r Add birthday note     { 0x0006, location (2 bytes), status (2 "
"bytes)}\n"
"        s Add reminder note     { 0x0007, body like in subtype 0x001a...}\n"
"        r Add reminder note     { 0x0008, location (2 bytes), status (2 "
"bytes)}\n"
"        s Delete calendar note  { 0x000b, location (2 bytes) }\n"
"        r Delete calendar note  { 0x000c, location (2 bytes), ?, ?, ?, ? }\n"
"        s Get calendar note     { 0x0019, location (2 bytes) }\n"
"        r Calendar note recvd   { 0x001a, location (2 bytes), entry type, "
"0x00, year (2 bytes), Month, Day, block}\n"
"                                where: entry type - 0x01 - Meeting, 0x02 - "
"Call, 0x04 - Birthday, 0x08 - Reminder\n"
"                                       block: for Meeting:{hour,minute,alarm "
"(two bytes),recurrance (two bytes),len,0x00,string(unicode)}\n"
"                                              where alarm=Number of minutes "
"before the time of the meeting\n"
"                                                      that the alarm should "
"be triggered:\n"
"                                                      For meetings with \"No "
"alarm\"=0xFFFF (-1).\n"
"                                                      For \"On "
"time\"=0x0000\n"
"                                                      half an hour=0x001E, "
"and so on.\n"
"                                                    Recurrance=in hours, "
"between future occurances of this meeting.\n"
"                                                      If there is no repeat, "
"this value is 0x0000. The special value 0xffff \n"
"                                                      means 1 Year!\n"
"                                              for Call:{Hour,Minute,Alarm "
"(as above),Recurrance (as above),namelen,numberlen,\n"
"                                                        "
"name(unicode),number(unicode)}\n"
"                                              for Reminder:{Recurrance (as "
"above),len,0x00,string(unicode)}\n"
"                                              for "
"Birthday:{byte1,byte2,alarm(4 "
"bytes),yearofbirth,alarmtype,len,string(unicode)}\n"
"                                                        byte1 and byte2 may "
"vary (???). Usually are 0x00 both (but not always)\n"
"                                                        In Birthday, the "
"Year in the common part, usually contains a strange year.\n"
"                                                        So, don't consider "
"it as Year of note, neither year of BirthDay (for Year of\n"
"                                                        Birthday use the "
"value described below).\n"
"                                              where alarm=32-bit integer "
"that is the number of seconds between the desired\n"
"                                                      alarm time and "
"11:59:58pm on the birthday.For \"No Alarm\", the value is\n"
"                                                      0x0000FFFF (65535).\n"
"                                                    YearOfBirth=used instead "
"of the one in the common part of the entry (see above)\n"
"                                                      but only when reading "
"birthday entries. For storing entries, this field does\n"
"                                                      not exist.\n"
"                                                    AlarmType: 0x00 - Tone, "
"0x01 - Silent\n"
"    ?   s???                    { 0x0021 }\n"
"    ?   r???                    { 0x0022, 0x5A, 0x00 }\n"
"    ?   s???                    { 0x0025 }\n"
"    ?   r???                    { 0x0026, 0x04, 0x00 }\n"
"    ?   s                       { 0x0029 }\n"
"    ?   r                       { 0x002A, 0x04, 0x00 }\n"
"        s Get first free pos    { 0x0031 }\n"
"        r Get first free pos    { 0x0032, location (2bytes) }\n"
"        s Get notes info        { 0x003a, 0xFF, 0xFE}\n"
"        r Get notes info        { 0x003b, how many notes used (2 bytes), "
"0x01, 0x07, { two bytes with location for each note} *}\n"
"    ?   s Get calendar note??   { 0x003E, location (2 bytes) }\n"
"    ?   r Get calendar note??   { 0x003F, location (2bytes), ... }\n"
"    0x14:\n"
"        s Get Picture Image     { 0x0007, location, number[2 bytes], 0x00, "
"0x64 }\n"
"        r Get Picture Image     { 0x0008, 0x07, location, number[2 bytes], "
"0x07, ??[38],\n"
"                                         width, height, lenH, lenL, "
"{bitmap}, 0x00, 0x00, text len, text(coded like in SMS)...}\n"
"        r Get SMS failed        { 0x0009, 0x02 },\n"
"        s Get SMS status        { 0x0036, 0x64 }\n"
"        r Get SMS Status        { 0x0037, 0x05/0x03, 0x01, 0x00, 0x00,\n"
"                                  a (2 octets), b (2 octets), c (2 "
"octets),\n"
"                                  d (2 octets), e (2 octets), 0x00\n"
"                                  where:\n"
"                                  a - according to P.Kot:\n"
"                                    Number of locations in \"fixed\" "
"memory. These are all\n"
"                                    Templates entries in my Nokias 6210 "
"(NPE-3 (c) NMP V05.36\n"
"                                    14-11-01, NPE-3 (c) NMP V05.27 "
"01-08-01).\n"
"                                    I can't remove any of Templates entries "
"in my phone.\n"
"                                    Marcin Wiącek: Rather not ! I don't "
"agree.\n"
"                                    I have 0x00, 0x0f and 10 templates and 3 "
"SMS\n"
"                                    and 10 Picture Images.\n"
"                                  b - Number of used messages in phone "
"memory. These\n"
"                                    are messages manually moved from the "
"other folders.\n"
"                                    Picture messages are saved here.\n"
"                                  c - Number of unread messages in phone "
"memory. Probably\n"
"                                    only smart msssages.\n"
"                                  d - Number of used messages in SIM "
"memory. These are\n"
"                                    either received messages or saved into "
"Outbox/Inbox.\n"
"                                    Note that you *can't* save message into "
"this memory\n"
"                                    using 'Move' option. Picture messages "
"are not here.\n"
"                                  e - Number of unread messages in SIM "
"memory\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n7110.rst:315
#, no-wrap
msgid ""
"        s Set Picture Image     { 0x0050, 0x07, location, number[2 bytes], "
"0x07, ??[38], \n"
"                                         width, height, lenH, lenL, "
"{bitmap}, 0x00, 0x00, text len, text(coded like in SMS)...}\n"
"                                  std. size: 72x28\n"
"        r Set Picture Image     { 0x0051, location, number[2 bytes], 0x07 "
"}\n"
"        s Set SMS name          { "
"0x0083,folder,location(2bytes),name(Unicode),0x00 , 0x00}\n"
"        r Set SMS name          { 0x0084,folder,0x00, 0x00, name "
"(Unicode),0x00,0x00}\n"
"        s List Picture Images   { 0x0096, location, 0x0f, 0x07 }\n"
"                                  where location:\n"
"                         LM tries with 0x09, 0x11, 0x19, 0x21, 0x29, 0x31, "
"0x39, 0x41, 0x49\n"
"                     Returned value with 0x21\n"
"        r List Picture Images   { 0x0097, number of pictures[2 bytes], "
"number1[2 bytes], number2[2 bytes], ..., }\n"
"        s Write SMS to folder   { 0x0104, status, folder ID, location(2 "
"bytes), 0x02, 0x01, SMS stuff ... }\n"
"        r Write SMS to folder   { 0x0105, folder ID, location(2 bytes), 0x00 "
"}\n"
"        r Write SMS to folder   { 0x0106, 0x02 (write failed errorcode ?) "
"}\n"
"        s Get SMS from folder   { 0x0107, folderID, location(2 bytes), 0x01, "
"0x65, 0x01}\n"
"                                where: folderID - see 0x14/0x017B\n"
"        r Get SMS from folder   { 0x0108, status, folderID, 0x00, location, "
"type, sender number,...}\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n7110.rst:320
#, no-wrap
msgid ""
"                                where: status=0x01 - reveived/read\n"
"                          0x03 - received/unread\n"
"                          0x05 - stored/sent\n"
"                          0x07 - stored/not sent\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n7110.rst:322
#, no-wrap
msgid "                    where: folderID - see 0x14/0x017B\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n7110.rst:346
#, no-wrap
msgid ""
"                                where: type=0x00 - received SMS\n"
"                        0x01 - delivery report\n"
"                        0x02 - stored SMS\n"
"                        0x07 - picture message\n"
"        s Delete SMS message    { 0x010a, folderID, location(2 bytes), 0x01 "
"}\n"
"        r Delete SMS            { 0x010b }\n"
"        s Get folder status     { 0x016b, folderID, 0x0F, 0x01}\n"
"                                where: folderID - see 0x14/0x017B\n"
"        r Get folder status     { 0x016c, number of entries (2 bytes), "
"entry1number (2 bytes), entry2number(2 bytes), ....}\n"
"        s Get folder names      { 0x017A, 0x00, 0x00}\n"
"        r Get folder names      { 0x017B, number of strings, folderID, "
"name1, 0x00, folderID, name2, 0x00, name3, 0x00,...}\n"
"                                where: folderID=0x08 - Inbox\n"
"                                                0x10 - Outbox\n"
"                                                0x18 - Archive\n"
"                                                0x20 - Templates\n"
"                                                0x29 - first \"My "
"folders\"\n"
"                                                0x31 - second \"My "
"folders\"\n"
"                                                0x39 - third -\"-\n"
"                                                and so on\n"
"    0x17:\n"
"        s Get Battery info      { 0x0002 }\n"
"        r Get Battery info      { 0x0003, 0x0b, batt%, 0x14?, 0x01? }\n"
"    0x19: Phone clock & alarm\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n7110.rst:348
#, no-wrap
msgid "        These frames are like the same frames subtypes in 0x11 in 6110\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n7110.rst:360
#, no-wrap
msgid ""
"        s set date and time     { 0x0060, "
"1,1,7,yearh,yearl,month,mday,hour,min,0x00 }\n"
"        r date and time set     { 0x0061 }\n"
"        s get date and time     { 0x0062 }\n"
"        r date and time recvd   { "
"0x0063,date_set?,time_set?,?,?,yearh,yearl,month,mday,hour,min,second }\n"
"                                where: date_set & time_set==0x01 - set\n"
"                                                0x00 - not set, "
"?,?,yearh,yearl,month,mday,hour,min,second\n"
"                                                                   not "
"available in frame\n"
"        s set alarm             { 0x006b, 1,32,3,0x02(on-off),hour,min,0x00 "
"}\n"
"        r alarm set             { 0x006c }\n"
"        s get alarm             { 0x006d }\n"
"        r alarm received        { 0x006e,?,?,?,?,alrm(==2:on),hour,min }\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n7110.rst:362
#, no-wrap
msgid "        These are new (?)\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n7110.rst:449
#, no-wrap
msgid ""
"    ?   s ??                    { 0x0083, id }\n"
"    ?   r ??                    { 0x0084, 0x01, 0x40, 0x03, id, 0x00, 0x00 "
"}\n"
"    ?   r ??                    { 0x0084, 0x01, 0x40, 0x03, id, 0x00, 0x01 "
"}\n"
"    ?   r ??                    { 0x0084, 0x01, 0x40, 0x03, id, 0x01, 0x00 "
"}\n"
"                                where: id=0x27,0x2a,0x32,0x28,0x40\n"
"    0x1b:\n"
"        s Get IMEI              { 0x0001 }\n"
"        r Get IMEI              { 0x0002, {IMEI(ASCII)}, 0x00 }\n"
"        s get HW&SW version     { 0x0003, 0x01, 0x32 }\n"
"        r get HW&SW version     { 0x0004, \"V \" \"firmware\\n\" \"firmware "
"date\\n\"\n"
"                                  \"model\\n\" \"(c) NMP.\" 0x00 0xff[14] "
"}\n"
"    0x1f:\n"
"        s ???                   { 0x0010, 0x02, 0x00, 0xff, 0xff }\n"
"        r ???                   { 0x0011, length, 0x00, {block}[length] }\n"
"                                  where block: { unicode letter[2], "
"0x0000,\n"
"                                    0x00, 0x55, ??, ?? }\n"
"        s Set ringtone          { 0x011f, 0x00, location, 0x00, "
"name(Unicode),\n"
"                                  ringtone(format the same to 0x40/0x019e "
"and 0x40/0x01a0) }\n"
"                                  where: location: 0x87 to 0x8b on N6210\n"
"                                                   0x74 to ... on N7110\n"
"        s Get ringtone          { 0x0122, 0x00, location}\n"
"        r Get ringtone          { 0x0123, 0x00, location, name(Unicode), "
"0x00,...,0x00, 0x02,0xFC,0x09(ringtone contenst)}\n"
"        r Get ringtone error    { 0x0124, ...}\n"
"    0x39:\n"
"        s get profile feature   { 0x0101, 0x01, 0x01, 0x01, number1, "
"number2}\n"
"                                where number1: from 0x00 to 0x07 (for each "
"profile ?)\n"
"                                      number2: 0x00 - 0x09, 0x0A, 0x16 - "
"0x19, 0x1a - 0x1f, 0x20 - 0x29, 0x2a - 0x2c, 0xff\n"
"                                         where 0x09: keypad tones                                           "
"0x02: incoming call alert                                           0x03: "
"ringtone number\n"
"                                               0x04: ringing volume\n"
"                                               0x05: message alert tone                                           "
"0x06: vibra                                           0x07: warning tones                                           "
"0x08: caller groups alert for\t\t\t\t\t   0x09: automatic answer\n"
"                                               0xff: name\n"
"        r get profile feature   { 0x0102, 0x01, 0x02, number2, block...}\n"
"                                for number2==0xff: (Profile Name)\n"
"                                  block: 0x01, length, name(Unicode), 0x00, "
"0x00\n"
"                                for number2==0x00: (Keypad Tones)\n"
"                                  block: 0x01, 0x01, 0x01, Type, 0x01\n"
"                                  where: Type : 0x00 = Off\n"
"                                                0x01 to 0x03 = Level1 "
".. Level3\n"
"                                for number2==0x02: (Incoming Call Alert)\n"
"                                  block: 0x01, 0x01, 0x01, Type, 0x01\n"
"                                  where: Type : 0x00 = Ringing\n"
"                                                0x01 = Ascending\n"
"                                                0x02 = Ring Once\n"
"                                                0x03 = Beep Once\n"
"                                                0x05 = Off\n"
"                                for number2==0x03: (Ringtone Number)\n"
"                                  block: 0x01, 0x01, 0x01, Number, 0x01\n"
"                                  where: Number : 0x40 to 0x62 - gives "
"number of factory ringtone. The number of menu is\n"
"                                                  obtained by doing (Number "
"- 0x3f);\n"
"                                  where: Number : 0x89 to 0x8d - gives "
"number of uploaded ringtone. The number of menu is\n"
"                                                  obtained by doing (Number "
"- 0x65),while the uploaded ringtone number is\n"
"                                                  obtained by doing (Number "
"- 0x88).\n"
"                                for number2==0x04: (Ringing volume)\n"
"                                  block: 0x01, 0x??, 0x??, Volume, 0x01\n"
"                                  where: Volume : 0 = Level1 .. to 4 = "
"Level5\n"
"                                for number2==0x05: (Message Alert Tone)\n"
"                                  block: 0x01, 0x01, 0x??, Type, 0x01\n"
"                                  where: Type : 0x00 = Off\n"
"                                                0x01 = Standard\n"
"                                                0x02 = Special\n"
"                                                0x03 = Beep Once\n"
"                                                0x04 = Ascending\n"
"                                for number2==0x06: (Vibration)\n"
"                                  block: 0x01, 0x??, 0x??, Switch, 0x01\n"
"                                  where: Switch : 0 = Off, 1 = On\n"
"                                for number2==0x07: (Warning Tones)\n"
"                                  block: 0x01, 0x??, 0x??, Switch, 0x01\n"
"                                  where: Switch : 0 = Off, 1 = On\n"
"                                for number2==0x08: (Caller groups Alert "
"for)\n"
"                                  block: 0x01, 0x??, 0x??, Callers, 0x01\n"
"                                  where: Callers : 0xff = All calls alert "
"(Read below *)\n"
"                                                   0x01 = Family\n"
"                                                   0x02 = VIP\n"
"                                                   0x04 = Friends\n"
"                                                   0x08 = Colleagues\n"
"                                                   0x10 = Others\n"
"                                         All logical OR among groups are "
"valid, so if you select from one phone's profile\n"
"                                         alert for Friends and Collegues, a "
"0x0c will return (because 0x04 OR 0x08 = 0x0c).\n"
"                                     (*) If Callers==0xff, means \"Alert for "
"All calls\". Then, in this case, you don't\n"
"                                         need to read other groups "
"selection.\n"
"                                for number2==0x09: (Automatic answer)\n"
"                                  block: 0x01, 0x??, 0x??, Switch, 0x01\n"
"                                  where: Switch : 0 = Off, 1 = On\n"
"                                    N.B. This feature is valid for Handsfree "
"and Headset profiles only!\n"
"        s ???                   { 0x0101, 0x04, 0x01, 0x01, 0xff, 0x03 }\n"
"        r ???                   { 0x0102, 0x01, 0x02, 0x03, 0x01, 0x01, "
"0x01, 0x85/0x087 }\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n7110.rst:455
#, no-wrap
msgid ""
"        s ?                     { 0x0105}\n"
"        r ?                     { 0x0106, 0x01, 0x04}\n"
"    0x3f: WAP \n"
"        s Enable WAP frames     { 0x0000}\n"
"        r Enable WAP frames     { 0x0002, 0x01}\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n7110.rst:717
#, no-wrap
msgid ""
"        s Get WAP settings 1    { 0x0015, location}\n"
"                                where location: 0x00 - 0x05\n"
"        r Get WAP settings 1 OK { 0x0016, title length, title (Unicode), URL "
"length, URL(Unicode),con_type, ???[6 bytes],location, ???[5 "
"bytes],security,...}\n"
"                                where:\n"
"                                  con_type: 0x00 - temporary\n"
"                                            0x01 - continuous\n"
"                                  location: when use \"Get WAP settings 2 "
"frame\", must give it\n"
"                                  security: 0x00 = no, 0x01 = yes\n"
"        r Get WAP settings 1 err{ 0x0017, error }\n"
"                                  where error:\n"
"                                    0x01   user inside \"Settings\" "
"menu. Must leave it\n"
"                                    0x02   invalid/too high/empty location\n"
"        s Get WAP settings 2    { 0x001b, location}\n"
"                                where location: 0x00 - 0x1d (you get it in "
"\"Get WAP settings 1\" frame)\n"
"        r Get WAP settings 2 OK { 0x001c, 0x01, type, frame...}\n"
"                                where type : 0x00 - SMS bearer\n"
"                                               frame:\n"
"                                                 service_num_len, "
"service_num (Unicode), server_num_len, server_num(Unicode)\n"
"                                             0x01 - data bearer\n"
"                                               frame:\n"
"                                                 auth, call_type, "
"call_speed, ?, IP len, IP (Unicode), dialup len, dialup (Unicode),\n"
"                                                 user len, user (Unicode), "
"password len, password (Unicode)\n"
"                                                 where auth: 0x00 - normal, "
"0x01 - secure\n"
"                                                       call_type: 0x00 - "
"analogue, 0x01 - ISDN\n"
"                                                       call_speed: 0x00 - "
"9600, 0x01 - 14400\n"
"                         0x02 - USSD bearer\n"
"                           frame: type, service number len/IP len,service "
"num (Unicode)/IP (Unicode),service code len,\n"
"                                  service code (Unicode)\n"
"                             where type: 0x01 - service number, 0x00 - IP\n"
"        r Get WAP settings 2 err{ 0x001d,error}\n"
"                                where: error=0x05    \n"
"    0x40: Security commands\n"
"    ?   s ???(N6150)            { 0x08, 0x00 }\n"
"    ?   r ???(N6150)            { 0x08 }\n"
"        s Enable extended cmds  { 0x64, cmd }\n"
"                                where cmd: 0x00: off\n"
"                                           0x01: on\n"
"                                           0x03: reset (doesn't ask for PIN "
"again)\n"
"                                           0x04: reset (PIN is requested)\n"
"                                                 In 5110 makes reset without "
"PIN\n"
"                                           0x06: CONTACT SERVICE!!! Don't "
"try it!\n"
"        s Reset phone settings  { 0x65, value, 0x00 }\n"
"                                where value: 0x08 - reset UI (User "
"Interface) settings\n"
"                                 0x38 - reset UI, SCM and call counters\n"
"                                             0x40 - reset test 36 in "
"netmonitor\n"
"        r Reset phone settings  { 0x65, 0x00 }\n"
"        s Get IMEI              { 0x66 }\n"
"        r Get IMEI              { 0x66, 0x01, IMEI, 0x00}\n"
"        s (ACD Readings)?(N6150 { 0x68 }\n"
"        r (ACD Readings)?(N6150 { 0x68, ... }\n"
"        s Get Product Profile\n"
"          Settings              { 0x6a}\n"
"        r Get Product Profile\n"
"          Settings              { 0x6a, 4bytes with Product Profile Settings "
"}\n"
"        s Set Product Profile\n"
"          Settings              { 0x6b, 4bytes with Product Profile Settings "
"}\n"
"        r Set Product Profile\n"
"          Settings OK ?         { 0x6b }\n"
"        s Get code              { 0x6e, code }\n"
"                                where code: see 0x08/0x0004 (no allowed code "
"!)\n"
"        r Get code              { 0x6e, code, allowed, allowed? (sec code "
"(text)) }\n"
"                                where code: see 0x08/0x0004\n"
"                                      allowed: 0: no\n"
"                                               1: yes\n"
"    ?   s ????                  { 0x74, 0x01, 0x01, 0x0e }\n"
"    ?   r ????                  { 0x74 }\n"
"        s Call commands         { 0x7c, block }\n"
"                                where where: command, (values)\n"
"                          command: 0x01\n"
"                          values: number(ASCII), 0x00 - makes voice call\n"
"                      command: 0x02 - answer call\n"
"                      command: 0x03 - release call\n"
"        r Call commands         { 0x7c, command }\n"
"        s Netmonitor            { 0x7e, field }\n"
"                                where: field: 00: next\n"
"                                              F0: reset\n"
"                                              F1: off\n"
"                                              F2: field test menus\n"
"                                              F3: developer menus\n"
"        s Get simlock info      { 0x8a, 0x00}\n"
"        r Get simlock info      { 0x8a, 0x00, 0x01, lockstype, locksclosed, "
"0x00, 0x00, locksinfo(lock1,4,2,3), counter1,counter2,counter4,counter4,0x00 "
"}\n"
"                                where: lockstype:   bit1,bit2,bit3,bit4 - if "
"set, selected lock is user lock\n"
"                                       locksclosed: bit1,bit2,bit3,bit4 - if "
"set, selected lock is closed\n"
"                                       counter1 - counter4: counters for "
"locks\n"
"        s Buzzer pitch          { 0x8f, volume, hzLO, hzHI }\n"
"                                if volume and hz is 0, it's off\n"
"        r Buzzer pitch          { 0x8f}\n"
"        s ACD Readings ?        { 0x91, parameter?(0x02,0x03,0x04,0x05,0x07) "
"}\n"
"        r ACD Readings ?        { 0x91, parameter?, value? }\n"
"    ?   s ???(N6150)            { 0x98, 0x00 }\n"
"    ?   r ???(N6150)            { 0x98, 0x00, 0x04 }\n"
"        s Get bin ringtone      { 0x9e, location }\n"
"                                where: location=0,1,etc.\n"
"        r Get bin ringtone      { 0x9e, location, error, contents... }\n"
"                                where location=0,1,etc.\n"
"                                      error=0x0a, ringtone NOT available\n"
"                                            0x00, OK\n"
"        s Set bin ringtone      { 0xa0, location, 0x00, contenst... }\n"
"                                where: location=0,1,etc.\n"
"        r Set bin ringtone      { 0xa0, location, error }\n"
"                                  where location=0,1,etc.\n"
"                                        error=0x0a, ringtone NOT set\n"
"                                              0x00, ringtone set OK\n"
"    ?   r Get MSid              { 0xb5, 0x01, 0x2f, msid, 0x25 }\n"
"        s Get info about phone  { 0xc8, 0x01 }\n"
"        r Get info about phone  { 0xc8, 0x01, 0x00, \"V \", \"firmware\", "
"0x0a, \"firmware date\", 0x0a, \"model\", 0x0a, \"(c) NMP.\", 0x00 }\n"
"        s Get MCU SW Checksum   { 0xc8, 0x02 }\n"
"        r Get MCU SW Checksum   { 0xc8, 0x02, 0x00, checksum (4 bytes),0x00 "
"}\n"
"        s DPS External SW       { 0xc7, 0x03 }\n"
"        r DSP External SW       { 0xc7, 0x03, 0x00, string,0x00 }\n"
"        s Get HW                { 0xc8, 0x05 }\n"
"        r Get HW                { 0xc8, 0x05, 0x00, HW version (4 bytes), "
"0x00 }\n"
"        s Get \"Made\" Date       { 0xc8, 0x05 }\n"
"        r Get \"Made\" Date       { 0xc8, 0x05, 0x00, date(4 bytes), 0x00 "
"}\n"
"        s Get DSP Internal SW   { 0xc8, 0x09 }\n"
"        r Get DSP Internal SW   { 0xc8, 0x09, 0x00, version (1 bytes), 0x00 "
"}\n"
"        s Get PCI version       { 0xc8, 0x0b }\n"
"        r Get PCI version       { 0xc8, 0x0b, 0x00, version, 0x00 }\n"
"        s Get system ASIC       { 0xc8, 0x0c }\n"
"        r Get system ASIC       { 0xc8, 0x0c, 0x00, string, 0x00 }\n"
"        s Get COBBA             { 0xc8, 0x0d }\n"
"        r Get COBBA             { 0xc8, 0x0d, 0x00, string, 0x00 }\n"
"        s Get PLUSSA            { 0xc8, 0x0e }\n"
"        r Get PLUSSA            { 0xc8, 0x0e, available, 0x00 }\n"
"                                where available: 0x01: not available\n"
"        s Get CCONT             { 0xc8, 0x0f }\n"
"        r Get CCONT             { 0xc8, 0x0f, available, 0x00 }\n"
"                                where available: 0x01: not available\n"
"        s Get PPM version       { 0xc8, 0x10 }\n"
"        r Get PPM version       { 0xc8, 0x10, 0x00, \"V \", \"firmware\", "
"0x0a, \"firmware date\", 0x0a, \"model\", 0x0a, \"(c) NMP.\", 0x00 }\n"
"        s Get PPM info          { 0xc8, 0x12 }\n"
"        r Get PPM info          { 0xc8, 0x12, 0x00, PPM version (\"B\", "
"\"C\", etc.), 0x00 }\n"
"        s Set HW version        { 0xc9, 0x05, version, 0x00 }\n"
"        s Get Product Code      { 0xca, 0x01 }\n"
"        r Get Product Code      { 0xca, 0x01, 0x00, number, 0x00 }\n"
"        s Get Order Number      { 0xca, 0x02 }\n"
"        r Get Order Number      { 0xca, 0x02, 0x00, string, 0x00 }\n"
"        s Get Prod.Ser.Number   { 0xca, 0x03 }\n"
"        r Get Prod.Ser.Number   { 0xca, 0x03, 0x00, number, 0x00 }\n"
"        s Get Basic Prod.Code   { 0xca, 0x04 }\n"
"        r Get Basic Prod.Code   { 0xca, 0x04, 0x00, number, 0x00 }\n"
"        s Set Product Code      { 0xcb, 0x01, product code, 0x00 }\n"
"        s Set Order Number      { 0xcb, 0x02, number, 0x00 }\n"
"        s Set Prod.Ser.Number   { 0xcb, 0x03, number, 0x00 }\n"
"        s Get (original ?)IMEI  { 0xcc, 0x01 }\n"
"        r Get (original ?)IMEI  { 0xcc, 0x01, IMEI, 0x00 }\n"
"        s Get Manufacture Month { 0xcc, 0x02 }\n"
"        r Get Manufacture Month { 0xcc, 0x02, 0x00, string, 0x00 }\n"
"        s Get Purchare date     { 0xcc, 0x04 }\n"
"        r Get Purchare date     { 0xcc, 0x04, 0x00, string, 0x00 }\n"
"        s Set \"Made\" date       { 0xcd, 0x02, string, 0x00 }\n"
"        s Make \"all\" phone tests{ 0xce,0x1d,0xfe,0x23,0x00,0x00}\n"
"        s Make one phone test   { 0xce,0x1d,num1,num2,num3,num4}\n"
"                                Where num1-num4: 0x02,0x00,0x00,0x00;\n"
"                                                 0x04,0x00,0x00,0x00;\n"
"                                                 0x08,0x00,0x00,0x00;\n"
"                                                 0x10,0x00,0x00,0x00;\n"
"                                                 0x20,0x00,0x00,0x00;\n"
"                                                 0x40,0x00,0x00,0x00;\n"
"                                                 0x80,0x00,0x00,0x00;\n"
"                                                 0x00,0x01,0x00,0x00;\n"
"                                                 0x00,0x02,0x00,0x00;\n"
"                                                 0x00,0x04,0x00,0x00; - "
"\"Power off\"\n"
"                                                   No test for \"Security "
"data\"\n"
"                                                 0x00,0x10,0x00,0x00;\n"
"                                                 0x00,0x20,0x00,0x00;\n"
"                                                 0x00,0x40,0x00,0x00;\n"
"                                                 0x00,0x80,0x00,0x00;\n"
"                                                 0x00,0x00,0x01,0x00;\n"
"                                                 ....\n"
"                                                 0x00,0x00,0x10,0x00;\n"
"        s Result of phone tests { 0xcf }\n"
"        r Result of phone tests { 0xcf, number of tests, results of next "
"tests }\n"
"    ?   s ???                   { 0xd1 }\n"
"    ?   r ???(N5110)            { 0xd1, 0x00, 0x1d, 0x00, 0x01, 0x08, 0x00 "
"}\n"
"        s LCD Test              { 0xd3, value }\n"
"                                where value: 0x03, 0x02 - 1'st test\n"
"                                 0x03, 0x01 - 2'nd test\n"
"                                             0x02, 0x03 - clears screen\n"
"        s ACD Readings(N6150)?  { 0xd4, 0x02, 0x00, 0x02, 0x00, 0x0e, "
"0x01}\n"
"        r ACD Readings(N6150)?  { 0xd4, 0x02, 0x00, 0x02, 0x00, 0x0e, 0x01, "
"?}\n"
"        r Function of           { 0xff, 0x8c }\n"
"          0x40 msgtype not\n"
"          supported ?\n"
"    0x78:\n"
"        s Status confirm        { 0x0201, 0x03 }\n"
"        r Incoming call seq1    { 0x0102 0x0e 0x03 }\n"
"        r Incoming call seq2    { 0x0102 0x7e 0x01 }\n"
"    0x79:\n"
"        s CarKit enable         { 0x0201 0x01 0x62 0x00 }\n"
"        r CarKit enabled        { 0x0201 0x02 0x06 0x00 \"V \" {version} "
"\"\\nHFU\"\n"
"                                         0x00 }\n"
"    0x7a: settings\n"
"        r Set setting           { 0x01eb, number, 0x00 }\n"
"        s Set setting           { 0x01ec, number, contents }\n"
"                                where for number:\n"
"                                  0x02 (startup text) : 0x00, text "
"(Unicode)\n"
"                                  0x15 (startup logo) : 0x00, 0x00, 0x00, "
"0x04,\n"
"                                            0xc0, 0x02, 0x00, height, 0xc0, "
"0x03, 0x00, width,\n"
"                            0xc0, 0x04, 0x03, 0x00, {bitmap} }\n"
"                                    where width, height, {bitmap}: see "
"0x7a/0x01ed 0x15\n"
"        s Get setting           { 0x01ee, number}\n"
"                                where number: 0x01 - 0x1e\n"
"                                  0x02: startup text\n"
"                                  0x15: startup logo\n"
"                                  0x1c: security code\n"
"        r Get setting           { 0x01ed,number, 0x00, contents}\n"
"                                where for number:\n"
"                                  0x02 (startup text) : 0x00, text "
"(Unicode)\n"
"                                  0x15 (startup logo) : 0x00, 0x00, 0x00, "
"0x04,\n"
"                                            0xc0, 0x02, 0x00, height, 0xc0, "
"0x03, 0x00, width,\n"
"                                            0xc0, 0x04, 0x03, 0x00, {bitmap} "
"}\n"
"                                    where height: 60 (0x3c) or 65\n"
"                                          width:  96 (0x60)\n"
"                                          {bitmap}: like other bitmaps but "
"pixels\n"
"                                                    placed vertically.\n"
"                                  0x1c (security code): {code(ascii)}, 0x00 "
"\n"
"    0x7f: Acknowledge(FBUS/IRDA){+type, seq }\n"
"          Acknowledge(MBUS)...\n"
"    0xd0: \n"
"        s Power on message seq1 {+04 }\n"
"        r Power on message seq1 {+05 }\n"
"    0xd1:\n"
"        s Get HW&SW version     { 0x0003, 0x00 }\n"
"    0xd2:\n"
"        r Get HW&SW version     { 0x0003 \"V \" \"firmware\\n\" \"firmware "
"date\\n\"\n"
"                                  \"model\\n\" \"(c) NMP.\" }\n"
"    0xf4: Power on message seq 2\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:2
#, no-wrap
msgid ""
"Nokia protocols\n"
"===============\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:5
msgid "Document describing protocol used in Nokia phones."
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:11
msgid "Last update 23.06.2003"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:30
#, no-wrap
msgid ""
"Assembled by\n"
"Balazs Nagy          <js@iksz.hu>\n"
"Alfred R. Nurnberger <arnu@flosys.com>\n"
"Hugh Blemings        <Hugh.Blemings@vsb.com.au>\n"
"Mike Bradley         <mike@trumpington.st>\n"
"Odinokov Serge       <serge@takas.lt>\n"
"Pavel Janik          <Pavel@Janik.cz>\n"
"Pawel Kot            <pkot@linuxnews.pl>\n"
"Marcin Wiacek        <Marcin@MWiacek.com>\n"
"Jens Bennfors        <jens.bennfors@ing.hj.se>\n"
"Michael Hund         <michael@drhund.de>\n"
"Jay Bertrand         <jay.bertrand@libertysurf.fr>\n"
"<arnu@venia.net>\n"
"Andrew Kozin\n"
"Pavel Machek         <pavel@ucw.cz>\n"
"Diego Betancor       <dbetancor@duocom.net>\n"
"... and other members of gnokii mailing list\n"
"and authors of some WWW pages.\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:38
#, no-wrap
msgid ""
"Frame format for MBUS version 1\n"
"-------------------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:41
msgid "Request from Computer/Answer from Phone::"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:43
#, no-wrap
msgid "   { DestDEV, SrcDEV, FrameLength, MsgType, {block}, id, ChkSum }\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:54
#, no-wrap
msgid ""
"       where DestDEV, SrcDEV:   0x00: phone\n"
"                                0xf8: PC (wakeup msg)\n"
"                                0xe4: PC (normal msg)\n"
"             FrameLength:       length of data frame. Maximal 0x78. Longer\n"
"                                frames are divided into smaller.\n"
"             MsgType:           see List\n"
"             {block}:           main frame\n"
"             id:                request identity number 1..n, incremented "
"after\n"
"                                the request is accepted\n"
"             ChkSum:            XOR on frame's all numbers\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:56
msgid "Ack from Phone::"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:58
#, no-wrap
msgid "    { DestDEV, 0x00, FrameLength, MsgType, {block} , id, ChkSum }\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:68
#, no-wrap
msgid ""
"       where DestDEV:           taken from original request packet\n"
"             FrameLength:       0x7f, when DestDEV = 0xe4\n"
"                                0x7e, when DestDEV = 0xf8\n"
"             MsgType:           see List. Present only, when DestDEV = "
"0xf8\n"
"             {block}:           main frame. Present only, when DestDEV = "
"0xf8\n"
"             id:                request identity number 1..?, "
"corresponding\n"
"                                to the original request packet id\n"
"                                the request is accepted\n"
"             ChkSum:            XOR on frame's all numbers\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:71
msgid ""
"Update: description above according to the "
"http://www.gadgets.demon.co.uk/nokia21xx/protocol.html."
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:76
#, no-wrap
msgid ""
"Pavel Machek <pavel@ucw.cz> wrote:\n"
"  0x7e is actually registration acknowledge. Both have nothing to do\n"
"  with DestDEV, except that special device needs to be used for\n"
"  registration.\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:78
msgid "Ack from Computer::"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:80
#, no-wrap
msgid "    { 0x00, SrcDEV, 0x7f, id, ChkSum }\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:86
#, no-wrap
msgid ""
"       where SrcDEV:            taken from response packet\n"
"             id:                request identity number 1..?, "
"corresponding\n"
"                                to the response packet id\n"
"                                the request is accepted\n"
"             ChkSum:            XOR on frame's all numbers\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:89
#, no-wrap
msgid ""
"Port settings:\n"
"     Speed 9600 bps, Bits 8, ParityOdd, Stop Bits 1, DTR and RTS logic 0\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:92
msgid ""
"In the MBUS bus, the phone has only one connector for transmition and "
"reception."
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:97
msgid ""
"Because of this characteristics of the phone connector, every time that the "
"PC writes into the phone it is writing as well into its own Rx. So every "
"time the PC sends info into the phone it finds that same information in its "
"own Rx buffers, like a mirror copy. This should be discarded."
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:100
msgid ""
"The communications is made like an old cb radio, only one talking at a "
"time. Many transmission are made this way:"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/protocol/nokia.rst:105
msgid "<computer sends request>"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/protocol/nokia.rst:105
msgid "<phone sends ack>"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/protocol/nokia.rst:105
msgid "<phone sends response>"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/protocol/nokia.rst:105
msgid "<computer sends ack>"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:107
msgid "Some frames are sent from phone without asking for them"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:111
msgid ""
"You have to implement collision protocol. IE. you should listen for what you "
"are transmitting, and if it does not come back, you have collision."
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:115
msgid ""
"You should wait for bus to be free for 3 miliseconds before normal message, "
"and for 2.5 miliseconds before acknowledge. You should wait for acknowledge "
"for 200 miliseconds, then retransmit."
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:117
#, no-wrap
msgid ""
"Frame format for FBUS version 1\n"
"-------------------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:120 docs/manual/protocol/nokia.rst:144
msgid "All frames::"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:122
#, no-wrap
msgid "    { FrameID, FrameLength, MsgType, {block}, SeqNo, ChkSum }\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:139
#, no-wrap
msgid ""
"         where FrameID:         0x01 Command frame from computer to Nokia \n"
"                                0x02 ??? - Data call frame from computer to "
"Nokia - ??? \n"
"                                0x03 Data call frame from Nokia to computer "
"\n"
"                                0x04 Command frame from Nokia to computer \n"
"               FrameLength:     {block} + 2\n"
"               MsgType:         see List\n"
"               SeqNum:          Sequence number of command in case where "
"direction is\n"
"                                from ME to computer, the sequence number is "
"\n"
"                                counting from 0x30 to 0x37 and resetting "
"back to 0x30.\n"
"                                When direction is from computer to ME,\n"
"                                sequence number counts from 0x08 to 0x0f and "
"resets back to 0x08.\n"
"                                It may not be required to be this way.\n"
"                                Sequence numbers are used in acknowledging "
"commands.\n"
"               ChkSum1:         CRC = 0;\n"
"                                for (i = 0; i < (2 + CMD_LEN); i++)\n"
"                                  CRC ^= frame[i];\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:141
#, no-wrap
msgid ""
"Frame format for FBUS version 2/Direct IRDA\n"
"-------------------------------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:147
#, no-wrap
msgid ""
"    { FrameID, DestDEV, SrcDEV, MsgType, 0x00, FrameLength, {block}, "
"FramesToGo,\n"
"      SeqNo, PaddingByte?, ChkSum1, ChkSum2 }\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:163
#, no-wrap
msgid ""
"         where FrameID:         0x1c: IR / FBUS\n"
"                                0x1e: Serial / FBUS\n"
"               DestDev, SrcDev: 0x00: mobile phone\n"
"                                0x0c: TE (FBUS) [eg. PC]\n"
"               MsgType:         see List\n"
"               FrameLength:     {block} + 2 (+ 1 if PaddingByte exists)\n"
"               FramesToGo:      0x01 means the last frame\n"
"               SeqNo:           [0xXY]\n"
"                                  X: 4: first block\n"
"                                     0: continuing block\n"
"                                     Y: sequence number\n"
"               PaddingByte:     0x00 if FrameLength would be an odd number\n"
"                                anyways it doesn't exists\n"
"               ChkSum1:         XOR on frame's odd numbers\n"
"               ChkSum2?:        XOR on frame's even numbers\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:165
#, no-wrap
msgid ""
"Frame format for MBUS version 2\n"
"-------------------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:168
msgid "Cable::"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:171
#, no-wrap
msgid ""
"    { FrameID, DestDEV, SrcDEV, MsgType, FrameLengthLO, FrameLengthHI, "
"{block},\n"
"      SeqNo, ChkSum }\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:184
#, no-wrap
msgid ""
"         where FrameID:         0x1f: Serial / M2BUS\n"
"               DestDev, SrcDev: 0x00: mobile phone\n"
"                                0x1d: TE (M2BUS)\n"
"                                0x10: TE (M2BUS) (Service Software ?)\n"
"                                0x04: Carkit?\n"
"                                0x48: DLR3 cable?\n"
"                                0xF8: unknown target?\n"
"                                0xFF: global target?\n"
"               MsgType:         see List\n"
"               FrameLength:     {block}\n"
"               SeqNo:           sequence number\n"
"               ChkSum:          XOR on frame's all numbers\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:186
msgid "Please note that M2BUS has only one checksum: XOR on frame[FrameID..SeqNo]"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:188
msgid "Ack::"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:190
#, no-wrap
msgid "    { FrameID, DestDEV, SrcDEV, 0x7f, Id_SeqNo, ChkSum }\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:193
#, no-wrap
msgid ""
"\t where Id_SeqNo:        Is the sequence number that you are\n"
"\t                        acknowleging (from the other part).\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:195
msgid "Frame format for Infrared::"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:197
#, no-wrap
msgid ""
"    { FrameID, DestDEV, SrcDEV, MsgType, FrameLengthLo, FrameLengthHi, "
"{block}}\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:203
#, no-wrap
msgid ""
"         where FrameID:         0x14\n"
"               DestDev, SrcDev: 0x00: mobile phone\n"
"                                0x0c: TE [eg. PC]\n"
"               MsgType:         see List\n"
"               FrameLength:     {block}\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:205
msgid "Frame format for Bluetooth::"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:207
#, no-wrap
msgid ""
"    { FrameID, DestDEV, SrcDEV, MsgType, FrameLengthLo, FrameLengthHi, "
"{block} }\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:213
#, no-wrap
msgid ""
"         where FrameID:         0x19\n"
"               DestDev, SrcDev: 0x00: mobile phone\n"
"                                0x10: TE [eg. PC]\n"
"               MsgType:         see List\n"
"               FrameLength:     {block}\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:215
msgid "Frames list format::"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:220
#, no-wrap
msgid ""
"    hex: Short description\n"
"       x msg desc                { ... }\n"
"\t0xXX   -> one byte\n"
"\t0xXXYY -> two bytes (== 0xXX, 0xYY)\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:225
#, no-wrap
msgid ""
"         where hex:     message type\n"
"               x:       s=send (eg. to mobile), r=receive\n"
"               { ... }: data after 0x00, 0x01 header\n"
"               {+... }: raw data (without header)\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:227
#, no-wrap
msgid ""
"Misc (about MBUS version 2)\n"
"---------------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:231
msgid "0x4E commands +++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:234
msgid ""
"(sent from a 5160i TDMA / 6160i TDMA / 6185 CDMA or 7110 GSM phone to the uC "
"in the DLR-3 cable)"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:236
msgid "DLR-3 req:"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:238
msgid "1F 48 00 4E 00 02 01 XX SQ CS"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:242
#, no-wrap
msgid ""
"  frame sent from the phone to the DLR-3 cable\n"
"  (after 15kOhm resistor detected betw. XMIC (3) and DGND (9).)                                                                                  "
"\n"
"  DSR,DCD,CTS flow control data is coded into the 2nd databyte \n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:244
#, no-wrap
msgid "  XX: \n"
msgstr ""

#. type: Bullet: '      * '
#: docs/manual/protocol/nokia.rst:250
msgid "bit.0=/CTS"
msgstr ""

#. type: Bullet: '      * '
#: docs/manual/protocol/nokia.rst:250
msgid "bit.1=/DCD"
msgstr ""

#. type: Bullet: '      * '
#: docs/manual/protocol/nokia.rst:250
msgid "bit.2=CMD/DATA"
msgstr ""

#. type: Bullet: '      * '
#: docs/manual/protocol/nokia.rst:250
msgid "bit.3=DSR"
msgstr ""

#. type: Bullet: '      * '
#: docs/manual/protocol/nokia.rst:250
msgid "bit.4-7=0"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:253
msgid "0x78 / 0x79 commands ++++++++++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:255
msgid "(used by handsfree carkit) Works also on GSM phones (5110 / 6110 / etc)"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:260
msgid ""
"These commands are used by the Nokia Carkits to switch the phone audio path "
"to XMiC and XEAR , turn the phone on/off according to the car ignition, and "
"control the PA loudspeaker amplifier in the carkit and the car radio mute "
"output which silences the car radio during a call"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:294
#, no-wrap
msgid ""
"mute status tone:\n"
"  1F 04 00 78 00 04 01 02 0E 00 SQ CS\n"
"     status indication = disable carkit audio amplifier (no audio / no tone) "
"\n"
"mute status tone:\n"
"  1F 04 00 78 00 04 01 02 0E 03 SQ CS\n"
"     status indication = enable carkit audio amplifier (audio / tone "
"present) \n"
"mute status call:\n"
"  1F 04 00 78 00 04 01 02 07 00 SQ CS\n"
"     status indication = disable radio mute output (no call) \n"
"mute status call:\n"
"  1F 04 00 78 00 04 01 02 07 01 SQ CS\n"
"     status indication = enable radio mute output (call active) \n"
"enable ???:\n"
"  1F 04 00 78 00 04 01 02 08 01 SQ CS\n"
"      status indication = enable ???  sent to HFU-2 on power on \n"
"      byte 9 (07,08,0E) seems to be a pointer to a memory location,\n"
"      byte 10 is the data at this memeory location. \n"
"response from HFU:\n"
"  1F 00 04 78 00 03 02 01 03 SQ CS\n"
"     response message from HFU-2 (use unknown) \n"
"go HF and IGN on:\n"
"  1F 00 04 79 00 05 02 01 01 63 00 SQ CS\n"
"     enables carkit mode + turns phone on + req. mute status \n"
"go HF and IGN off:\n"
"  1F 00 04 79 00 05 02 01 01 61 00 SQ CS\n"
"     enables carkit mode + powers phone off (1 min delay) + req. mute status "
"\n"
"ext. HS Offhk:\n"
"  1F 00 04 79 00 05 02 01 01 23 00 SQ CS\n"
"     enables carkit mode + external handset lifted (OFF-Hook) \n"
"ext. HS Onhk:\n"
"  1F 00 04 79 00 05 02 01 01 63 00 SQ CS\n"
"     enables carkit mode + external handset put back (ON-Hook) \n"
"     Ignition and Hook are coded into one byte \n"
msgstr ""

#. type: Bullet: '        * '
#: docs/manual/protocol/nokia.rst:308
msgid "bit.0 = 0:on power on 1:when in operation"
msgstr ""

#. type: Bullet: '        * '
#: docs/manual/protocol/nokia.rst:308
msgid "bit.1 = IGNITION STATUS"
msgstr ""

#. type: Bullet: '        * '
#: docs/manual/protocol/nokia.rst:308
msgid "bit.2 = x can be 1 or 0"
msgstr ""

#. type: Bullet: '        * '
#: docs/manual/protocol/nokia.rst:308
msgid "bit.3 = 0"
msgstr ""

#. type: Bullet: '        * '
#: docs/manual/protocol/nokia.rst:308
msgid "bit.4 = 0"
msgstr ""

#. type: Bullet: '        * '
#: docs/manual/protocol/nokia.rst:308
msgid "bit.5 = 1"
msgstr ""

#. type: Bullet: '        * '
#: docs/manual/protocol/nokia.rst:308
msgid "bit.6 = Hook (inverted)"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:308
#, no-wrap
msgid ""
"        * bit.7 = 0 \n"
"HFU-2 version:\n"
"  1F 00 04 79 00 12 02 01 02 06 00 56 20 30 36 2E 30 30 0A 48 46 55 32 00 SQ "
"CS\n"
"for HFU-2:\n"
"  1F 04 00 DA 00 02 00 02 SQ CS\n"
"    function unknown - sent from Nokia phone to HFU-2mute output (call "
"active ) \n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:311
msgid "0xD0 commands +++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia.rst:317
#, no-wrap
msgid ""
"init:\n"
"  1F 00 1D D0 00 01 04 SQ CS\n"
"    sent by the Service Software or HFU-2 on startup \n"
"init resp:\n"
"  1F 1D 00 D0 00 01 05 SQ CS\n"
"    response from phone to above frame \n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/index.rst:2
msgid ".. _protocols:"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/index.rst:4
#, no-wrap
msgid ""
"Phone Protocols\n"
"===============\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/index.rst:8 docs/manual/smsd/backends.rst:11 docs/manual/smsd/index.rst:8 docs/manual/smsd/manual.rst:6 docs/manual/project/about.rst:20 docs/manual/project/index.rst:8 docs/manual/testing/index.rst:8 docs/manual/contents.rst:8 docs/manual/internal/index.rst:12 docs/manual/formats/index.rst:9 docs/manual/utils/index.rst:8
#, no-wrap
msgid ""
".. toctree::\n"
"    :maxdepth: 2\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/index.rst:21
#, no-wrap
msgid ""
"    discovering\n"
"    nokia\n"
"    nokia-s40-sms\n"
"    n6110\n"
"    n6510\n"
"    n7110\n"
"    carkit\n"
"    tdma_5120\n"
"    samsung\n"
"    samsung-gt\n"
"    sonim\n"
"    m-obex\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/index.rst:25
#, no-wrap
msgid ""
"    You can also find documentation for some protocols and vendor "
"extensions\n"
"    in separate git repository at http://gitorious.org/gammu/gsm-docs\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung-gt.rst:2
#, no-wrap
msgid ""
"SAMSUNG GT calendar AT commands\n"
"===============================\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung-gt.rst:5
#, no-wrap
msgid ""
"Calendar Entries\n"
"----------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung-gt.rst:9
msgid ""
"``AT+SSHT=1`` - selects the Organizer->Calendar->Appointment entries "
"(Spotkania in Polish version)"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung-gt.rst:12
msgid ""
"``AT+SSHT=2`` - selects the Organizer->Calendar->Anniversary entries "
"(Rocznice in Polish version)"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung-gt.rst:15
msgid ""
"``AT+SSHT=5`` - selects the Organizer->Calendar->Holiday entries (Święta "
"in Polish version)"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung-gt.rst:18
msgid ""
"``AT+SSHT=6`` - selects the Organizer->Calendar->Important entries (Ważne "
"in Polish version)"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung-gt.rst:21
msgid ""
"``AT+SSHT=7`` - selects the Organizer->Calendar->Private entries (Prywatne "
"in Polish version)"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung-gt.rst:23
msgid "After selection of type, we can read all items::"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung-gt.rst:31
#, no-wrap
msgid ""
"    AT+SSHR=0\n"
"    "
"+SSHR:5,\"5,test1\",\"0,\",\"0,\",2010,5,12,2010,5,12,21,49,22,49,0,0,0,0,2010,5,30,,\n"
"    "
"+SSHR:3,\"1,x\",\"0,\",\"0,\",2010,6,2,2010,6,3,0,0,0,0,0,0,0,0,2010,5,30,,\n"
"    "
"+SSHR:1,\"9,event1234\",\"0,\",\"0,\",2010,6,7,2010,6,7,7,0,8,59,0,0,0,0,2010,5,30,,\n"
"    "
"+SSHR:4,\"7,test123\",\"0,\",\"0,\",2010,6,14,2010,6,14,21,37,22,37,0,0,0,0,2010,5,30,,\n"
"    "
"+SSHR:2,\"7,Meeting\",\"0,\",\"0,\",2010,6,15,2010,6,15,8,0,8,59,0,0,0,0,2010,5,30,,\n"
"    OK\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung-gt.rst:33
msgid "Or just read a single item::"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung-gt.rst:37
#, no-wrap
msgid ""
"    AT+SSHR=1\n"
"    +SSHR:1,\"9,Event "
"123\",\"0,\",\"0,\",2010,6,7,2010,6,7,7,0,8,59,0,0,0,0,2010,5,30,,\n"
"    OK\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung-gt.rst:39
msgid "Getting status (the last number appears to be number of notes)::"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung-gt.rst:43
#, no-wrap
msgid ""
"    AT+SSHR=?\n"
"    +SSHR:100,15,100,15,\"1000000\",2008,2024,5\n"
"    OK\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung-gt.rst:45
msgid "You can also add or modify an item::"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung-gt.rst:47
#, no-wrap
msgid ""
"    AT+SSHW=\"7,event01\",\"16,details of "
"event\",\"5,where\",2010,06,03,2010,06,04,12,31,13,42,0,0,0,0,2010,05,31,,,0\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung-gt.rst:52
msgid ""
"It seems, that the last number in the above record specifies whether it is "
"addition of a new record (0), or modification of the old record (then the "
"number is the position of the item, as the first number listed after "
"``AT+SSHR=0``). e.g.::"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung-gt.rst:54
#, no-wrap
msgid ""
"    AT+SSHW=\"13,event1234 "
"new\",\"0,\",\"0,\",2010,06,07,2010,06,07,07,00,08,59,0,0,0,0,2010,05,30,,,1\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung-gt.rst:67
msgid ""
"Please note, that the format for writing is somehow different, than for "
"reading - hour and minuts must be in two-digit form! The text fields (as "
"shown above) are formatted in the following way: "
"\"number_of_characters_in_string,string\" In all items above the first "
"string is the name of event, the second string - details of event, the third "
"one - place of event.  The numeric fields encode start date "
"(year,month,day), end date (year, month, day), start time (hour,minutes), "
"end time (hour, minutes), four unknown to me (yet?) values, date of "
"creation? (year month day) - the meaning of this date is not sure for me "
"yet."
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung-gt.rst:69 docs/manual/protocol/samsung-gt.rst:113 docs/manual/protocol/samsung-gt.rst:159
msgid "To delete entries::"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung-gt.rst:72
#, no-wrap
msgid ""
"    AT+SSHD=1\n"
"    OK\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung-gt.rst:74
#, no-wrap
msgid ""
"Task Entries\n"
"------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung-gt.rst:78
msgid ""
"There is yet another type, that can be selected by ``AT+SSHT=3`` This is "
"Organizer->Task::"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung-gt.rst:84
#, no-wrap
msgid ""
"    AT+SSHT=3\n"
"    OK\n"
"    AT+SSHR=0\n"
"    +SSHR:1,\"10,Test "
"event\",\"10,2010-06-05\",60823,11,25,60823,11,26,0,0,0,0,0,0,0,0,0\n"
"    OK\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung-gt.rst:87
msgid ""
"Please note, that the format of output is different, when you read the "
"specific task::"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung-gt.rst:90
#, no-wrap
msgid ""
"    AT+SSHR=1\n"
"    +SSHR:1,\"10,Test event\",\"12,Some "
"details\",2010,6,3,2010,6,5,1,2010,6,4,10,11,0,2,0\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung-gt.rst:92
msgid "You can similarly add a new task::"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung-gt.rst:96
#, no-wrap
msgid ""
"    AT+SSHW=\"9,New "
"task1\",\"10,0123456789\",2010,06,21,2010,06,30,1,2010,06,27,08,07,0,2,0,0\n"
"    +SSHW:2\n"
"    OK\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung-gt.rst:98
msgid "Read it back::"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung-gt.rst:102
#, no-wrap
msgid ""
"    AT+SSHR=2\n"
"    +SSHR:2,\"9,New "
"task1\",\"10,0123456789\",2010,6,21,2010,6,30,1,2010,6,27,8,7,0,2,0\n"
"    OK\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung-gt.rst:104
msgid "And modify::"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung-gt.rst:111
#, no-wrap
msgid ""
"    AT+SSHW=\"9,New task1\",\"11,New "
"details\",2010,06,21,2010,06,30,1,2010,06,27,08,07,0,2,0,2\n"
"    +SSHW:2\n"
"    OK\n"
"    AT+SSHR=2\n"
"    +SSHR:2,\"9,New task1\",\"11,New "
"details\",2010,6,21,2010,6,30,1,2010,6,27,8,7,0,2,0\n"
"    OK\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung-gt.rst:126
#, no-wrap
msgid ""
"    AT+SSHT=3\n"
"    OK\n"
"    AT+SSHR=0\n"
"    +SSHR:1,\"10,Test\n"
"    "
"event\",\"10,2010-06-05\",60823,11,25,60823,11,26,0,60823,11,26,0,0,0,0,0\n"
"    +SSHR:2,\"9,New "
"task1\",\"10,2010-06-30\",60823,11,25,60823,11,26,0,60823,11,26,0,0,0,0,0\n"
"    OK\n"
"    AT+SSHD=1\n"
"    OK\n"
"    AT+SSHR=0\n"
"    +SSHR:2,\"9,New "
"task1\",\"10,2010-06-30\",60823,11,25,60823,11,26,0,0,0,0,0,0,0,0,0\n"
"    OK\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung-gt.rst:128
#, no-wrap
msgid ""
"Memo Notes\n"
"----------\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung-gt.rst:131
msgid "The memo notes are accessible via ``AT+OMM???`` commands::"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung-gt.rst:134
#, no-wrap
msgid ""
"    AT+OMMI?\n"
"    +OMMI:4,100,100\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung-gt.rst:136
msgid "We found, that we have 4 memos"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung-gt.rst:138
msgid "You can add a note::"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung-gt.rst:142
#, no-wrap
msgid ""
"    AT+OMMW=0,\"This is a note\"\n"
"    +OMMW:6\n"
"    OK\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung-gt.rst:144
msgid "You can read it::"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung-gt.rst:148
#, no-wrap
msgid ""
"    AT+OMMR=6\n"
"    +OMMR:\"This is a note\"\n"
"    OK\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung-gt.rst:150
msgid "You can modify it::"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung-gt.rst:157
#, no-wrap
msgid ""
"    AT+OMMW=6,\"This is a new modified note\"\n"
"    +OMMW:6\n"
"    OK\n"
"    AT+OMMR=6\n"
"    +OMMR:\"This is a new modified note\"\n"
"    OK\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung-gt.rst:167
#, no-wrap
msgid ""
"    AT+OMMR=3\n"
"    +OMMR:\"Note number 3\"\n"
"    OK\n"
"    AT+OMMD=3\n"
"    OK\n"
"    AT+OMMW=3,\"New note number 3\"\n"
"    +CME ERROR:29\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/samsung-gt.rst:168
#, no-wrap
msgid "    ERROR\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia-s40-sms.rst:2
#, no-wrap
msgid ""
"Nokia S40 filesystem SMS format\n"
"===============================\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia-s40-sms.rst:7
msgid ""
"This text is work in progress and does not claim to be correct or "
"accurate. It is solely based on Gammu dumps received from users. Analysed by "
"Michal Cihar <michal@cihar.com>."
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia-s40-sms.rst:9
#, no-wrap
msgid ""
"File structure\n"
"--------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia-s40-sms.rst:19
#, no-wrap
msgid ""
"- 176 bytes header\n"
"    - at offset 7 is length of PDU data\n"
"    - at offset 94 is stored remote number in unicode\n"
"    - rest is not known\n"
"- PDU data (without SMSC)\n"
"    - here can be sometimes also some failure block, which is not known "
"yet\n"
"- structured data header: 0x01 0x00 <LEN>, where <LEN> is length of rest\n"
"- structured blocks:\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia-s40-sms.rst:21
msgid "Block: <TYPE = byte> <LENGTH = word> <DATA ...>"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia-s40-sms.rst:23
#, no-wrap
msgid ""
"Blocks\n"
"------\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia-s40-sms.rst:55
#, no-wrap
msgid ""
"0x01\n"
"  Unknown \\x00 / \\x01 (maybe received / sent)\n"
"0x02\n"
"  SMSC number, ASCII\n"
"0x03\n"
"  Text, unicode\n"
"0x04\n"
"  Sender, unicode\n"
"0x05\n"
"  Recipient, unicode\n"
"0x06\n"
"  Unknown \\x00\\x00\\x00\\x00\n"
"0x07\n"
"  Unknown \\x00\n"
"0x08\n"
"  Unknown \\x02 / \\x00\n"
"0x09\n"
"  Unknown \\x00\\x00\\x00\\x00\n"
"0x0a\n"
"  Unknown \\x00\n"
"0x0b\n"
"  Unknown \\x00\n"
"0x0c\n"
"  Unknown, several values (maybe message reference per number)\n"
"0x0d\n"
"  Unknown \\x00\\x00\n"
"0x0e\n"
"  Unknown \\x00\\x00\n"
"0x0f\n"
"  Unknown \\x00\\x00\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia-s40-sms.rst:71
#, no-wrap
msgid ""
"0x22\n"
"  Unknown \\x00\n"
"0x23\n"
"  Unknown \\x00\\x00\\x00\\x00\n"
"0x24\n"
"  Unknown \\x00\n"
"0x26\n"
"  Unknown \\x00\n"
"0x27\n"
"  Unknown \\x00\n"
"0x2a\n"
"  Unknown \\x00\n"
"0x2b\n"
"  some text (Sender?), unicode\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/nokia-s40-sms.rst:74
#, no-wrap
msgid ""
"To test:\n"
"    - multiple recipients sms\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/sonim.rst:2
#, no-wrap
msgid ""
"Sonim AT Commands\n"
"=================\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/sonim.rst:5
msgid "Filesystem access::"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/sonim.rst:33
#, no-wrap
msgid ""
"    at*list=<path> - list directory content\n"
"                                         (0=file, 1=subdirectory)\n"
"    at*mkdir=<path> - make directory\n"
"    at*rmdir=<path> - remove directory\n"
"    at*remove=<path> - remove file\n"
"    at*move=<srcpath>,<dstpath> - ? copy (move?) files\n"
"    at*startul=<srcpath> - prepare file to upload (from phone)\n"
"                                         returned data:\n"
"                                         *STARTUL: <filesize_in_bytes>\n"
"    at*startdl=<dstpath>,<filesize> - prepare file to download (to phone)\n"
"    at*get - get base64 coded data chunk\n"
"                                         returned data:\n"
"                                         *GET: <chunklen>,<data>\n"
"    at*get - get base64 coded data chunk\n"
"                                         returned data:\n"
"                                         *GET: <chunklen>,<data>\n"
"    at*put=<no>,<len>,<data>,<chck> - put base64 coded data chunk\n"
"                                         (no is chunk number, starting from "
"0)\n"
"                                         (len is chunk length)\n"
"                                         (last 4 characters is checksum ?)\n"
"    at*end - end/finish file transfer operation\n"
"    -------------------\n"
"    at*syph=?,?.?,<path> - ? (add downloaded record to phonebook?)\n"
"                                         at*syph=0,1,%d,%s\n"
"                                         EXAMPLE:\n"
"    AT*SYPH=0,1,74,/app/dir/tmp.dat\n"
"    at*sysm=0,1,%d - ? SMS handling\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/sonim.rst:37
#, no-wrap
msgid ""
"    ---\n"
"    Phone has at least two directories from root, /app and /app3 .\n"
"    at*list=/ gives error.\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:2
#, no-wrap
msgid ""
"Nokia 6510\n"
"==========\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:11
msgid ""
"Assembled by Markus Plail <plail@web.de> Marcin Wiacek <Marcin@MWiacek.com> "
"<tibor.harsszegi@essnet.se> ... and other members of gnokii mailing list and "
"authors of some WWW pages."
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:13
msgid "Heavily based on nk7110.txt."
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:19
msgid ".. note ::"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:26
msgid "Document describing frames used in GSM Nokia 6510 and derivatives (?)"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:29
msgid ""
"Correct format is FBUS version 2/Infrared/MBUS version 2 (see nokia.txt for "
"protocol details)::"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:32
#, no-wrap
msgid ""
"    0x00: Connect to NBS port ?\n"
"        r Set ringtone          {+....,ringtone packed according to SM2.0}\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:90
#, no-wrap
msgid ""
"    0x01 COMMUNICATION\n"
"         switch (message[3]) {\n"
"            case  0x02:\n"
"            dprintf(\"Call established, remote phone is ringing.\\n\");\n"
"            dprintf(\"Call ID: %i\\n\", message[4]);\n"
"            break;\n"
"        case 0x03:\n"
"            dprintf(\"Call complete.\\n\");\n"
"            dprintf(\"Call ID: %i\\n\", message[4]);\n"
"            dprintf(\"Call Mode: %i\\n\", message[5]);\n"
"            dummy = malloc(message[6] + 1);\n"
"            DecodeUnicode(dummy, message + 7, message[6]);\n"
"            dprintf(\"Number: %s\\n\", dummy);\n"
"            break;\t\t\n"
"        case 0x04:\n"
"            dprintf(\"Hangup!\\n\");\n"
"            dprintf(\"Call ID: %i\\n\", message[4]);\n"
"            dprintf(\"Cause Type: %i\\n\", message[5]);\n"
"            dprintf(\"Cause ID: %i\\n\", message[6]);\n"
"            break;\n"
"        case 0x05:\n"
"            dprintf(\"Incoming call:\\n\");\n"
"            dprintf(\"Call ID: %i\\n\", message[4]);\n"
"            dprintf(\"Call Mode: %i\\n\", message[5]);\n"
"            dummy = malloc(message[6] + 1);\n"
"            DecodeUnicode(dummy, message + 7, message[6]);\n"
"            dprintf(\"From: %s\\n\", dummy);\n"
"            break;\n"
"        case 0x07:\n"
"            dprintf(\"Call answer initiated.\\n\");\n"
"            dprintf(\"Call ID: %i\\n\", message[4]);\n"
"            break;\n"
"        case 0x09:\n"
"            dprintf(\"Call released.\\n\");\n"
"            dprintf(\"Call ID: %i\\n\", message[4]);\n"
"            break;\n"
"        case 0x0a:\n"
"            dprintf(\"Call is being released.\\n\");\n"
"            dprintf(\"Call ID: %i\\n\", message[4]);\n"
"            break;\n"
"        case 0x0b:\n"
"            /* No idea what this is about! */\n"
"            break;\n"
"        case 0x0c:\n"
"            if (message[4] == 0x01)\n"
"                dprintf(\"Audio enabled\\n\");\n"
"            else\n"
"                dprintf(\"Audio disabled\\n\");\n"
"            break;\n"
"        case 0x53:\n"
"            dprintf(\"Outgoing call:\\n\");\n"
"            dprintf(\"Call ID: %i\\n\", message[4]);\n"
"            dprintf(\"Call Mode: %i\\n\", message[5]);\n"
"            dummy = malloc(message[6] + 1);\n"
"            DecodeUnicode(dummy, message + 7, message[6]);\n"
"            dprintf(\"To: %s\\n\", dummy);\n"
"            break;\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:98
#, no-wrap
msgid ""
"    0x02: SMS HANDLING\n"
"        s Send SMS              { 0x02, 0x00, 0x00, 0x00, 0x55, 0x55,\n"
"                                  0x01 (1 big block), 0x02 (submit), length "
"(big block),\n"
"                      type, reference, PID, DCS, 0x00, # blocks,\n"
"                      blocks... }\n"
"        r Send SMS              { 0x03, 0x00, 0x01, 0x0c, 0x08, 0x00, 0x00, "
"0xdb, 0x55, 0x55, 0x00 }\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:103
#, no-wrap
msgid ""
"        s Get SMSC              { 0x14, 0x01, 0x00 }\n"
"        r Get SMSC              { 0x15, format,  0x01, 0x0b, 0x28, # of "
"SMSC, 0xf8, 0x00, validity, 0x55 \n"
"                                  #blocks,\n"
"                                  blocks ...}\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:105
#, no-wrap
msgid "    0x03: PHONEBOOK HANDLING\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:110
#, no-wrap
msgid ""
"        s Get memory status     { 0x03, 0x01, memory type, 0x55, 0x55, 0x55, "
"0x00}\n"
"                                where: memory type - see 0x03/0x07\n"
"        r Get memory status     { 0x04, 0x00, location, 0x00[7], 0x01, 0x10, "
"0x00, 0x00, 0x0c,\n"
"                                        total_low, total_high, used_low, "
"used_high, 0x01, 0x00, 0x00}\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:113
#, no-wrap
msgid ""
"        s Read memory           { 0x07, 0x01, 0x01, 0x00, 0x01, 0x02, memory "
"type,\n"
"                            0x00, 0x00, 0x00, 0x00, location_low, "
"location_high, 0x00, 0x00};\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:125
#, no-wrap
msgid ""
"                                where MT: memory type\n"
"                                         0x01: (256) Dialled numbers\n"
"                                         0x02: (512) Missed calls\n"
"                                         0x03: (768) Received calls\n"
"                                         0x05: (500) telephone phonebook\n"
"                                         0x06: (160) SIM phonebook\n"
"                                         0x07: (10/0)\n"
"                                         0x08: (1/0)\n"
"                                         0x09: (4) voice mailbox\n"
"                                         0x0e: (10) speed dials\n"
"                                         0x10: (5) caller groups\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:128
#, no-wrap
msgid ""
"        r Read memory           { 0x08, 0x00, 0x01,\n"
"                                        code, 0x00, 0x00, z, xH, xL, yH, yL, "
"0x00[7], no.of blocks, { block } * }\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:150
#, no-wrap
msgid ""
"                                where if code==0x0f && xH==0x34 - phonebook "
"location not found\n"
"                                  y: location\n"
"                                  z: generic block size\n"
"                                  block: {id, 0, 0, blocksize, block no.,\n"
"                                          {contents}, 0x00}\n"
"                                    id: 0x04 pointer to another memory "
"location { 0xff?, yH, yL, xL,0x00[3] }\n"
"                                        0x07 name {len, (unicode)},\n"
"                                        0x08 email\n"
"                                        0x09 postal\n"
"                                        0x0a note {len, (unicode)}\n"
"                                        0x0b number {type, 0x00[3], len, "
"(unicode)}\n"
"                                        0x0c ringtone {ringtone no., 0, 0}\n"
"                        0x13 date for a called list (DC, RC, etc.)\n"
"                                        0x1b caller group graphic {width, "
"height, 0, 0 {bitmap}}\n"
"                                        0x1c caller group graphic on? {(1: "
"yes, 0: no), 0, 0}\n"
"                                        0x1e caller group number {number, 0, "
"0}\n"
"                                       type: 0x0a: General,\n"
"                                             0x03: Mobile (office ?),\n"
"                                             0x06: Work,\n"
"                                             0x04: Fax,\n"
"                                             0x02: Home (mobile ?)\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:158
#, no-wrap
msgid ""
"        s Set mem location      { 0x0b, 0x00, 0x01, 0x01, 0x00, 0x00, z,\n"
"                                          0x02, memory type, yH, yL, "
"0x00[7],\n"
"                                          no.of blocks, { block }[no.of "
"blocks] }\n"
"        r Set mem location      { 0x0c, 0?, 1?, code, 0?, 0?, z?, 0?, 0?,\n"
"                                          yH, yL, xL }\n"
"                                where code:\n"
"                                        0x3d - wrong entry type\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:160
#, no-wrap
msgid "    0x08: SECURITY\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:172
#, no-wrap
msgid ""
"        s Get status            { 0x11, 0x00 }\n"
"        r Get status            { 0x12, status, }\n"
"                                where status:\n"
"                                0x01: waiting for Security Code\n"
"                                0x07:\n"
"                                0x02: waiting for PIN\n"
"                                0x03: waiting for PUK\n"
"                                0x05: PIN ok, SIM ok\n"
"                                0x06: No input status\n"
"                                0x16: No SIM\n"
"                                0x1A: SIM rejected!\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:179
#, no-wrap
msgid ""
"        s Enter PIN             { 0x07, 0x02, code, 0x00}\n"
"        r Enter PIN             { return code, reason }\n"
"                                where:\n"
"                                return code: 0x08 = success\n"
"                                             0x09 = failure\n"
"                                reason: 0x06 = PIN wrong\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:181
#, no-wrap
msgid "    0x0a: NETSTATUS\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:186
#, no-wrap
msgid ""
"        s Get Info              { 0x00, 0x00 }\n"
"        r Get Info              { 0x01, 0x00, # blocks, \n"
"                                  0x00, length, 0x00, 0x02, status, length, "
"operator name (unicode),\n"
"                                  0x09, length, LAC, LAC, 0x00, 0x00, "
"CellID, CellID, NetworkCode (3 octets), ... }\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:189
#, no-wrap
msgid ""
"        s Get RF Level          { 0x0b, 0x00, 0x02, 0x00, 0x00, 0x00 }\n"
"        r GET RF Level          { 0x0c, 0x00, 0x01, 0x04, 0x04, level, 0x5f "
"}\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:194
#, no-wrap
msgid ""
"        s Get operator logo     { 0x23, 0x00, 0x00, 0x55, 0x55, 0x55 }\n"
"        r Get operator logo     { 0x24, 0x00, 0x01, 0x00, 0x00, 0x00, \n"
"                                  0x02, 0x0c, 0x08, netcode (3 octets), "
"0x02, 0x00, 0x00, \n"
"                      0x1a, size, width, height, logo size (2 octets), logo "
"size (2 octets), logo }\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:196
#, no-wrap
msgid "    0x10: SUBSCRIBE\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:198
#, no-wrap
msgid "        s Subscribe Channel     { 0x10, # channels, message types... }\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:200
#, no-wrap
msgid "    0x13 CALENDAR\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:203
#, no-wrap
msgid ""
"        s Add meeting note      { 0x01, body like in subtype 0x1a...}\n"
"        r Add meeting note      { 0x02, location (2 bytes), status (2 "
"bytes)}\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:206
#, no-wrap
msgid ""
"        s Add call note         { 0x03, body like in subtype 0x1a...}\n"
"        r Add call note         { 0x04, location (2 bytes), status (2 "
"bytes)}\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:209
#, no-wrap
msgid ""
"        s Add birthday note     { 0x05, body like in subtype 0x1a...}\n"
"        r Add birthday note     { 0x06, location (2 bytes), status (2 "
"bytes)}\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:212
#, no-wrap
msgid ""
"        s Add reminder note     { 0x07, body like in subtype 0x1a...}\n"
"        r Add reminder note     { 0x08, location (2 bytes), status (2 "
"bytes)}\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:215
#, no-wrap
msgid ""
"        s Delete calendar note  { 0x0b, location (2 bytes) }\n"
"        r Delete calendar note  { 0x0c, location (2 bytes), ?, ?, ?, ? }\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:243
#, no-wrap
msgid ""
"        s Get calendar note     { 0x19, location (2 bytes) }\n"
"        r Calendar note recvd   { 0x1a, location (2 bytes), entry type, "
"0x00, year (2 bytes), Month, Day, block}\n"
"                                where: entry type - 0x01 - Meeting, 0x02 - "
"Call, 0x04 - Birthday, 0x08 - Reminder\n"
"                                       block: for Meeting:{hour,minute,alarm "
"(two bytes),recurrence (two bytes),len,0x00,string(unicode)}\n"
"                                              where alarm=Number of minutes "
"before the time of the meeting\n"
"                                                      that the alarm should "
"be triggered:\n"
"                                                      For meetings with \"No "
"alarm\"=0xFFFF (-1).\n"
"                                                      For \"On "
"time\"=0x0000\n"
"                                                      half an hour=0x001E, "
"and so on.\n"
"                                                    Recurrance=in hours, "
"between future occurances of this meeting.\n"
"                                                      If there is no repeat, "
"this value is 0x0000. The special value 0xffff \n"
"                                                      means 1 Year!\n"
"                                              for Call:{Hour,Minute,Alarm "
"(as above),Recurrance (as above),namelen,numberlen,\n"
"                                                        "
"name(unicode),number(unicode)}\n"
"                                              for Reminder:{Recurrance (as "
"above),len,0x00,string(unicode)}\n"
"                                              for "
"Birthday:{byte1,byte2,alarm(4 "
"bytes),yearofbirth,alarmtype,len,string(unicode)}\n"
"                                                        byte1 and byte2 may "
"vary (???). Usually are 0x00 both (but not always)\n"
"                                                        In Birthday, the "
"Year in the common part, usually contains a strange year.\n"
"                                                        So, don't consider "
"it as Year of note, neither year of BirthDay (for Year of\n"
"                                                        Birthday use the "
"value described below).\n"
"                                              where alarm=32-bit integer "
"that is the number of seconds between the desired\n"
"                                                      alarm time and "
"11:59:58pm on the birthday.For \"No Alarm\", the value is\n"
"                                                      0x0000FFFF (65535).\n"
"                                                    YearOfBirth=used instead "
"of the one in the common part of the entry (see above)\n"
"                                                      but only when reading "
"birthday entries. For storing entries, this field does\n"
"                                                      not exist.\n"
"                                                    AlarmType: 0x00 - Tone, "
"0x01 - Silent\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:250
#, no-wrap
msgid ""
"    ?   s???                    { 0x0021 }\n"
"    ?   r???                    { 0x0022, 0x5A, 0x00 }\n"
"    ?   s???                    { 0x0025 }\n"
"    ?   r???                    { 0x0026, 0x04, 0x00 }\n"
"    ?   s                       { 0x0029 }\n"
"    ?   r                       { 0x002A, 0x04, 0x00 }\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:253
#, no-wrap
msgid ""
"        s Get first free pos    { 0x0031 }\n"
"        r Get first free pos    { 0x0032, location (2bytes) }\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:256
#, no-wrap
msgid ""
"        s Get notes info        { 0x003a, 0xFF, 0xFE}\n"
"        r Get notes info        { 0x003b, how many notes used (2 bytes), "
"0x01, 0x07, { two bytes with location for each note} *}\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:261
#, no-wrap
msgid ""
"        s Get first free pos    { 0x0031 }\n"
"        r Get first free pos    { 0x0032, location (2bytes) }\n"
"        s Get notes info        { 0x003a, 0xFF, 0xFE}\n"
"        r Get notes info        { 0x003b, how many notes used (2 bytes), "
"0x01, 0x07, { two bytes with location for each note} *}\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:264
#, no-wrap
msgid ""
"    ?   s Get calendar note??   { 0x003E, location (2 bytes) }\n"
"    ?   r Get calendar note??   { 0x003F, location (2bytes), ... }\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:266
#, no-wrap
msgid "    0x14: FOLDER/PICTURE SMS HANDLING\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:273
#, no-wrap
msgid ""
"        s Get SMS Status        { 0x08, 0x00, 0x01 }\n"
"        r Get SMS Status        { 0x09, 0x00, #blocks, \n"
"                                  type, length, blocknumber,\n"
"                                  a (2 octets), b (2 octets), c (2 octets), "
"0x00, 0x55 ,\n"
"                                  type, length, blocknumber, \n"
"                                  d (2 octets), e (2 octets), f (2 octets), "
"0x01, 0x55 }\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:287
#, no-wrap
msgid ""
"                                  where:\n"
"                                  a - max. number of messages in phone "
"memory\n"
"                                  b - Number of used messages in phone "
"memory. These\n"
"                                    are messages manually moved from the "
"other folders.\n"
"                                    Picture messages are saved here.\n"
"                                  c - Number of unread messages in phone "
"memory. Probably\n"
"                                    only smart messages.\n"
"                                  d - max. number of messages on SIM\n"
"                                  e - Number of used messages in SIM "
"memory. These are\n"
"                                    either received messages or saved into "
"Outbox/Inbox.\n"
"                                    Note that you *can't* save message into "
"this memory\n"
"                                    using 'Move' option. Picture messages "
"are not here.\n"
"                                  f - Number of unread messages in SIM "
"memory\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:299
#, no-wrap
msgid ""
"        s Get SMS from folder   { 0x02, memory, folderID, location, "
"location, 0x01, 0x00}\n"
"                                where: \n"
"                    memory - 0x01 for SIM, 0x02 for phone (SIM only for "
"IN/OUTBOX\n"
"                                folderID - see 0x14/0x017B\n"
"        r Get SMS from folder   { 0x03, 0x00, 0x01, memory, folderID, "
"locationH, locationL, 0x55, 0x55, 0x55,  \n"
"                                  0x01 (on big block), type, length of big "
"block, \n"
"                      [date/time1], [date/time2], # blocks,\n"
"                      type, length, data...\n"
"                      ... }\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:302
#, no-wrap
msgid ""
"        s Delete SMS            { 0x04, memory, folderID, location, "
"location, 0x0F, 0x55 }\n"
"        r Delete SMS            { 0x05 }\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:307
#, no-wrap
msgid ""
"        s Get folder status     { 0x0c, memory, folderID, 0x0F, 0x55, 0x55, "
"0x55, 0x55}\n"
"                                where: folderID - see 0x14/0x017B\n"
"        r Get folder status     { 0x0d, 0x00, length, number of entries (2 "
"bytes), \n"
"                    entry1number (2 bytes), entry2number(2 bytes), ..., "
"0x55[]}\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:310
#, no-wrap
msgid ""
"        s Get message info      { 0x0e, memory, folderID, location, "
"location, 0x55, 0x55 }\n"
"        r Get message info      { 0x0f, 0x00, 0x01, 0x00, 0x50, memory, "
"type, 0x00, location, FolderID, status\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:319
#, no-wrap
msgid ""
"                                where: type = 0x00 - MT\n"
"                                              0x01 - delivery report\n"
"                                              0x02 - MO\n"
"                                              0x80 - picture message\n"
"                                where: status=0x01 - reveived/read\n"
"                          0x03 - received/unread\n"
"                          0x05 - stored/sent\n"
"                          0x07 - stored/not sent\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:331
#, no-wrap
msgid ""
"        s Get folder names      { 0x12, 0x00, 0x00}\n"
"        r Get folder names      { 0x13, 0x00, number of strings, 0x01, 0x28, "
"folderID, length, 0x00, name1, 0x00, \n"
"                    0x55[40-length(name1)], 01 28, folderID, length, 0x00, "
"name2, 0x00, 0x55[dito] ... }\n"
"                                   where: folderID = 0x02 - Inbox\n"
"                                                     0x03 - Outbox\n"
"                                                     0x04 - Archive\n"
"                                                0x05 - Templates\n"
"                                                0x06 - first \"My "
"folders\"\n"
"                                                0x07 - second \"My "
"folders\"\n"
"                                                0x08 - third -\"-\n"
"                                                and so on\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:337
#, no-wrap
msgid ""
"    0x15:\n"
"        s ???                   {+0x00, 0x06, 0x00, 0x01, 0x01, 0x00 }\n"
"        r ???                   {+0x06, ',',  0x00, 'd',  0x00, 0x00 }\n"
"        s ???                   {+0x00, 0x06, 0x00, 0x02, 0x00, 0x00 }\n"
"        r ???                   {+0x06, '.',  0x00, 'e',  ?, ? }\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:339
#, no-wrap
msgid "    0x17: BATTERY\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:343
#, no-wrap
msgid ""
"        s Get battery level     { 0x0a, 0x02, 0x00 }\n"
"        r Get battery level     { 0x0b, 0x01, 0x01, 0x16, level, 0x07, 0x05 "
"}\n"
"                                where: level: 1-7 (as in phone display)\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:345
#, no-wrap
msgid "    0x19: CLOCK\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:348
#, no-wrap
msgid ""
"        s Get ????              {0x01,...}\n"
"        r Get ????              {0x02,...}\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:353
#, no-wrap
msgid ""
"        s Get date              { 0x0a, 0x00, 0x00 }\n"
"        r Get date              { 0x0b, 0x00, 0x02 (blocks), \n"
"                                  0x01 (type), 0x0c (length), 0x01, 0x03, "
"year (2 octets), month, day, hour, minute, second, 0x00, \n"
"                                  0x04, 0x04, 0x01, 0x00 }\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:358
#, no-wrap
msgid ""
"        s Get ????              {0x0c, 0x00, 0x00}\n"
"        r Get ????              {0x0d..}\n"
"        s Get ????              {0x11,...}\n"
"        r Get ????              {0x12,...}\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:360
#, no-wrap
msgid "    0x1b: IDENTIFY\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:367
#, no-wrap
msgid ""
"        s Get IMEI              {+0x00, 0x01, 0x01, 0x00, 'A', 0x00, 0x00, "
"0x00 }\n"
"        r Get IMEI              {                   0x01, 0x00, 0x01, 'A', "
"0x14, 0x00, 0x10, {IMEI(ASCII)}, 0x00 }\n"
"        s Get IMEI              {+0x00, 0x03, 0x01, 0x00, 'A', 0x00, 0x00, "
"0x00 }\n"
"        r Get IMEI              {                   0x01, 0x00, 0x01, 'A', "
"0x14, 0x00, 0x10, {IMEI(ASCII)}, 0x00 }\n"
"        s Get ???               {+0x00, 0x03, 0x00, 0x00, 'D',  0x00, 0x00, "
"0x00 }\n"
"        r Get ???               {                   0x01, 0x02, 0x00 }\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:370
#, no-wrap
msgid ""
"        s Get HW version        {+0x00, 0x03, 0x02, 0x07, 0x00, 0x02 }\n"
"        r Get HW version        {                   0x08, 0x00, 0x01, 'I', "
"0x0c, 0x00, 0x05, HW(4 bytes), 0x00, 0x00, 0x00, 0x00 }\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:374
#, no-wrap
msgid ""
"        s get HW&SW version     { 0x07, 0x00, 0x01 }\n"
"        r get HW&SW version     { 0x08, 0x00, 0x01, 0x58, 0x29, 0x00, 0x22, "
"\"V \" \"firmware\\n\" \"firmware date\\n\"\n"
"                                  \"model\\n\" \"(c) NMP.\", 0x0a, 0x43, "
"0x00, 0x00, 0x00 }\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:381
#, no-wrap
msgid ""
"        s Get product code      {+0x00, 0x03, 0x04, 0x0b, 0x00, 0x02 }\n"
"        r Get product code      {                   0x0c, 0x00, 0x01, 'N', "
"0x0c, 0x00, 0x08, code(7 bytes), 0x00 }\n"
"        s ???                   {+00 |03 |05 |0b |00 |20}\n"
"        r ???                   {+03 |2b+|05 |0c |00 |01 |52R|0c |00 |08 |00 "
"|00 |00 |00 |00 |00 | 00 |00} \n"
"        s Get ???               {+00 |03 |06 |0b |00 |01}\n"
"        r Get ???               {+03 |2b+|06 |0c |00 |01 |4dM|10 |00 |0a "
"|53S|54T|41A|344|355|399|311|355|377|00 |00 |00}\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:463
#, no-wrap
msgid ""
"    Sending frame 0x1b / 0x0006\n"
"    00 |03 |07 |0b |00 |ff                                         .....           "
"\n"
"    Received frame 0x1b / 0x0072\n"
"    03 |2b+|07 |0c |00 |08 |4dM|10 |00 |0a |53S|54T|41A|344|355|39 "
".+....M...STA459\n"
"    311|355|377|00 |00 |00 |4eN|0c |00 |08 |300|355|300|377|355|32 "
"157...N...050752\n"
"    300|00 |50P|0c |00 |08 |00 |00 |00 |00 |00 |00 |00 |00 |4fO|0c "
"0.P...........O.\n"
"    00 |08 |300|355|300|333|366|366|366|00 |51Q|0c |00 |06 |00 |00 "
"..0503666.Q.....\n"
"    00 |00 |00 |00 |00 |00 |52R|0c |00 |08 |00 |00 |00 |00 |00 |00 "
"......R.........\n"
"    00 |00 |53S|0c |00 |5b[|00 |00 |00 |0d |00 |00 |00 |00 |59Y|14 "
"..S..[........Y.\n"
"    00 |10 |00 |00 |00 |00 |00 |00 |00 |00 |00 |00 |00 |00 |00 |00 "
"................\n"
"    00 |00                                                         ..              "
"\n"
"    Sending frame 0x1b / 0x0006\n"
"    00 |03 |08 |07 |01 |ff                                         .....           "
"\n"
"    Received frame 0x1b / 0x00ae\n"
"    03 |2b+|08 |08 |00 |09 |48H|28(|00 |20 |56V|20 |300|344|2e.|30 "
".+....H(. V 04.0\n"
"    344|0a |322|399|2d-|311|300|2d-|300|311|0a |4eN|48H|4dM|2d-|37 "
"4.29-10-01.NHM-7\n"
"    0a |28(|63c|29)|20 |4eN|4dM|50P|2e.|00 |00 |00 |00 |00 |49I|0c .(c) "
"NMP......I.\n"
"    00 |05 |300|388|300|322|00 |00 |00 |00 |4aJ|0c |00 |05 |00 |00 "
"..0802....J.....\n"
"    00 |00 |00 |00 |00 |00 |4bK|08 |00 |03 |333|366|00 |00 |4cL|0c "
"......K...36..L.\n"
"    00 |04 |322|388|388|00 |00 |00 |00 |00 |54T|0c |00 |05 |300|31 "
"..288.....T...01\n"
"    300|355|00 |00 |00 |00 |55U|10 |00 |0a |47G|344|2e.|300|2d-|34 "
"05....U...G4.0-4\n"
"    2e.|311|322|00 |00 |00 |57W|10 |00 |08 |53S|45E|49I|4bK|4fO|20 "
".12...W...SEIKO \n"
"    300|00 |00 |00 |00 |00 |58X|29)|00 |22\"|56V|20 |300|344|2e.|30 "
"0.....X).\"V 04.0\n"
"    344|0a |322|399|2d-|311|300|2d-|300|311|0a |4eN|48H|4dM|2d-|37 "
"4.29-10-01.NHM-7\n"
"    0a |28(|63c|29)|20 |4eN|4dM|50P|2e.|0a |44D|00 |00 |00         .(c) "
"NMP..D...  \n"
"    Sending frame 0x1b / 0x0008\n"
"    00 |03 |09 |00 |41A|00 |00 |00                                 ....A...        "
"\n"
"    Received frame 0x1b / 0x001a\n"
"    03 |2b+|09 |01 |00 |01 |41A|14 |00 |10 |333|355|300|377|300|30 "
".+....A...350700\n"
"    311|300|355|388|300|311|333|300|333|00                         "
"105801303.      \n"
"    Sending frame 0x1b / 0x0008\n"
"    00 |03 |0a |00 |42B|00 |00 |00                                 ....B...        "
"\n"
"    Received frame 0x1b / 0x0012\n"
"    03 |2b+|0a |01 |00 |01 |42B|0c |00 |08 |3a:|05 |07 |10 |50P|08 "
".+....B...:...P.\n"
"    311|00                                                         1.              "
"\n"
"    Sending frame 0x1b / 0x0008\n"
"    00 |03 |0b |00 |43C|00 |00 |00                                 ....C...        "
"\n"
"    Received frame 0x1b / 0x0016\n"
"    03 |2b+|0b |01 |00 |01 |43C|10 |00 |09 |333|05 |07 |10 |50P|08 "
".+....C...3...P.\n"
"    311|00 |f6÷|00 |00 |00                                         1.÷...          "
"\n"
"    Sending frame 0x1b / 0x0008\n"
"    00 |03 |0c |00 |44D|00 |00 |00                                 ....D...        "
"\n"
"    Received frame 0x1b / 0x0006\n"
"    03 |2b+|0c |01 |02 |00                                         .+....          "
"\n"
"    Sending frame 0x1b / 0x0008\n"
"    00 |03 |0d |00 |45E|00 |00 |00                                 ....E...        "
"\n"
"    Received frame 0x1b / 0x0006\n"
"    03 |2b+|0d |01 |02 |00                                         .+....          "
"\n"
"    Sending frame 0x1b / 0x0008\n"
"    00 |03 |0e |00 |46F|00 |00 |00                                 ....F...        "
"\n"
"    Received frame 0x1b / 0x0012\n"
"    03 |2b+|0e |01 |00 |01 |46F|0c |00 |08 |4eN|54T|54T|4aJ|50P|12 "
".+....F...NTTJP.\n"
"    344|56V                                                        4V              "
"\n"
"    Sending frame 0x1b / 0x0008\n"
"    00 |03 |0f |00 |56V|00 |00 |00                                 ....V...        "
"\n"
"    Received frame 0x1b / 0x0006\n"
"    03 |2b+|0f |01 |02 |00                                         .+....          "
"\n"
"    Sending frame 0x1b / 0x0008\n"
"    00 |03 |10 |00 |5aZ|00 |00 |00                                 ....Z...        "
"\n"
"    Received frame 0x1b / 0x0006\n"
"    03 |2b+|10 |01 |02 |00                                         .+....          "
"\n"
"    Sending frame 0x1b / 0x0006\n"
"    00 |03 |11 |0b |00 |02                                         ......          "
"\n"
"    Received frame 0x1b / 0x0012\n"
"    03 |2b+|11 |0c |00 |01 |4eN|0c |00 |08 |300|355|300|377|355|32 "
".+....N...050752\n"
"    300|00                                                         0.              "
"\n"
"    Sending frame 0x1b / 0x0006\n"
"    00 |03 |12 |0b |00 |20                                         .....           "
"\n"
"    Received frame 0x1b / 0x0012\n"
"    03 |2b+|12 |0c |00 |01 |52R|0c |00 |08 |00 |00 |00 |00 |00 |00 "
".+....R.........\n"
"    00 |00                                                         ..              "
"\n"
"    Sending frame 0x1b / 0x0006\n"
"    00 |03 |13 |0b |00 |01                                         ......          "
"\n"
"    Received frame 0x1b / 0x0016\n"
"    03 |2b+|13 |0c |00 |01 |4dM|10 |00 |0a |53S|54T|41A|344|355|39 "
".+....M...STA459\n"
"    311|355|377|00 |00 |00                                         157...          "
"\n"
"    Sending frame 0x1b / 0x0006\n"
"    00 |03 |14 |07 |00 |02                                         ......          "
"\n"
"    Received frame 0x1b / 0x0012\n"
"    03 |2b+|14 |08 |00 |01 |49I|0c |00 |05 |300|388|300|322|00 |00 "
".+....I...0802..\n"
"    00 |00                                                         ..              "
"\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:466
#, no-wrap
msgid ""
"        s Get IMEI              { 0x00, 0x41 }\n"
"        r Get IMEI              { 0x01, 0x00, 0x01, 0x41, 0x14, 0x00, 0x10, "
"{IMEI(ASCII)}, 0x00 }\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:519
#, no-wrap
msgid ""
"    Sending frame 0x1b / 0x0008\n"
"    00 |03 |16 |00 |44D|00 |00 |00                                 ....D...        "
"\n"
"    Received frame 0x1b / 0x0006\n"
"    03 |2b+|16 |01 |02 |00                                         .+....          "
"\n"
"    Sending frame 0x1b / 0x0006\n"
"    00 |03 |17 |07 |00 |01                                         ......          "
"\n"
"    Received frame 0x1b / 0x002e\n"
"    03 |2b+|17 |08 |00 |01 |48H|28(|00 |20 |56V|20 |300|344|2e.|30 "
".+....H(. V 04.0\n"
"    344|0a |322|399|2d-|311|300|2d-|300|311|0a |4eN|48H|4dM|2d-|37 "
"4.29-10-01.NHM-7\n"
"    0a |28(|63c|29)|20 |4eN|4dM|50P|2e.|00 |00 |00 |00 |00         .(c) "
"NMP......  \n"
"    Sending frame 0x1b / 0x0006\n"
"    00 |03 |18 |07 |00 |01                                         ......          "
"\n"
"    Received frame 0x1b / 0x002e\n"
"    03 |2b+|18 |08 |00 |01 |48H|28(|00 |20 |56V|20 |300|344|2e.|30 "
".+....H(. V 04.0\n"
"    344|0a |322|399|2d-|311|300|2d-|300|311|0a |4eN|48H|4dM|2d-|37 "
"4.29-10-01.NHM-7\n"
"    0a |28(|63c|29)|20 |4eN|4dM|50P|2e.|00 |00 |00 |00 |00         .(c) "
"NMP......  \n"
"    Sending frame 0x1b / 0x0006\n"
"    00 |03 |19 |07 |00 |01                                         ......          "
"\n"
"    Received frame 0x1b / 0x002e\n"
"    03 |2b+|19 |08 |00 |01 |48H|28(|00 |20 |56V|20 |300|344|2e.|30 "
".+....H(. V 04.0\n"
"    344|0a |322|399|2d-|311|300|2d-|300|311|0a |4eN|48H|4dM|2d-|37 "
"4.29-10-01.NHM-7\n"
"    0a |28(|63c|29)|20 |4eN|4dM|50P|2e.|00 |00 |00 |00 |00         .(c) "
"NMP......  \n"
"    Sending frame 0x1b / 0x0006\n"
"    00 |03 |1a |07 |00 |01                                         ......          "
"\n"
"    Received frame 0x1b / 0x002e\n"
"    03 |2b+|1a |08 |00 |01 |48H|28(|00 |20 |56V|20 |300|344|2e.|30 "
".+....H(. V 04.0\n"
"    344|0a |322|399|2d-|311|300|2d-|300|311|0a |4eN|48H|4dM|2d-|37 "
"4.29-10-01.NHM-7\n"
"    0a |28(|63c|29)|20 |4eN|4dM|50P|2e.|00 |00 |00 |00 |00         .(c) "
"NMP......  \n"
"    Sending frame 0x1b / 0x0006\n"
"    00 |03 |1b |07 |00 |01                                         ......          "
"\n"
"    Received frame 0x1b / 0x002e\n"
"    03 |2b+|1b |08 |00 |01 |48H|28(|00 |20 |56V|20 |300|344|2e.|30 "
".+....H(. V 04.0\n"
"    344|0a |322|399|2d-|311|300|2d-|300|311|0a |4eN|48H|4dM|2d-|37 "
"4.29-10-01.NHM-7\n"
"    0a |28(|63c|29)|20 |4eN|4dM|50P|2e.|00 |00 |00 |00 |00         .(c) "
"NMP......  \n"
"    Sending frame 0x1b / 0x0006\n"
"    00 |03 |1c |07 |00 |01                                         ......          "
"\n"
"    Received frame 0x1b / 0x002e\n"
"    03 |2b+|1c |08 |00 |01 |48H|28(|00 |20 |56V|20 |300|344|2e.|30 "
".+....H(. V 04.0\n"
"    344|0a |322|399|2d-|311|300|2d-|300|311|0a |4eN|48H|4dM|2d-|37 "
"4.29-10-01.NHM-7\n"
"    0a |28(|63c|29)|20 |4eN|4dM|50P|2e.|00 |00 |00 |00 |00         .(c) "
"NMP......  \n"
"    Sending frame 0x1b / 0x0006\n"
"    00 |03 |1d |07 |00 |01                                         ......          "
"\n"
"    Received frame 0x1b / 0x002e\n"
"    03 |2b+|1d |08 |00 |01 |48H|28(|00 |20 |56V|20 |300|344|2e.|30 "
".+....H(. V 04.0\n"
"    344|0a |322|399|2d-|311|300|2d-|300|311|0a |4eN|48H|4dM|2d-|37 "
"4.29-10-01.NHM-7\n"
"    0a |28(|63c|29)|20 |4eN|4dM|50P|2e.|00 |00 |00 |00 |00         .(c) "
"NMP......  \n"
"    Sending frame 0x1b / 0x0006\n"
"    00 |03 |1e |07 |00 |01                                         ......          "
"\n"
"    Received frame 0x1b / 0x002e\n"
"    03 |2b+|1e |08 |00 |01 |48H|28(|00 |20 |56V|20 |300|344|2e.|30 "
".+....H(. V 04.0\n"
"    344|0a |322|399|2d-|311|300|2d-|300|311|0a |4eN|48H|4dM|2d-|37 "
"4.29-10-01.NHM-7\n"
"    0a |28(|63c|29)|20 |4eN|4dM|50P|2e.|00 |00 |00 |00 |00         .(c) "
"NMP......  \n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:521
#, no-wrap
msgid "    0x1f: RINGTONE\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:525
#, no-wrap
msgid ""
"        s Get Ringtones         { 0x07, 0x00, 0x00, 0xFE, 0x00, 0x7D }\n"
"        r Get Ringtones         { 0x08, 0x00, 0x23, 0x00, # ringtones, 0x00, "
"\n"
"                                  ringtone number, 0x01, 0x01, 0x00, name "
"length (chars), name (unicode)... }\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:533
#, no-wrap
msgid ""
"    0x2b:\n"
"        s Get IMEI              { 0x00, 0x41 }\n"
"        r Get IMEI              { 0x01, 0x00, 0x01, 0x41, 0x14, 0x00, 0x10, "
"{IMEI(ASCII)}, 0x00 }\n"
"        s get HW&SW version     { 0x07, 0x00, 0x01 }\n"
"        r get HW&SW version     { 0x08, 0x00, 0x01, 0x58, 0x29, 0x00, 0x22, "
"\"V \" \"firmware\\n\" \"firmware date\\n\"\n"
"                                  \"model\\n\" \"(c) NMP.\", 0x0a, 0x43, "
"0x00, 0x00, 0x00 }\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:721
#, no-wrap
msgid ""
"    0x38:\n"
"        s ???                   {+00 |02 |00 |0a |00 |01 |00, location, "
"00}\n"
"                                where location: 0, 1, 2, 3\n"
"        r ???                   {+02 |1d |00 |0b |00 |01 |00, location, 08 "
"|00 |00 |00 |00 |00}\n"
"        s ???\n"
"          00 |02 |00 |0a |00 |60`|00 |10 |00 |11 |00 |12 |00 |13 |00 |14 "
".....`..........\n"
"          00 |15 |00 |16 |00 |17 |00 |18 |00 |19 |00 |1a |00 |1b |00 |1c "
"................\n"
"          00 |1d |00 |1e |00 |1f |00 |20 |00 |21!|00 |22\"|00 |23#|00 |24 "
"....... .!.\".#.$\n"
"          00 |25%|00 |26&|00 |27'|00 |28(|00 |29)|00 |2a*|00 |2b+|00 |2c "
".%.&.'.(.).*.+.,\n"
"          00 |2d-|00 |2e.|00 |2f/|00 |300|00 |311|00 |322|00 |333|00 |34 "
".-.../.0.1.2.3.4\n"
"          00 |355|00 |366|00 |377|00 |388|00 |399|00 |3a:|00 |3b;|00 |3c "
".5.6.7.8.9.:.;.<\n"
"          00 |3d=|00 |3e>|00 |3f?|00 |40@|00 |41A|00 |42B|00 |43C|00 |44 "
".=.>.?.@.A.B.C.D\n"
"          00 |45E|00 |46F|00 |47G|00 |48H|00 |49I|00 |4aJ|00 |4bK|00 |4c "
".E.F.G.H.I.J.K.L\n"
"          00 |4dM|00 |4eN|00 |4fO|00 |50P|00 |51Q|00 |52R|00 |53S|00 |54 "
".M.N.O.P.Q.R.S.T\n"
"          00 |55U|00 |56V|00 |57W|00 |58X|00 |59Y|00 |5aZ|00 |5b[|00 |5c "
".U.V.W.X.Y.Z.[.\\\n"
"          00 |5d]|00 |5e^|00 |5f_|00 |60`|00 |61a|00 |62b|00 |63c|00 |64 "
".].^._.`.a.b.c.d\n"
"          00 |65e|00 |66f|00 |67g|00 |68h|00 |69i|00 |6aj|00 |6bk|00 |6c "
".e.f.g.h.i.j.k.l\n"
"          00 |6dm|00 |6en|00 |6fo|00                                     "
".m.n.o.         \n"
"        r ???\n"
"          02 |1d |00 |0b |00 |60`|00 |10 |04 |00 |00 |11 |0c |06 |00 |00 "
".....`..........\n"
"          00 |00 |00 |00 |00 |00 |00 |12 |04 |00 |00 |13 |04 |00 |00 |14 "
"................\n"
"          08 |00 |00 |00 |00 |00 |00 |15 |08 |00 |00 |00 |00 |00 |00 |16 "
"................\n"
"          08 |00 |00 |00 |00 |00 |00 |17 |08 |00 |00 |00 |00 |00 |00 |18 "
"................\n"
"          08 |00 |00 |00 |00 |00 |00 |19 |08 |00 |00 |00 |00 |00 |00 |1a "
"................\n"
"          08 |00 |00 |00 |00 |00 |00 |1b |08 |00 |00 |00 |00 |00 |00 |1c "
"................\n"
"          04 |00 |00 |1d |08 |04 |00 |00 |00 |00 |00 |1e |3c<|355|ff |ff "
"............<5  \n"
"          "
"ff |ff |ff |ff |ff |ff |ff |ff |ff |ff |ff |ff |ff |ff |ff |ff "
"                \n"
"          "
"ff |ff |ff |ff |ff |ff |ff |ff |ff |ff |ff |ff |ff |ff |ff |ff "
"                \n"
"          "
"ff |ff |ff |ff |ff |ff |ff |ff |ff |ff |ff |ff |ff |ff |ff |ff "
"                \n"
"          ff |ff |ff |00 |00 |00 |00 |1f |08 |00 |00 |00 |00 |00 |00 |20 "
"   ............ \n"
"          04 |00 |00 |21!|04 |00 |00 |22\"|04 |00 |00 |23#|04 |00 |00 |24 "
"...!...\"...#...$\n"
"          04 |00 |00 |25%|04 |00 |00 |26&|04 |00 |00 |27'|08 |00 |00 |00 "
"...%...&...'....\n"
"          00 |00 |00 |28(|08 |00 |00 |00 |00 |00 |00 |29)|08 |00 |00 |00 "
"...(.......)....\n"
"          00 |00 |00 |2a*|04 |00 |00 |2b+|0c |08 |00 |00 |00 |00 |00 |00 "
"...*...+........\n"
"          00 |00 |00 |2c,|04 |00 |00 |2d-|08 |00 |00 |00 |00 |00 |00 |2e "
"...,...-........\n"
"          08 |00 |00 |00 |00 |00 |00 |2f/|08 |00 |00 |00 |00 |00 |00 |30 "
"......./.......0\n"
"          08 |00 |00 |00 |00 |00 |00 |311|08 |00 |00 |00 |00 |00 |00 |32 "
".......1.......2\n"
"          08 |00 |00 |00 |00 |00 |00 |333|08 |00 |00 |00 |00 |00 |00 |34 "
".......3.......4\n"
"          08 |00 |00 |00 |00 |00 |00 |355|08 |00 |00 |00 |00 |00 |00 |36 "
".......5.......6\n"
"          08 |00 |00 |00 |00 |00 |00 |377|08 |00 |00 |00 |00 |00 |00 |38 "
".......7.......8\n"
"          08 |04 |00 |00 |00 |00 |00 |399|08 |04 |00 |00 |00 |00 |00 |3a "
".......9.......:\n"
"          08 |04 |00 |00 |00 |00 |00 |3b;|14 |10 |00 |00 |00 |00 |00 |00 "
".......;........\n"
"          00 |00 |00 |00 |00 |00 |00 |00 |00 |00 |00 |3c<|08 |00 |00 |00 "
"...........<....\n"
"          00 |00 |00 |3d=|08 |00 |00 |00 |00 |00 |00 |3e>|08 |00 |00 |00 "
"...=.......>....\n"
"          00 |00 |00 |3f?|08 |00 |00 |00 |00 |00 |00 |40@|08 |00 |00 |8e "
"...?.......@...Ä\n"
"          00 |00 |00 |41A|04 |00 |00 |42B|04 |00 |00 |43C|08 |00 |00 |00 "
"...A...B...C....\n"
"          00 |00 |00 |44D|08 |00 |00 |00 |00 |00 |00 |45E|08 |00 |00 |00 "
"...D.......E....\n"
"          00 |00 |00 |46F|08 |00 |00 |00 |00 |00 |00 |47G|08 |00 |00 |00 "
"...F.......G....\n"
"          00 |00 |00 |48H|08 |00 |00 |00 |00 |00 |00 |49I|08 |00 |00 |00 "
"...H.......I....\n"
"          00 |00 |00 |4aJ|08 |00 |00 |00 |00 |00 |00 |4bK|08 |00 |00 |00 "
"...J.......K....\n"
"          00 |00 |00 |4cL|08 |00 |00 |00 |00 |00 |00 |4dM|08 |00 |00 |00 "
"...L.......M....\n"
"          00 |00 |00 |4eN|08 |00 |00 |00 |00 |00 |00 |4fO|08 |00 |00 |00 "
"...N.......O....\n"
"          00 |00 |00 |50P|08 |00 |00 |00 |00 |00 |00 |51Q|08 |00 |00 |00 "
"...P.......Q....\n"
"          00 |00 |00 |52R|08 |00 |00 |00 |00 |00 |00 |53S|08 |00 |00 |00 "
"...R.......S....\n"
"          00 |00 |00 |54T|08 |00 |00 |00 |00 |00 |00 |55U|08 |00 |00 |00 "
"...T.......U....\n"
"          00 |00 |00 |56V|08 |00 |00 |00 |00 |00 |00 |57W|08 |00 |00 |00 "
"...V.......W....\n"
"          00 |00 |00 |58X|08 |00 |00 |00 |00 |00 |00 |59Y|08 |00 |00 |00 "
"...X.......Y....\n"
"    00 |00 |00 |5aZ|08 |00 |00 |00 |00 |00 |00 |5b[|08 |00 |00 |00 "
"...Z.......[....\n"
"    00 |00 |00 |5c\\|08 |00 |00 |00 |00 |00 |00 |5d]|08 |00 |00 |00 "
"...\\.......]....\n"
"    00 |00 |00 |5e^|08 |00 |00 |00 |00 |00 |00 |5f_|08 |00 |00 |00 "
"...^......._....\n"
"    00 |00 |00 |60`|08 |00 |00 |00 |00 |00 |00 |61a|08 |00 |00 |00 "
"...`.......a....\n"
"    00 |00 |00 |62b|08 |00 |00 |00 |00 |00 |00 |63c|08 |00 |00 |00 "
"...b.......c....\n"
"    00 |00 |00 |64d|08 |00 |00 |00 |00 |00 |00 |65e|08 |00 |00 |00 "
"...d.......e....\n"
"    00 |00 |00 |66f|08 |00 |00 |00 |00 |00 |00 |67g|08 |00 |00 |00 "
"...f.......g....\n"
"    00 |00 |00 |68h|08 |00 |00 |00 |00 |00 |00 |69i|08 |00 |00 |00 "
"...h.......i....\n"
"    00 |00 |00 |6aj|08 |00 |00 |00 |00 |00 |00 |6bk|08 |04 |00 |00 "
"...j.......k....\n"
"    00 |00 |00 |6cl|08 |04 |00 |00 |00 |00 |00 |6dm|08 |00 |00 |00 "
"...l.......m....\n"
"    00 |00 |00 |6en|08 |00 |00 |00 |00 |00 |00 |6fo|08 |00 |00 |00 "
"...n.......o....\n"
"    00 |00                                                         ..              "
"\n"
"    Sending frame 0x38 / 0x00c7\n"
"    00 |02 |00 |0a |00 |60`|00 |70p|00 |71q|00 |72r|00 |73s|00 |74 "
".....`.p.q.r.s.t\n"
"    00 |75u|00 |76v|00 |77w|00 |78x|00 |79y|00 |7az|00 |7b{|00 |7c "
".u.v.w.x.y.z.{.|\n"
"    00 |7d}|00 |7e~|00 |7f |00 |80Ç|00 |81ü|00 |82é|00 |83â|00 |84 "
".}.~...Ç.ü.é.â.ä\n"
"    00 |85ů|00 |86ć|00 |87ç|00 |88ł|00 |89ë|00 |8aŐ|00 |8bő|00 |8c "
".ů.ć.ç.ł.ë.Ő.ő.î\n"
"    00 |8dŹ|00 |8eÄ|00 |8fĆ|00 |90É|00 |91Ĺ|00 |92ĺ|00 |93ô|00 |94 "
".Ź.Ä.Ć.É.Ĺ.ĺ.ô.ö\n"
"    00 |95Ľ|00 |96ľ|00 |97Ś|00 |98ś|00 |99Ö|00 |9aÜ|00 |9bŤ|00 |9c "
".Ľ.ľ.Ś.ś.Ö.Ü.Ť.ť\n"
"    00 |9dŁ|00 |9e×|00 |9fč|00 |a0á|00 |a1í|00 |a2ó|00 |a3ú|00 |a4 "
".Ł.×.č.á.í.ó.ú.Ą\n"
"    00 |a5ą|00 |a6Ž|00 |a7ž|00 |a8Ę|00 |a9ę|00 |aa¬|00 |abź|00 |ac "
".ą.Ž.ž.Ę.ę.¬.ź.Č\n"
"    00 |adş|00 |ae«|00 |af»|00 |b0 |00 |b1 |00 |b2 |00 |b3 |00 |b4 "
".ş.«.»..........\n"
"    00 |b5Á|00 |b6Â|00 |b7Ě|00 |b8Ş|00 |b9 |00 |ba |00 |bb |00 |bc "
".Á.Â.Ě.Ş........\n"
"    00 |bdŻ|00 |beż|00 |bf |00 |c0 |00 |c1 |00 |c2 |00 |c3 |00 |c4 "
".Ż.ż............\n"
"    00 |c5 |00 |c6Ă|00 |c7ă|00 |c8 |00 |c9 |00 |ca |00 |cb |00 |cc "
"...Ă.ă..........\n"
"    00 |cd |00 |ce |00 |cf¤|00                                     "
".....¤.         \n"
"    Received frame 0x38 / 0x0306\n"
"    02 |1d |00 |0b |00 |60`|00 |70p|08 |00 |00 |00 |00 |00 |00 |71 "
".....`.p.......q\n"
"    08 |00 |00 |00 |00 |00 |00 |72r|08 |00 |00 |00 |00 |00 |00 |73 "
".......r.......s\n"
"    08 |00 |00 |00 |00 |00 |00 |74t|08 |00 |00 |00 |00 |00 |00 |75 "
".......t.......u\n"
"    08 |00 |00 |00 |00 |00 |00 |76v|08 |00 |00 |00 |00 |00 |00 |77 "
".......v.......w\n"
"    08 |00 |00 |00 |00 |00 |00 |78x|08 |00 |00 |00 |00 |00 |00 |79 "
".......x.......y\n"
"    08 |00 |00 |00 |00 |00 |00 |7az|08 |00 |00 |00 |00 |00 |00 |04 "
".......z........\n"
"    08 |04 |00 |7b{|00 |00 |00 |04 |08 |04 |00 |7c||00 |00 |00 |04 "
"...{.......|....\n"
"    08 |04 |00 |7d}|00 |00 |00 |04 |08 |04 |00 |7e~|00 |00 |00 |04 "
"...}.......~....\n"
"    08 |04 |00 |7f |00 |00 |00 |04 |08 |04 |00 |80Ç|00 |00 |00 |04 "
"...........Ç....\n"
"    08 |04 |00 |81ü|00 |00 |00 |04 |08 |04 |00 |82é|00 |00 |00 |04 "
"...ü.......é....\n"
"    08 |04 |00 |83â|00 |00 |00 |04 |08 |04 |00 |84ä|00 |00 |00 |04 "
"...â.......ä....\n"
"    08 |04 |00 |85ů|00 |00 |00 |04 |08 |04 |00 |86ć|00 |00 |00 |04 "
"...ů.......ć....\n"
"    08 |04 |00 |87ç|00 |00 |00 |04 |08 |04 |00 |88ł|00 |00 |00 |04 "
"...ç.......ł....\n"
"    08 |04 |00 |89ë|00 |00 |00 |04 |08 |04 |00 |8aŐ|00 |00 |00 |04 "
"...ë.......Ő....\n"
"    08 |04 |00 |8bő|00 |00 |00 |04 |08 |04 |00 |8cî|00 |00 |00 |04 "
"...ő.......î....\n"
"    08 |04 |00 |8dŹ|00 |00 |00 |04 |08 |04 |00 |8eÄ|00 |00 |00 |04 "
"...Ź.......Ä....\n"
"    08 |04 |00 |8fĆ|00 |00 |00 |04 |08 |04 |00 |90É|00 |00 |00 |04 "
"...Ć.......É....\n"
"    08 |04 |00 |91Ĺ|00 |00 |00 |04 |08 |04 |00 |92ĺ|00 |00 |00 |04 "
"...Ĺ.......ĺ....\n"
"    08 |04 |00 |93ô|00 |00 |00 |04 |08 |04 |00 |94ö|00 |00 |00 |04 "
"...ô.......ö....\n"
"    08 |04 |00 |95Ľ|00 |00 |00 |04 |08 |04 |00 |96ľ|00 |00 |00 |04 "
"...Ľ.......ľ....\n"
"    08 |04 |00 |97Ś|00 |00 |00 |04 |08 |04 |00 |98ś|00 |00 |00 |04 "
"...Ś.......ś....\n"
"    08 |04 |00 |99Ö|00 |00 |00 |04 |08 |04 |00 |9aÜ|00 |00 |00 |04 "
"...Ö.......Ü....\n"
"    08 |04 |00 |9bŤ|00 |00 |00 |04 |08 |04 |00 |9cť|00 |00 |00 |04 "
"...Ť.......ť....\n"
"    08 |04 |00 |9dŁ|00 |00 |00 |04 |08 |04 |00 |9e×|00 |00 |00 |04 "
"...Ł.......×....\n"
"    08 |04 |00 |9fč|00 |00 |00 |04 |08 |04 |00 |a0á|00 |00 |00 |04 "
"...č.......á....\n"
"    08 |04 |00 |a1í|00 |00 |00 |04 |08 |04 |00 |a2ó|00 |00 |00 |04 "
"...í.......ó....\n"
"    08 |04 |00 |a3ú|00 |00 |00 |04 |08 |04 |00 |a4Ą|00 |00 |00 |04 "
"...ú.......Ą....\n"
"    08 |04 |00 |a5ą|00 |00 |00 |04 |08 |04 |00 |a6Ž|00 |00 |00 |04 "
"...ą.......Ž....\n"
"    08 |04 |00 |a7ž|00 |00 |00 |04 |08 |04 |00 |a8Ę|00 |00 |00 |04 "
"...ž.......Ę....\n"
"    08 |04 |00 |a9ę|00 |00 |00 |04 |08 |04 |00 |aa¬|00 |00 |00 |04 "
"...ę.......¬....\n"
"    08 |04 |00 |abź|00 |00 |00 |04 |08 |04 |00 |acČ|00 |00 |00 |04 "
"...ź.......Č....\n"
"    08 |04 |00 |adş|00 |00 |00 |04 |08 |04 |00 |ae«|00 |00 |00 |04 "
"...ş.......«....\n"
"    08 |04 |00 |af»|00 |00 |00 |04 |08 |04 |00 |b0 |00 |00 |00 |04 "
"...»............\n"
"    08 |04 |00 |b1 |00 |00 |00 |04 |08 |04 |00 |b2 |00 |00 |00 |04 "
"................\n"
"    08 |04 |00 |b3 |00 |00 |00 |04 |08 |04 |00 |b4 |00 |00 |00 |04 "
"................\n"
"    08 |04 |00 |b5Á|00 |00 |00 |04 |08 |04 |00 |b6Â|00 |00 |00 |04 "
"...Á.......Â....\n"
"    08 |04 |00 |b7Ě|00 |00 |00 |04 |08 |04 |00 |b8Ş|00 |00 |00 |04 "
"...Ě.......Ş....\n"
"    08 |04 |00 |b9 |00 |00 |00 |04 |08 |04 |00 |ba |00 |00 |00 |04 "
"................\n"
"    08 |04 |00 |bb |00 |00 |00 |04 |08 |04 |00 |bc |00 |00 |00 |04 "
"................\n"
"    08 |04 |00 |bdŻ|00 |00 |00 |04 |08 |04 |00 |beż|00 |00 |00 |04 "
"...Ż.......ż....\n"
"    08 |04 |00 |bf |00 |00 |00 |04 |08 |04 |00 |c0 |00 |00 |00 |04 "
"................\n"
"    08 |04 |00 |c1 |00 |00 |00 |04 |08 |04 |00 |c2 |00 |00 |00 |04 "
"................\n"
"    08 |04 |00 |c3 |00 |00 |00 |04 |08 |04 |00 |c4 |00 |00 |00 |04 "
"................\n"
"    08 |04 |00 |c5 |00 |00 |00 |04 |08 |04 |00 |c6Ă|00 |00 |00 |04 "
"...........Ă....\n"
"    08 |04 |00 |c7ă|00 |00 |00 |04 |08 |04 |00 |c8 |00 |00 |00 |04 "
"...ă............\n"
"    08 |04 |00 |c9 |00 |00 |00 |04 |08 |04 |00 |ca |00 |00 |00 |04 "
"................\n"
"    08 |04 |00 |cb |00 |00 |00 |04 |08 |04 |00 |cc |00 |00 |00 |04 "
"................\n"
"    08 |04 |00 |cd |00 |00 |00 |04 |08 |04 |00 |ce |00 |00 |00 |04 "
"................\n"
"    08 |04 |00 |cf¤|00 |00                                         ...¤..          "
"\n"
"    Received frame 0x38 / 0x0306\n"
"    02 |1d |00 |0b |00 |60`|00 |04 |08 |04 |00 |d0đ|00 |00 |00 |04 "
".....`.....đ....\n"
"    08 |04 |00 |d1Đ|00 |00 |00 |04 |08 |04 |00 |d2Ď|00 |00 |00 |04 "
"...Đ.......Ď....\n"
"    08 |04 |00 |d3Ë|00 |00 |00 |04 |08 |04 |00 |d4ď|00 |00 |00 |04 "
"...Ë.......ď....\n"
"    08 |04 |00 |d5Ň|00 |00 |00 |04 |08 |04 |00 |d6Í|00 |00 |00 |04 "
"...Ň.......Í....\n"
"    08 |04 |00 |d7Î|00 |00 |00 |04 |08 |04 |00 |d8ě|00 |00 |00 |04 "
"...Î.......ě....\n"
"    08 |04 |00 |d9 |00 |00 |00 |04 |08 |04 |00 |da |00 |00 |00 |db "
"................\n"
"    08 |00 |00 |00 |00 |00 |00 |dc |08 |00 |00 |00 |00 |00 |00 |dd "
"...............Ţ\n"
"    08 |00 |00 |00 |00 |00 |00 |deŮ|08 |00 |00 |00 |00 |00 |00 |df "
".......Ů........\n"
"    08 |00 |00 |00 |00 |00 |00 |e0Ó|08 |00 |00 |00 |00 |00 |00 |e1 "
".......Ó.......ß\n"
"    08 |00 |00 |00 |00 |00 |00 |e2Ô|08 |00 |00 |00 |00 |00 |00 |e3 "
".......Ô.......Ń\n"
"    08 |00 |00 |00 |00 |00 |00 |e4ń|08 |00 |00 |00 |00 |00 |00 |e5 "
".......ń.......ň\n"
"    08 |00 |00 |00 |00 |00 |00 |04 |08 |04 |00 |e6Š|00 |00 |00 |e7 "
"...........Š...š\n"
"    08 |00 |00 |00 |00 |00 |00 |e8Ŕ|08 |00 |00 |00 |00 |00 |00 |04 "
".......Ŕ........\n"
"    08 |04 |00 |e9Ú|00 |00 |00 |04 |08 |04 |00 |eaŕ|00 |00 |00 |04 "
"...Ú.......ŕ....\n"
"    08 |04 |00 |ebŰ|00 |00 |00 |04 |08 |04 |00 |ecý|00 |00 |00 |04 "
"...Ű.......ý....\n"
"    08 |04 |00 |edÝ|00 |00 |00 |04 |08 |04 |00 |eeţ|00 |00 |00 |04 "
"...Ý.......ţ....\n"
"    08 |04 |00 |ef´|00 |00 |00 |04 |08 |04 |00 |f0­|00 |00 |00 |04 "
"...´.......­....\n"
"    08 |04 |00 |f1 |00 |00 |00 |04 |08 |04 |00 |f2 |00 |00 |00 |04 "
"................\n"
"    08 |04 |00 |f3 |00 |00 |00 |04 |08 |04 |00 |f4 |00 |00 |00 |f5 "
"...............§\n"
"    08 |00 |00 |00 |00 |00 |00 |f6÷|08 |00 |00 |00 |00 |00 |00 |f7 "
".......÷.......¸\n"
"    08 |00 |00 |00 |00 |00 |00 |f8°|08 |00 |00 |00 |00 |00 |00 |04 "
".......°........\n"
"    08 |04 |00 |f9¨|00 |00 |00 |04 |08 |04 |00 |fa |00 |00 |00 |04 "
"...¨............\n"
"    08 |04 |00 |fbű|00 |00 |00 |04 |08 |04 |00 |fcŘ|00 |00 |00 |04 "
"...ű.......Ř....\n"
"    08 |04 |00 |fdř|00 |00 |00 |04 |08 |04 |00 |fe |00 |00 |00 |04 "
"...ř............\n"
"    08 |04 |00 |ff |00 |00 |00 |04 |08 |04 |01 |00 |00 |00 |00 |04 "
"... ............\n"
"    08 |04 |01 |01 |00 |00 |00 |04 |08 |04 |01 |02 |00 |00 |00 |04 "
"................\n"
"    08 |04 |01 |03 |00 |00 |00 |04 |08 |04 |01 |04 |00 |00 |00 |04 "
"................\n"
"    08 |04 |01 |05 |00 |00 |00 |04 |08 |04 |01 |06 |00 |00 |00 |04 "
"................\n"
"    08 |04 |01 |07 |00 |00 |00 |04 |08 |04 |01 |08 |00 |00 |00 |04 "
"................\n"
"    08 |04 |01 |09 |00 |00 |00 |04 |08 |04 |01 |0a |00 |00 |00 |04 "
"................\n"
"    08 |04 |01 |0b |00 |00 |00 |04 |08 |04 |01 |0c |00 |00 |00 |04 "
"................\n"
"    08 |04 |01 |0d |00 |00 |00 |04 |08 |04 |01 |0e |00 |00 |00 |04 "
"................\n"
"    08 |04 |01 |0f |00 |00 |00 |04 |08 |04 |01 |10 |00 |00 |00 |04 "
"................\n"
"    08 |04 |01 |11 |00 |00 |00 |04 |08 |04 |01 |12 |00 |00 |00 |04 "
"................\n"
"    08 |04 |01 |13 |00 |00 |00 |04 |08 |04 |01 |14 |00 |00 |00 |04 "
"................\n"
"    08 |04 |01 |15 |00 |00 |00 |04 |08 |04 |01 |16 |00 |00 |00 |04 "
"................\n"
"    08 |04 |01 |17 |00 |00 |00 |04 |08 |04 |01 |18 |00 |00 |00 |04 "
"................\n"
"    08 |04 |01 |19 |00 |00 |00 |04 |08 |04 |01 |1a |00 |00 |00 |04 "
"................\n"
"    08 |04 |01 |1b |00 |00 |00 |04 |08 |04 |01 |1c |00 |00 |00 |04 "
"................\n"
"    08 |04 |01 |1d |00 |00 |00 |04 |08 |04 |01 |1e |00 |00 |00 |04 "
"................\n"
"    08 |04 |01 |1f |00 |00 |00 |04 |08 |04 |01 |20 |00 |00 |00 |04 "
"........... ....\n"
"    08 |04 |01 |21!|00 |00 |00 |04 |08 |04 |01 |22\"|00 |00 |00 |04 "
"...!.......\"....\n"
"    08 |04 |01 |23#|00 |00 |00 |04 |08 |04 |01 |24$|00 |00 |00 |04 "
"...#.......$....\n"
"    08 |04 |01 |25%|00 |00 |00 |04 |08 |04 |01 |26&|00 |00 |00 |04 "
"...%.......&....\n"
"    08 |04 |01 |27'|00 |00 |00 |04 |08 |04 |01 |28(|00 |00 |00 |04 "
"...'.......(....\n"
"    08 |04 |01 |29)|00 |00 |00 |04 |08 |04 |01 |2a*|00 |00 |00 |04 "
"...).......*....\n"
"    08 |04 |01 |2b+|00 |00 |00 |04 |08 |04 |01 |2c,|00 |00 |00 |04 "
"...+.......,....\n"
"    08 |04 |01 |2d-|00 |00 |00 |04 |08 |04 |01 |2e.|00 |00 |00 |04 "
"...-............\n"
"    08 |04 |01 |2f/|00 |00                                         .../..          "
"\n"
"    Sending frame 0x38 / 0x000e\n"
"    00 |02 |00 |0c |00 |01 |00 |01 |08 |02 |05 |08 |00 |00         "
"..............  \n"
"    Received frame 0x38 / 0x0006\n"
"    02 |1d |00 |0d |00 |00                                         ......          "
"\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:723
#, no-wrap
msgid "    0x39: PROFILES\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:728
#, no-wrap
msgid ""
"        s Get Profile           { 0x01, 0x01, 0x0c, 0x01,\n"
"                                  0x04 (length), profile #, 'feature', 0x01 "
"}\n"
"        r Get Profile           { 0x02, 0x00, 0x0c, 0x02, \n"
"                                  0x09 (length), type, 0x01, 0x02, 0x00, "
"0x00, 0x01, value, 0x02 ... }\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:734
#, no-wrap
msgid ""
"        s Set Profile           { 0x03, 0x01, # blocks, 0x03, \n"
"                                  length, type, profile #, value, 0x00, "
"0x00, 0x01, value, 0x03 ... }\n"
"        r Set Profile           { 0x04, 0x01, # blocks,\n"
"                                  length, 0xXX, type, 0xXX, value\n"
"                                  where value: 0x00 = success\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:742
#, no-wrap
msgid ""
"    0x3E: FM Radio\n"
"        s Get FM Station\t    { 0x00, 0x01, 0x00, 0x05, location, 0x00, "
"0x01}\n"
"        r Get FM Station\t    { \t\t\t0x06, 0x00, 0x01, 0x00, 0x1c,\n"
"                     name_length, 0x14, 0x09, 0x00, location, 0x00, 0x00, "
"0x01,\n"
"                     FreqHI , FreqLO,\n"
"                     name_in_unicode,[0x55,0x55] - if name_length is odd}\n"
"                                 where frequency = (0xffff + FreqHi * 0x100 "
"+ FreqLo) kHz\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:744
#, no-wrap
msgid ""
"        r Get FM Station\t    { \t\t\t0x16, 0x05, 0x06 } - if entry is "
"empty\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:748
#, no-wrap
msgid ""
"    0x42:\n"
"        s ????                  {+00 |07 |00 |01 |00 |02}\n"
"        r ????                  {+07 |2d-|00 |02 |06 |02 |00 |02 |00 |01 |02 "
"|08 |00 |0c |07 |d1 |00 |00}\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:762
#, no-wrap
msgid ""
"    0x42:\n"
"        s Get ???               {+0x00, 0x07, 0x02, 0x01, 0x00, 0x01 }\n"
"        r Get ???               { 02 |06 |02 |00 |02 |00 |01 |02 |08 |00 |0c "
"|07 |d1 |00 |00}\n"
"        s Get original IMEI ?   {+0x00, 0x07, 0x02, 0x01, 0x00, 0x01 }\n"
"        r Get original IMEI ?   { 0x02, 0x06, 0x01, 0x01, 0x00, 0x01, 0x01, "
"0x18, 0x01, 0x00, IMEI, 0x00, 'U' }\n"
"        s Get ???               {+0x00, 0x07, 0x03, 0x01, 0x00, 0x02 }\n"
"        r Get ???               { 02 |06 |02 |00 |02 |00 |01 |02 |08 |00 |0c "
"|07 |d1 |00 |00}\n"
"        s Get ???               {+0x00, 0x07, 0x04, 0x01, 0x00, 0x10 }\n"
"        r Get ???               { 02 |06 |10 |00 |10 |00 |01 |05 |08 |00 |00 "
"|00 |00 | 00 |00}\n"
"        s Get ???               {+0x00, 0x07, 0x05, 0x01, 0x00, 0x08 }\n"
"        r Get ???               { 02 |06 |08 |00 |08 |00 |01 |04 |08 |00 |00 "
"|00 |00 | 00 |00}\n"
"        s Get ???               {+0x00, 0x07, 0x06, 0x01, 0x00, 0x20 }\n"
"        r Get ???               { 02 |06 |20 |00 |20 |00 |01 |06 |04 |03 "
"|00}\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:770
#, no-wrap
msgid ""
"    0x43:\n"
"        s ????                  {+00 |08 |00 |01 |00 |00 |00 |00 |00, x}\n"
"                                where x = 0x01, 0x02, 0x04, 0x08, 0x10\n"
"        r ????                  {+08 |1f |y |02 |00 |00 |00 |00 }\n"
"                                where y = 0 - 0x04\n"
"        s ???                   {+00 |08 |05 |01 |00 |00 |00 |00 |00 |20}\n"
"        r ???                   {+08 |1f |05 |02 |00 |00 |00 |00}\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:773
#, no-wrap
msgid ""
"    0x45: PHONEBOOK HANDLING ????\n"
"        the same to msg 0x03 ????\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:776
#, no-wrap
msgid ""
"    0x53:\n"
"        s Get simlock info      {0x0C}\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:786
#, no-wrap
msgid ""
"    0x55: TODO\n"
"        s Get TODO              {0x03, 0x00, 0x00, 0x80, location low, "
"location hi}\n"
"        r Get TODO              {0x04, .... }\n"
"        s Get number of TODO    {0x07}\n"
"        r Get number of TODO    {0x08, number lo, number hi}\n"
"        s Delete all TODO       {0x11}\n"
"        r Delete all TODO       {0x12}\n"
"        s Get TODO locations    {0x15, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00}\n"
"        r Get TODO locations    {0x16, ...}\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:788
#, no-wrap
msgid "    0x7a: STARTUP\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:795
#, no-wrap
msgid ""
"        s Get startup logo      { 0x02, 0x0f }\n"
"        r Get startup logo      { 0x03, 0x0f, 0x00[4], # blocks,\n"
"                                  0xc0, 0x02, height (2 octets),\n"
"                                  0xc0, 0x03, width (2 octets),\n"
"                                  0xc0, 0x04, size (2 octets),\n"
"                      picture }\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:798
#, no-wrap
msgid ""
"        s Get startup greeting  { 0x02, 0x01, 0x00 }\n"
"        r Get startup greeting  { 0x03, 0x01, 0x00, greeting (unicode), 0x00 "
"}\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:801
#, no-wrap
msgid ""
"        s Get anykey answer     { 0x02, 0x05, 0x00 }\n"
"        r Get anykey answer     { 0x03, 0x05, 0x00, 0x00/0x01 }\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/n6510.rst:806
#, no-wrap
msgid ""
"    0xd1:\n"
"        s Get HW&SW version     { 0x0003, 0x00 }\n"
"    0xd2:\n"
"        r Get HW&SW version     { 0x0003 \"V \" \"firmware\\n\" \"firmware "
"date\\n\"\n"
"                                  \"model\\n\" \"(c) NMP.\" }\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/tdma_5120.rst:2
#, no-wrap
msgid ""
"TDMA 5120\n"
"=========\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/tdma_5120.rst:5
msgid "Eduardo Spremolla at gnokii-users@mail.freesoftware.fsf.org"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/tdma_5120.rst:7
msgid "After playing a while with my 5120i y find some use full frames:"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/tdma_5120.rst:9
#, no-wrap
msgid ""
"got from sneefing in Logomanger the get startup logo\n"
"----------------------------------------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/tdma_5120.rst:12
msgid "request::"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/tdma_5120.rst:14
#, no-wrap
msgid "    40 {0x07, 0x07, 0x08, section} section goes from 1 to 6\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/tdma_5120.rst:16
msgid "answer::"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/tdma_5120.rst:18
#, no-wrap
msgid ""
"    dd {+0x01, 0x00, 0x07, 0x08, (84 bytes => 84 cols x 8 bits bit0 first "
"row )\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/tdma_5120.rst:21
msgid ""
"Cant figure out how to modify 6110 code to get & put the logo, not in a hi "
"value to me now."
msgstr ""

#. type: Plain text
#: docs/manual/protocol/tdma_5120.rst:23
#, no-wrap
msgid ""
"got key press working \n"
"---------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/tdma_5120.rst:26
msgid "As stated in http://www.flosys.com/tdma/n5160.html"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/tdma_5120.rst:28
msgid "with frame: key-press::"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/tdma_5120.rst:30
#, no-wrap
msgid "    D1 {+00 01 50 00 01 KY}\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/tdma_5120.rst:32
msgid "this seems to press the key for a while. No release needed"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/tdma_5120.rst:34
msgid "key-release:"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/tdma_5120.rst:36
#, no-wrap
msgid "    D1 {+00 01 50 00 00 KY}\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/tdma_5120.rst:38
msgid "keep the key press => got speedee dial::"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/tdma_5120.rst:40
#, no-wrap
msgid "    D1 {+00 01 50 00 02 00 KY}\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/tdma_5120.rst:42
#, no-wrap
msgid ""
"get memory\n"
"----------\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/tdma_5120.rst:46
#, no-wrap
msgid ""
"the getmemory::\n"
"    40 {+00 00 07 11 00 10 00 mem}\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/tdma_5120.rst:49
msgid ""
"get phonebook with the phone in bcd, but it seems to be a way to read chunks "
"of memory with diferent numbers in the 6 place. in particular:"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/tdma_5120.rst:51
msgid "get configuration pins::"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/tdma_5120.rst:53
#, no-wrap
msgid "    40 {+0x00, 0x00, 0x07, 0x11, 0x00, 0x0f, 0x00, 0x00 } \n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/tdma_5120.rst:55
msgid "get security code::"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/tdma_5120.rst:57
#, no-wrap
msgid "    40 {+0x00, 0x00, 0x07, 0x11, 0x00, 0x09, 0x00, 0x00 } \n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/tdma_5120.rst:59
msgid "get NAM data ::"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/tdma_5120.rst:61
#, no-wrap
msgid "    40 {+0x00, 0x00, 0x07, 0x11, 0x00, 0x08, 0x00, nam# } \n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/tdma_5120.rst:63
msgid "that last answers with::"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/tdma_5120.rst:65
#, no-wrap
msgid "    dd {+01 00 11 00 08 00 00,\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/tdma_5120.rst:114
#, no-wrap
msgid ""
"03 04\n"
"    home sys id\n"
"01 4d\n"
"    primary paggin channel\n"
"02 c4\n"
"    seconda paggin channel\n"
"88 88 88 88 88\n"
"    own #\n"
"09 63 c2 09 03 00 0b\n"
"    unknow\n"
"0a\n"
"    group id\n"
"01\n"
"    Access method\n"
"01\n"
"    local option\n"
"0f\n"
"    overload class\n"
"20 41 43 41 45 00 00 00 00 00 00 00 00 00 00 00 \n"
"    alpha tag\n"
"b3 4d\n"
"    unknow\n"
"01\n"
"    NAM status\n"
"11 11 11 11 11 00 00 00 00 00 00 00 00\n"
"    unknow\n"
"00 00 00 00 00 00 01 00 00 00 01 36\n"
"    unknow\n"
"01 4d\n"
"    dedicate ch\n"
"01 4e\n"
"    dedicate B ch\n"
"14\n"
"    dedicate ch #\n"
"14\n"
"    dedicate B ch #\n"
"00\n"
"    msg center # len\n"
"00\n"
"    msg center in flag\n"
"00 00 00 00 00 00 00 00 00 00 00 00 00 00\n"
"    msg center #\n"
"08 01 80 70 8f dd 00 ef 00 00 00 00 00 00 00 00\n"
"    unknow\n"
"00 00 00 00 00\n"
"    gate way #\n"
"00 00 00\n"
"    unknow\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/tdma_5120.rst:120
msgid ""
"More interesting ( and dangerous ) is than the 07 10 sequence in place of 07 "
"11 in the request change the command from read to write.be care full!!! I "
"almost ruin my 5125 with a 40 {+0x00, 0x00, 0x07, 0x10, 0x00, 0x08, 0x00, "
"0x01 } frame , since the frame is ok, but the phone the write info from an "
"area of the buffer that I did not send!!!!"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/tdma_5120.rst:121
msgid "OK so far. Still looking for how to handle SMS......"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/discovering.rst:2
msgid ".. _Discovering protocol:"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/discovering.rst:4
#, no-wrap
msgid ""
"Discovering protocol\n"
"====================\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/discovering.rst:9
msgid ""
"You need to get a communication dump to be able to understand protocol or "
"discover new commands. As most vendors provide some software for Windows, "
"all following sections assume you do the sniffing on Windows."
msgstr ""

#. type: Plain text
#: docs/manual/protocol/discovering.rst:11
#, no-wrap
msgid ""
"USB\n"
"---\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/discovering.rst:16
msgid ""
"For USB there exist various tools to dump USB communication. The dumps can "
"be later analyzed and used to discover protocol details or unknown "
"commands. One of the best free tools available currently is `UsbSnoop`_."
msgstr ""

#. type: Plain text
#: docs/manual/protocol/discovering.rst:19
msgid ""
"In directory ``contrib/usbsnoop`` in Gammu sources you can find some tools "
"to decode the output."
msgstr ""

#. type: Plain text
#: docs/manual/protocol/discovering.rst:21
msgid ".. _UsbSnoop: http://www.pcausa.com/Utilities/UsbSnoop/"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/discovering.rst:23
#, no-wrap
msgid ""
"Serial port\n"
"-----------\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/discovering.rst:28
msgid ""
"Download `Portmon`_, which allows to capture bytes sent and received by "
"ready binary software."
msgstr ""

#. type: Plain text
#: docs/manual/protocol/discovering.rst:30
msgid ".. _Portmon: http://technet.microsoft.com/en-us/sysinternals/bb896644.aspx"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/discovering.rst:33
msgid ""
"If you have log saved by PortMon and protocol is the same to \"old\" Nokia "
"protocols, can use Gammu to decode it. It's simple::"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/discovering.rst:35
#, no-wrap
msgid "    gammu --decodesniff MBUS2 file 6210 > log\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/discovering.rst:39
msgid ""
"saves in log decoded MBUS2 dump session. There is used phone module for 6210 "
"and have you have debug info about 6210 specific frames (you don't have to "
"add model). Dump file for --decodesniff and MBUS should be specific:"
msgstr ""

#. type: Bullet: '1. '
#: docs/manual/protocol/discovering.rst:42
msgid ""
"without bytes sent to phone (in Portmon you set it here: \"Edit\", "
"\"Filter/Highlight\")"
msgstr ""

#. type: Bullet: '2. '
#: docs/manual/protocol/discovering.rst:44
msgid "in Hex format (\"Options\", \"Show Hex\")"
msgstr ""

#. type: Bullet: '3. '
#: docs/manual/protocol/discovering.rst:46
msgid "without Date & Time (\"Options\", \"Show Time\" & \"Clock Time\")"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/discovering.rst:49
#, no-wrap
msgid ""
"Infrared\n"
"--------\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/discovering.rst:56
msgid ""
"First of all you need two computers with IrDA. One running linux, that will "
"sniff and one running windows, which will communicate with the phone and "
"whatever software you want (Nokia, Logomanager, Oxygen Phone Manager).  Then "
"you have to get the software from "
"http://www.dev-thomynet.de/nokworld/noktrace/"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/discovering.rst:67
msgid ""
"You have to disable IrDA services on the linux machine and eventually you "
"have to change the default port the 'irda_intercept' program is sniffing "
"from (default ttyS1). On the windows machine you should decrease the maximum "
"transmission speed to 9600bps if possible, because the intercept program "
"doesn't seem to handle speed changes. (9600 is for searching devices in "
"range and then the highest possible speed is chosen) If it isn't possible "
"you have to change the default bitrate in intercept source code, too. Then "
"you won't see anything until the windows machine and the phone start "
"transmitting data, which isn't too bad. At least here in my setup I could "
"sniff the data coming from phone and sent to it in one go, like that::"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/discovering.rst:74
#, no-wrap
msgid ""
"    win    ------------------>   Nokia\n"
"  machine  <-----------------    phone\n"
"                  ^^\n"
"                  ||\n"
"                sniffing\n"
"                 device\n"
msgstr ""

#. type: Plain text
#: docs/manual/protocol/discovering.rst:82
msgid ""
"You get a raw data file (.trc) from the intercept program, which you can "
"then decode to hex with the second program from the above mentioned page.  "
"You should possibly be able to use Marcin's magnokii for decoding the trc "
"files, too, but it didn't work for me so I just figured things out from the "
"hex files. In the hex files you should look for primary frames with 00 01 00 "
"in it, because this is the FBUS header which is in every valuable frame sent "
"to phone. It's not really joy to do that, but if it brings support for a new "
"phone it's worth it :-)"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/dbi.rst:2
msgid ".. _gammu-smsd-dbi:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/dbi.rst:4
#, no-wrap
msgid ""
"DBI Backend\n"
"===========\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/dbi.rst:9
msgid ""
"DBI backend stores all data in any database supported by `libdbi`_, which "
"parameters are defined by configuration (see :ref:`gammu-smsdrc` for "
"description of configuration options)."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/dbi.rst:11 docs/manual/smsd/pgsql.rst:11 docs/manual/smsd/mysql.rst:11
msgid "For tables description see :ref:`gammu-smsd-tables`."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/dbi.rst:13 docs/manual/smsd/pgsql.rst:13 docs/manual/smsd/mysql.rst:13
msgid "This backend is based on :ref:`gammu-smsd-sql`."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/dbi.rst:18
#, no-wrap
msgid ""
"    The DBI driver is currently not supported on Windows because libdbi\n"
"    library does not support this platform.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/dbi.rst:21
#, no-wrap
msgid ""
"Supported drivers\n"
"-----------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/dbi.rst:25
msgid ""
"For complete list of drivers for `libdbi`_ see `libdbi-drivers`_ "
"project. The drivers for example include:"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/smsd/dbi.rst:30
msgid "``sqlite3`` - for SQLite 3"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/smsd/dbi.rst:30
msgid "``mysql`` - for MySQL"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/smsd/dbi.rst:30
msgid "``pgsql`` - for PostgeSQL"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/smsd/dbi.rst:30
msgid "``freetds`` - for MS SQL Server or Sybase"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/dbi.rst:33
msgid ""
".. _libdbi: http://libdbi.sourceforge.net/ .. _libdbi-drivers: "
"http://libdbi-drivers.sourceforge.net/"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/dbi.rst:35 docs/manual/smsd/pgsql.rst:17 docs/manual/smsd/mysql.rst:34 docs/manual/formats/smsbackup.rst:104 docs/manual/utils/gammu-detect.rst:83
#, no-wrap
msgid ""
"Example\n"
"-------\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/dbi.rst:38
msgid "SQL script for creating tables in SQLite database:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/dbi.rst:41
#, no-wrap
msgid ""
".. literalinclude:: ../../sql/sqlite.sql\n"
"   :language: sql\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/dbi.rst:45
#, no-wrap
msgid ""
"    You can find the script in :file:`docs/sql/sqlite.sql` as well. There "
"are\n"
"    also scripts for other databases in same folder.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/backends.rst:2
msgid ".. _smsd_services:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/backends.rst:4 docs/manual/smsd/code.rst:5
#, no-wrap
msgid ""
"Backend services\n"
"----------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/backends.rst:8
msgid ""
"The backend service is used to store messages (both incoming and queue of "
"outgoing ones)."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/backends.rst:19
#, no-wrap
msgid ""
"    files\n"
"    sql\n"
"    mysql\n"
"    pgsql\n"
"    dbi\n"
"    null\n"
"    tables\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:2
msgid ".. _gammu-smsd-sql:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:4
#, no-wrap
msgid ""
"SQL Service\n"
"===========\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:8
msgid ""
"SQL service stores all its data in database. It can use one of these SQL "
"backends (configuration option :config:option:`Driver` in smsd section):"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/smsd/sql.rst:16
msgid "``native_mysql`` for :ref:`gammu-smsd-mysql`"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/smsd/sql.rst:16
msgid "``native_pgsql`` for :ref:`gammu-smsd-pgsql`"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:16
#, no-wrap
msgid ""
"* drivers supported by DBI for :ref:`gammu-smsd-dbi`, which include:\n"
"    * ``sqlite3`` - for SQLite 3\n"
"    * ``mysql`` - for MySQL\n"
"    * ``pgsql`` - for PostgeSQL\n"
"    * ``freetds`` - for MS SQL Server or Sybase\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:18
#, no-wrap
msgid ""
"SQL connection parameters\n"
"-------------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:21
msgid "Common for all backends:"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/smsd/sql.rst:27
msgid ":config:option:`User` - user connecting to database"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/smsd/sql.rst:27
msgid ":config:option:`Password` - password for connecting to database"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/smsd/sql.rst:27
msgid ":config:option:`Host` - database host"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/smsd/sql.rst:27
msgid ":config:option:`Database` - database name"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/smsd/sql.rst:27
msgid ":config:option:`Driver` - ``native_mysql``, ``native_pgsql`` or DBI one"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:29
msgid "Specific for DBI:"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/smsd/sql.rst:32
msgid ":config:option:`DriversPath` - path to DBI drivers"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/smsd/sql.rst:32
msgid ":config:option:`DBDir` - sqlite/sqlite3 directory with database"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:34
msgid ""
".. seealso:: The variables are fully described in :ref:`gammurc` "
"documentation."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:36
#, no-wrap
msgid ""
"SQL Queries\n"
"-----------\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:41
msgid ""
"Almost all queries are configurable. You can edit them in "
":config:section:`[sql]` section. There are several variables used in SQL "
"queries. We can separate them into three groups:"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/smsd/sql.rst:45
msgid ""
"phone specific, which can be used in every query, see :ref:`Phone Specific "
"Parameters`"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/smsd/sql.rst:45
msgid ""
"SMS specific, which can be used in queries which works with SMS messages, "
"see :ref:`SMS Specific Parameters`"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/smsd/sql.rst:45
msgid ""
"query specific, which are numeric and are specific only for given query (or "
"set of queries), see :ref:`Configurable queries`"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:47
msgid ".. _Phone Specific Parameters:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:50
msgid "Phone Specific Parameters +++++++++++++++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:60
#, no-wrap
msgid ""
"+-----------+------------------------------------------------------------------+\n"
"| Parameter |    Description                                                   "
"|\n"
"+===========+==================================================================+\n"
"| ``%I``    | IMEI of phone                                                    "
"|\n"
"+-----------+------------------------------------------------------------------+\n"
"| ``%P``    | PHONE ID (hostname)                                              "
"|\n"
"+-----------+------------------------------------------------------------------+\n"
"| ``%N``    | client name (eg. Gammu 1.12.3)                                   "
"|\n"
"+-----------+------------------------------------------------------------------+\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:62
msgid ".. _SMS Specific Parameters:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:65
msgid "SMS Specific Parameters +++++++++++++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:95
#, no-wrap
msgid ""
"+-----------+------------------------------------------------------------------+\n"
"| Parameter |    Description                                                   "
"|\n"
"+===========+==================================================================+\n"
"| ``%R``    | remote number [#f1]_                                             "
"|\n"
"+-----------+------------------------------------------------------------------+\n"
"| ``%C``    | delivery datetime                                                "
"|\n"
"+-----------+------------------------------------------------------------------+\n"
"| ``%e``    | delivery status on receiving or status error on sending          "
"|\n"
"+-----------+------------------------------------------------------------------+\n"
"| ``%t``    | message reference                                                "
"|\n"
"+-----------+------------------------------------------------------------------+\n"
"| ``%d``    | receiving datetime for received sms                              "
"|\n"
"+-----------+------------------------------------------------------------------+\n"
"| ``%E``    | encoded text of SMS                                              "
"|\n"
"+-----------+------------------------------------------------------------------+\n"
"| ``%c``    | SMS coding (ie 8bit or UnicodeNoCompression)                     "
"|\n"
"+-----------+------------------------------------------------------------------+\n"
"| ``%F``    | sms centre number                                                "
"|\n"
"+-----------+------------------------------------------------------------------+\n"
"| ``%u``    | UDH header                                                       "
"|\n"
"+-----------+------------------------------------------------------------------+\n"
"| ``%x``    | class                                                            "
"|\n"
"+-----------+------------------------------------------------------------------+\n"
"| ``%T``    | decoded SMS text                                                 "
"|\n"
"+-----------+------------------------------------------------------------------+\n"
"| ``%A``    | CreatorID of SMS (sending sms)                                   "
"|\n"
"+-----------+------------------------------------------------------------------+\n"
"| ``%V``    | relative validity                                                "
"|\n"
"+-----------+------------------------------------------------------------------+\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:97
msgid ""
".. [#f1] Sender number for received messages (insert to inbox or delivery "
"notifications), destination otherwise."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:99
msgid ".. _Configurable queries:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:101
#, no-wrap
msgid ""
"Configurable queries\n"
"--------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:104
msgid ""
"All configurable queries can be set in :config:section:`[sql]` "
"section. Sequence of rows in selects are mandatory."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:107
msgid ""
"All default queries noted here are noted for MySQL. Actual time and time "
"addition are selected for default queries during initialization."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:109
msgid ".. config:option:: delete_phone"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:111
#, no-wrap
msgid "    Deletes phone from database.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:113 docs/manual/smsd/sql.rst:123 docs/manual/smsd/sql.rst:141 docs/manual/smsd/sql.rst:152 docs/manual/smsd/sql.rst:169 docs/manual/smsd/sql.rst:186 docs/manual/smsd/sql.rst:197 docs/manual/smsd/sql.rst:207 docs/manual/smsd/sql.rst:223 docs/manual/smsd/sql.rst:240 docs/manual/smsd/sql.rst:256 docs/manual/smsd/sql.rst:274 docs/manual/smsd/sql.rst:289 docs/manual/smsd/sql.rst:304 docs/manual/smsd/sql.rst:329 docs/manual/smsd/sql.rst:353 docs/manual/smsd/sql.rst:379 docs/manual/smsd/sql.rst:389
#, no-wrap
msgid "    Default value:\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:115 docs/manual/smsd/sql.rst:125 docs/manual/smsd/sql.rst:143 docs/manual/smsd/sql.rst:154 docs/manual/smsd/sql.rst:171 docs/manual/smsd/sql.rst:188 docs/manual/smsd/sql.rst:199 docs/manual/smsd/sql.rst:209 docs/manual/smsd/sql.rst:225 docs/manual/smsd/sql.rst:242 docs/manual/smsd/sql.rst:258 docs/manual/smsd/sql.rst:276 docs/manual/smsd/sql.rst:291 docs/manual/smsd/sql.rst:306 docs/manual/smsd/sql.rst:331 docs/manual/smsd/sql.rst:355 docs/manual/smsd/sql.rst:381 docs/manual/smsd/sql.rst:391
#, no-wrap
msgid "    .. code-block:: sql\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:117
#, no-wrap
msgid "        DELETE FROM phones WHERE IMEI = %I\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:119
msgid ".. config:option:: insert_phone"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:121
#, no-wrap
msgid "    Inserts phone to database.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:128
#, no-wrap
msgid ""
"        INSERT INTO phones (IMEI, ID, Send, Receive, InsertIntoDB, TimeOut, "
"Client, Battery, Signal) \n"
"        VALUES (%I, %P, %1, %2, NOW(), (NOW() + INTERVAL 10 SECOND) + 0, %N, "
"-1, -1)\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:130 docs/manual/smsd/sql.rst:158 docs/manual/smsd/sql.rst:175 docs/manual/smsd/sql.rst:214 docs/manual/smsd/sql.rst:231 docs/manual/smsd/sql.rst:247 docs/manual/smsd/sql.rst:263 docs/manual/smsd/sql.rst:280 docs/manual/smsd/sql.rst:295 docs/manual/smsd/sql.rst:312 docs/manual/smsd/sql.rst:336 docs/manual/smsd/sql.rst:362 docs/manual/smsd/sql.rst:396
#, no-wrap
msgid "    Query specific parameters:\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:135
#, no-wrap
msgid ""
"    ``%1``\n"
"        enable send (yes or no) - configuration option Send\n"
"    ``%2``\n"
"        enable receive (yes or no)  - configuration option Receive\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:137
msgid ".. config:option:: save_inbox_sms_select"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:139
#, no-wrap
msgid "    Select message for update delivery status.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:146
#, no-wrap
msgid ""
"        SELECT ID, Status, SendingDateTime, DeliveryDateTime, SMSCNumber "
"FROM sentitems \n"
"        WHERE DeliveryDateTime IS NULL AND SenderID = %P AND TPMR = %t AND "
"DestinationNumber = %R\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:148
msgid ".. config:option:: save_inbox_sms_update_delivered"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:150
#, no-wrap
msgid "    Update message delivery status if message was delivered.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:156
#, no-wrap
msgid ""
"        UPDATE sentitems SET DeliveryDateTime = %C, Status = %1, StatusError "
"= %e WHERE ID = %2 AND TPMR = %t\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:163 docs/manual/smsd/sql.rst:180
#, no-wrap
msgid ""
"    ``%1``\n"
"        delivery status returned by GSM network\n"
"    ``%2``\n"
"        ID of message\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:165
msgid ".. config:option:: save_inbox_sms_update"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:167
#, no-wrap
msgid "    Update message if there is an delivery error.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:173
#, no-wrap
msgid ""
"        UPDATE sentitems SET Status = %1, StatusError = %e WHERE ID = %2 AND "
"TPMR = %t\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:182
msgid ".. config:option:: save_inbox_sms_insert"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:184
#, no-wrap
msgid "    Insert received message.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:191
#, no-wrap
msgid ""
"        INSERT INTO inbox (ReceivingDateTime, Text, SenderNumber, Coding, "
"SMSCNumber, UDH, \n"
"        Class, TextDecoded, RecipientID) VALUES (%d, %E, %R, %c, %F, %u, %x, "
"%T, %P)\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:193
msgid ".. config:option:: update_received"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:195
#, no-wrap
msgid "    Update statistics after receiving message.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:201
#, no-wrap
msgid "        UPDATE phones SET Received = Received + 1 WHERE IMEI = %I\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:203
msgid ".. config:option:: refresh_send_status"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:205
#, no-wrap
msgid "    Update messages in outbox.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:212
#, no-wrap
msgid ""
"        UPDATE outbox SET SendingTimeOut = (NOW() + INTERVAL locktime "
"SECOND) + 0 \n"
"        WHERE ID = %1 AND (SendingTimeOut < NOW() OR SendingTimeOut IS "
"NULL)\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:217 docs/manual/smsd/sql.rst:250 docs/manual/smsd/sql.rst:283 docs/manual/smsd/sql.rst:298
#, no-wrap
msgid ""
"    ``%1``\n"
"        ID of message\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:219
msgid ".. config:option:: find_outbox_sms_id"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:221
#, no-wrap
msgid "    Find sms messages for sending.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:229
#, no-wrap
msgid ""
"        SELECT ID, InsertIntoDB, SendingDateTime, SenderID FROM outbox \n"
"        WHERE SendingDateTime < NOW() AND SendingTimeOut <  NOW() AND \n"
"        ( SenderID is NULL OR SenderID = '' OR SenderID = %P ) ORDER BY "
"InsertIntoDB ASC LIMIT %1\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:234
#, no-wrap
msgid ""
"    ``%1``\n"
"        limit of sms messages sended in one walk in loop\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:236
msgid ".. config:option:: find_outbox_body"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:238
#, no-wrap
msgid "    Select body of message.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:245
#, no-wrap
msgid ""
"        SELECT Text, Coding, UDH, Class, TextDecoded, ID, DestinationNumber, "
"MultiPart, \n"
"        RelativeValidity, DeliveryReport, CreatorID FROM outbox WHERE "
"ID=%1\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:252
msgid ".. config:option:: find_outbox_multipart"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:254
#, no-wrap
msgid "    Select remaining parts of sms message.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:261
#, no-wrap
msgid ""
"        SELECT Text, Coding, UDH, Class, TextDecoded, ID, SequencePosition "
"\n"
"        FROM outbox_multipart WHERE ID=%1 AND SequencePosition=%2\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:268
#, no-wrap
msgid ""
"    ``%1``\n"
"        ID of message\n"
"    ``%2``\n"
"        Number of multipart message\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:270
msgid ".. config:option:: delete_outbox"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:272
#, no-wrap
msgid "    Remove messages from outbox after threir successful send.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:278
#, no-wrap
msgid "        DELETE FROM outbox WHERE ID=%1\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:285
msgid ".. config:option:: delete_outbox_multipart"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:287
#, no-wrap
msgid "    Remove messages from outbox_multipart after threir successful send.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:293
#, no-wrap
msgid "        DELETE FROM outbox_multipart WHERE ID=%1\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:300
msgid ".. config:option:: create_outbox"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:302
#, no-wrap
msgid "    Create message (insert to outbox).\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:310
#, no-wrap
msgid ""
"        INSERT INTO outbox (CreatorID, SenderID, DeliveryReport, MultiPart, "
"\n"
"        InsertIntoDB, Text, DestinationNumber, RelativeValidity, Coding, "
"UDH, Class, \n"
"        TextDecoded) VALUES (%1, %P, %2, %3, NOW(), %E, %R, %V, %c, %u, %x, "
"%T)\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:323 docs/manual/smsd/sql.rst:347
#, no-wrap
msgid ""
"    ``%1``\n"
"        creator of message\n"
"    ``%2``\n"
"        delivery status report - yes/default\n"
"    ``%3``\n"
"        multipart - FALSE/TRUE\n"
"    ``%4``\n"
"        Part (part number)\n"
"    ``%5``\n"
"        ID of message\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:325
msgid ".. config:option:: create_outbox_multipart"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:327
#, no-wrap
msgid "    Create message remaining parts.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:334
#, no-wrap
msgid ""
"        INSERT INTO outbox_multipart (SequencePosition, Text, Coding, UDH, "
"Class, \n"
"        TextDecoded, ID) VALUES (%4, %E, %c, %u, %x, %T, %5)\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:349
msgid ".. config:option:: add_sent_info"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:351
#, no-wrap
msgid "    Insert to sentitems.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:360
#, no-wrap
msgid ""
"        INSERT INTO sentitems "
"(CreatorID,ID,SequencePosition,Status,SendingDateTime,\n"
"        SMSCNumber, TPMR, "
"SenderID,Text,DestinationNumber,Coding,UDH,Class,TextDecoded,\n"
"        InsertIntoDB,RelativeValidity) \n"
"        VALUES (%A, %1, %2, %3, NOW(), %F, %4, %P, %E, %R, %c, %u, %x, %T, "
"%5, %V)\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:373
#, no-wrap
msgid ""
"    ``%1``\n"
"        ID of sms message\n"
"    ``%2``\n"
"        part number (for multipart sms)\n"
"    ``%3``\n"
"        message state (SendingError, Error, SendingOK, SendingOKNoReport)\n"
"    ``%4``\n"
"        message reference (TPMR)\n"
"    ``%5``\n"
"        time when inserted in db\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:375
msgid ".. config:option:: update_sent"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:377
#, no-wrap
msgid "    Update sent statistics after sending message.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:383
#, no-wrap
msgid "         UPDATE phones SET Sent= Sent + 1 WHERE IMEI = %I\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:385
msgid ".. config:option:: refresh_phone_status"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:387
#, no-wrap
msgid "    Update phone status (battery, signal).\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:394
#, no-wrap
msgid ""
"        UPDATE phones SET TimeOut= (NOW() + INTERVAL 10 SECOND) + 0, \n"
"        Battery = %1, Signal = %2 WHERE IMEI = %I\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/sql.rst:400
#, no-wrap
msgid ""
"    ``%1``\n"
"        battery percent\n"
"    ``%2``\n"
"        signal percent\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/files.rst:2
msgid ".. _gammu-smsd-files:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/files.rst:4
#, no-wrap
msgid ""
"Files backend\n"
"=============\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/files.rst:8
msgid ""
"FILES backend stores all data on a filesystem in folders defined by "
"configuration (see :ref:`gammu-smsdrc` for description of configuration "
"options)."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/files.rst:11
msgid "Receiving of messages +++++++++++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/files.rst:15
msgid ""
"Received messages are stored in a folder defined by configuration. The "
"filename will be ``IN<date>_<time>_<serial>_<sender>_<sequence>.<ext>``, for "
"example ``NN20021130_021531_00_+45409000931640979_00.txt``."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/files.rst:17 docs/manual/smsd/files.rst:45
msgid "Explanation of fields:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/files.rst:30
#, no-wrap
msgid ""
"``<date>``\n"
"    date in format ``YYYYMMDD``\n"
"``<time>``\n"
"    time in format ``HHMMSS``\n"
"``<sender>``\n"
"    sender number\n"
"``<serial>``\n"
"    order of a message (in case more messages were received at same time), "
"in format ``NN``\n"
"``<sequence>``\n"
"    part of the message for multipart messages, in format ``NN``\n"
"``<ext>``\n"
"    ``txt`` for text message, 8-bit messages are stored with ``bin`` "
"extension, ``smsbackup`` for :ref:`gammu-smsbackup`\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/files.rst:33
msgid ""
"The content of the file is content of the message and the format is defined "
"by configuration directive :config:option:`InboxFormat` (see "
":ref:`gammu-smsdrc`)."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/files.rst:36
msgid "Transmitting of messages ++++++++++++++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/files.rst:39
msgid ""
"Transmitted messages are read from a folder defined by configuration. The "
"filename should be one of the following formats:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/files.rst:43
msgid ""
"- ``OUT<recipient>.<ext>`` - ``OUT<priority>_<recipient>_<serial>.<ext>`` - "
"``OUT<priority><date>_<time>_<serial>_<recipient>_<note>.<ext>``"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/files.rst:54
#, no-wrap
msgid ""
"``<recipient>``\n"
"    recipient number where to send message\n"
"``<priority>``\n"
"    an alphabetic character (A-Z) A = highest priority\n"
"``<ext>``\n"
"    ``txt`` for normal text SMS, ``smsbackup`` for :ref:`gammu-smsbackup`\n"
"``<note>``\n"
"    any artibrary text which is ignored\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/files.rst:56
msgid "For text messages, you can additionally append flags to extension:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/files.rst:63
#, no-wrap
msgid ""
"    ``d`` \n"
"        delivery report requested\n"
"    ``f`` \n"
"        flash SMS\n"
"    ``b`` \n"
"        WAP bookmark as name,URL\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/files.rst:65
msgid "Other fields are same as for received messages."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/files.rst:68
msgid ""
"For example OUTG20040620_193810_123_+4512345678_xpq.txtdf is a flash text "
"SMS requesting delivery reports."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/files.rst:71
msgid ""
"SMSes will be transmitted sequentially based on the file name. The contents "
"of the file is the SMS to be transmitted (in Unicode or standard character "
"set)."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/files.rst:75
msgid ""
"The contents of the file is the SMS to be transmitted (in Unicode or "
"standard character set), for WAP bookmarks it is split on as Name,URL, for "
"text messages whole file content is used."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/files.rst:78
msgid ""
"Please note that if file is not in Unicode, encoding is detected based on "
"locales, which do not have to be configured if SMSD is running from init "
"script. If this is your case, please add locales definition to init script."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/index.rst:2
msgid ".. _smsd:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/index.rst:4
#, no-wrap
msgid ""
"SMS Daemon\n"
"==========\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/index.rst:15
#, no-wrap
msgid ""
"    overview\n"
"    usage\n"
"    manual\n"
"    config\n"
"    run\n"
"    backends\n"
"    code\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/usage.rst:2
#, no-wrap
msgid ""
"Usage\n"
"=====\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/usage.rst:6
msgid ""
"This chapter will describe basic ways of using SMSD. It's use is not limited "
"to these, but they can give you overview of SMSD abilities."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/usage.rst:8
#, no-wrap
msgid ""
"Storing Messages in Backend\n"
"---------------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/usage.rst:13
msgid ""
"The standard mode of operating SMSD. You simply configure backend service, "
"and all received messages will end up in it and any message you put into "
"outbox storage will be sent."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/usage.rst:15
#, no-wrap
msgid ""
"Creating Messages to Send\n"
"-------------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/usage.rst:20
msgid ""
"Creating of messages to send heavily depends on service backend you "
"use. Most of them support :ref:`gammu-smsd-inject`, which can be used to "
"construct the message, or you can just insert message manually to the "
"backend storage."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/usage.rst:23
msgid ""
"Alternatively you can use :c:func:`SMSD_InjectSMS` (from C) or using "
":meth:`gammu.smsd.SMSD.GetStatus` (from Python)."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/usage.rst:25
#, no-wrap
msgid ""
"Notification about Received Messages\n"
"------------------------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/usage.rst:29
msgid ""
"Once SMSD receives message and stores it in backend service, it can invoke "
"your own program to do any message processing, see :ref:`smsd_run`."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/usage.rst:31
#, no-wrap
msgid ""
"Monitoring SMSD Status\n"
"----------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/usage.rst:35
msgid ""
"You can use :ref:`gammu-smsd-monitor` to monitor status of SMSD. It uses "
"shared memory segment to get current status of running SMSD."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/usage.rst:39
msgid ""
"Alternatively you can get the same functionality from libGammu using "
":c:func:`SMSD_GetStatus` or python-gammu using "
":meth:`gammu.smsd.SMSD.GetStatus`."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/usage.rst:41
#, no-wrap
msgid ""
"Reporting Bugs\n"
"--------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/usage.rst:44
msgid "Please report bugs to <http://bugs.cihar.com>."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/usage.rst:46
msgid "Before reporting a bug, please enable verbose logging in SMSD configuration:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/usage.rst:53 docs/manual/smsd/config.rst:546
#, no-wrap
msgid ""
"    [smsd]\n"
"    debuglevel = 255\n"
"    logfile = smsd.log\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/usage.rst:54
msgid "and include this verbose log within bug report."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:2
msgid ".. _gammu-smsd-tables:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:4
#, no-wrap
msgid ""
"SMSD Database Structure\n"
"=======================\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:8
msgid ""
"The backends themselves are described in their sections, this document "
"describes general database structure and required tables."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:14
msgid ""
"More SMS daemons can share single database. If you do not specify PhoneID in "
"their configuration, all are treated equally and you have no guarantee which "
"one sends outgoing message. If you configure PhoneID and use it when "
"inserting message to the ``outbox`` table (:ref:`gammu-smsd-inject` does "
"this), each SMS daemon will have separate outbox queue."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:16
#, no-wrap
msgid ""
"Receiving of messages\n"
"---------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:19
msgid "Received messages are stored in ``inbox`` table."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:21
#, no-wrap
msgid ""
"Transmitting of messages\n"
"------------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:25
msgid ""
"Transmitted messages are read from table ``outbox`` and possible subsequent "
"parts of the same message from ``outbox_multipart``."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:27
#, no-wrap
msgid ""
"Description of tables\n"
"---------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:31
msgid "daemons +++++++"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:33
msgid "Information about running daemons."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:36
msgid "gammu +++++"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:39
msgid ""
"Table holding single value - version of a database schema. See HISTORY for "
"details what has changed."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:42
msgid "inbox +++++"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:44
msgid "Table where received messages will be stored."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:46 docs/manual/smsd/tables.rst:91 docs/manual/smsd/tables.rst:153 docs/manual/smsd/tables.rst:181 docs/manual/smsd/tables.rst:227
msgid "Fields description:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:49 docs/manual/smsd/tables.rst:94 docs/manual/smsd/tables.rst:230
#, no-wrap
msgid ""
"``UpdatedInDB`` (timestamp)\n"
"    when somebody (daemon, user, etc.) updated it\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:52
#, no-wrap
msgid ""
"``ReceivingDateTime`` (timestamp)\n"
"    when SMS was received\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:55
#, no-wrap
msgid ""
"``Text`` (text)\n"
"    encoded SMS text (for all SMS)\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:58
#, no-wrap
msgid ""
"``SenderNumber`` (varchar(20))\n"
"    decoded SMS sender number\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:61 docs/manual/smsd/tables.rst:110 docs/manual/smsd/tables.rst:273
#, no-wrap
msgid ""
"``Coding`` (enum('Default_No_Compression', 'Unicode_No_Compression', '8bit', "
"'Default_Compression', 'Unicode_Compression'))\n"
"    SMS text coding\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:64
#, no-wrap
msgid ""
"``UDH`` (text)\n"
"    encoded User Data Header text\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:67
#, no-wrap
msgid ""
"``SMSCNumber`` (varchar(20))\n"
"    decoded SMSC number\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:70
#, no-wrap
msgid ""
"``Class`` (integer)\n"
"    SMS class or \\-1 (0 is flash SMS, 1 is normal one)\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:73
#, no-wrap
msgid ""
"``TextDecoded`` (varchar(160))\n"
"    decoded SMS text (for Default Alphabet/Unicode SMS)\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:76
#, no-wrap
msgid ""
"``ID`` (integer unsigned)\n"
"    SMS identificator (for using with external applications)\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:79
#, no-wrap
msgid ""
"``RecipientID`` (text)\n"
"    which Gammu daemon has added it\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:82
#, no-wrap
msgid ""
"``Processed`` (enum('false', 'true'))\n"
"    you can use for marking, whether SMS was processed or not\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:86
msgid "outbox ++++++"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:89
msgid ""
"Messages enqueued for sending should be placed in this table. If message is "
"multipart, subsequent parts are stored in table outbox_multipart."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:97 docs/manual/smsd/tables.rst:233
#, no-wrap
msgid ""
"``InsertIntoDB`` (timestamp)\n"
"    when message was inserted into database\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:100
#, no-wrap
msgid ""
"``SendingDateTime`` (timestamp)\n"
"    set it to some value, when want to force sending after some planned "
"time\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:104
#, no-wrap
msgid ""
"``Text`` (text)\n"
"    SMS text encoded using hex values in proper coding. If you want to use\n"
"    TextDecoded field, keep this NULL (or empty).\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:107
#, no-wrap
msgid ""
"``DestinationNumber`` (varchar(20))\n"
"    recipient number\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:114
#, no-wrap
msgid ""
"``UDH`` (text)\n"
"    User Data Header encoded using hex values which will be used for "
"constructing\n"
"    the message. Without this, message will be sent as plain text.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:117 docs/manual/smsd/tables.rst:282
#, no-wrap
msgid ""
"``Class`` (integer)\n"
"    SMS class or \\-1 (0 is normal SMS, 1 is flash one)\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:120 docs/manual/smsd/tables.rst:285
#, no-wrap
msgid ""
"``TextDecoded`` (varchar(160))\n"
"    SMS text in \"human readable\" form\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:123
#, no-wrap
msgid ""
"``ID`` (integer unsigned)\n"
"    SMS/SMS sequence ID\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:126
#, no-wrap
msgid ""
"    Please note that this number has to be unique also for sentitems table, "
"so\n"
"    reusing message IDs might not be a good idea.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:129
#, no-wrap
msgid ""
"``MultiPart`` (enum('false','true'))\n"
"    info, whether there are more SMS from this sequence in "
"outbox_multipart\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:132 docs/manual/smsd/tables.rst:300
#, no-wrap
msgid ""
"``RelativeValidity`` (integer)\n"
"    SMS relative validity like encoded using GSM specs\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:135
#, no-wrap
msgid ""
"``SenderID`` (text)\n"
"    which SMSD instance should send this one sequence\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:138
#, no-wrap
msgid ""
"``SendingTimeOut`` (timestamp)\n"
"    used by SMSD instance for own targets\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:141
#, no-wrap
msgid ""
"``DeliveryReport`` (enum('default','yes','no'))\n"
"    when default is used, Delivery Report is used or not according to SMSD "
"instance settings; yes forces Delivery Report.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:145
#, no-wrap
msgid ""
"``CreatorID`` (text)\n"
"    sender identification, it has to match PhoneID in SMSD configuration to "
"make\n"
"    SMSD process this message\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:149
msgid "outbox_multipart ++++++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:151
msgid "Data for outgoing multipart messages."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:168
#, no-wrap
msgid ""
"``ID`` (integer unsigned)\n"
"    the same meaning as values in outbox table\n"
"``Text`` (text)\n"
"    the same meaning as values in outbox table\n"
"``Coding`` (enum('Default_No_Compression', 'Unicode_No_Compression', '8bit', "
"'Default_Compression', 'Unicode_Compression'))\n"
"    the same meaning as values in outbox table\n"
"``UDH`` (text)\n"
"    the same meaning as values in outbox table\n"
"``Class`` (integer)\n"
"    the same meaning as values in outbox table\n"
"``TextDecoded`` (varchar(160))\n"
"    the same meaning as values in outbox table\n"
"``ID`` (integer unsigned)\n"
"    the same meaning as values in outbox table\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:172
#, no-wrap
msgid ""
"``SequencePosition`` (integer)\n"
"    info, what is SMS number in SMS sequence (start at 2, first part is in "
"outbox\n"
"    table).\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:176
msgid "phones ++++++"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:179
msgid ""
"Information about connected phones. This table is periodically refreshed and "
"you can get information such as battery or signal level from here."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:184
#, no-wrap
msgid ""
"``ID`` (text)\n"
"    PhoneID value\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:187
#, no-wrap
msgid ""
"``UpdatedInDB`` (timestamp)\n"
"    when this record has been updated\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:190
#, no-wrap
msgid ""
"``InsertIntoDB`` (timestamp)\n"
"    when this record has been created (when phone has been connected)\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:193
#, no-wrap
msgid ""
"``TimeOut`` (timestamp)\n"
"    when this record expires\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:196
#, no-wrap
msgid ""
"``Send`` (boolean)\n"
"    indicates whether SMSD is sending messages, depends on configuration "
"directive :config:option:`Send`\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:199
#, no-wrap
msgid ""
"``Receive`` (boolean)\n"
"    indicates whether SMSD is receiving messages, depends on configuration "
"directive :config:option:`Receive`\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:202
#, no-wrap
msgid ""
"``IMEI`` (text)\n"
"    IMEI of phone\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:205
#, no-wrap
msgid ""
"``Client`` (text)\n"
"    client name, usually string Gammu with version\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:208
#, no-wrap
msgid ""
"``Battery`` (integer)\n"
"    battery level in percent (or \\-1 if unknown)\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:211
#, no-wrap
msgid ""
"``Signal`` (integer)\n"
"    signal level in percent (or \\-1 if unknown)\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:215
#, no-wrap
msgid ""
"``Sent`` (integer)\n"
"    Number of sent SMS messages (SMSD does not reset this counter, so it "
"might\n"
"    overflow).\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:219
#, no-wrap
msgid ""
"``Received`` (integer)\n"
"    Number of received SMS messages (SMSD does not reset this counter, so it "
"might\n"
"    overflow).\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:222
msgid "sentitems +++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:225
msgid ""
"Log of sent messages (and unsent ones with error code). Also if delivery "
"reports are enabled, message state is updated after receiving delivery "
"report."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:236
#, no-wrap
msgid ""
"``SendingDateTime`` (timestamp)\n"
"    when message has been sent\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:239
#, no-wrap
msgid ""
"``DeliveryDateTime`` (timestamp)\n"
"    Time of receiving delivery report (if it has been enabled).\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:243
#, no-wrap
msgid ""
"``Status`` (enum('SendingOK', 'SendingOKNoReport', 'SendingError', "
"'DeliveryOK', 'DeliveryFailed', 'DeliveryPending', 'DeliveryUnknown', "
"'Error'))\n"
"    Status of message sending. SendingError mens that phone failed to send "
"the\n"
"    message, Error indicates some other error while processing message.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:260
#, no-wrap
msgid ""
"    ``SendingOK`` \n"
"        Message has been sent, waiting for delivery report.\n"
"    ``SendingOKNoReport`` \n"
"        Message has been sent without asking for delivery report.\n"
"    ``SendingError``\n"
"        Sending has failed.\n"
"    ``DeliveryOK`` \n"
"        Delivery report arrived and reported success.\n"
"    ``DeliveryFailed`` \n"
"        Delivery report arrived and reports failure.\n"
"    ``DeliveryPending`` \n"
"        Delivery report announced pending deliver.\n"
"    ``DeliveryUnknown`` \n"
"        Delivery report reported unknown status.\n"
"    ``Error`` \n"
"        Some other error happened during sending (usually bug in SMSD).\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:264
#, no-wrap
msgid ""
"``StatusError`` (integer)\n"
"    Status of delivery from delivery report message, codes are defined in "
"GSM\n"
"    specification 03.40 section 9.2.3.15 (TP-Status).\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:267
#, no-wrap
msgid ""
"``Text`` (text)\n"
"    SMS text encoded using hex values\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:270
#, no-wrap
msgid ""
"``DestinationNumber`` (varchar(20))\n"
"    decoded destination number for SMS\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:276
#, no-wrap
msgid ""
"``UDH`` (text)\n"
"    User Data Header encoded using hex values\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:279
#, no-wrap
msgid ""
"``SMSCNumber`` (varchar(20))\n"
"    decoded number of SMSC, which sent SMS\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:288
#, no-wrap
msgid ""
"``ID`` (integer unsigned)\n"
"    SMS ID\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:291
#, no-wrap
msgid ""
"``SenderID`` (text)\n"
"    which SMSD instance sent this one sequence\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:294
#, no-wrap
msgid ""
"``SequencePosition`` (integer)\n"
"    SMS number in SMS sequence\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:297
#, no-wrap
msgid ""
"``TPMR`` (integer)\n"
"    Message Reference like in GSM specs\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:303
#, no-wrap
msgid ""
"``CreatorID`` (text)\n"
"    copied from CreatorID from outbox table, matches PhoneID\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:307
msgid "pbk +++"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:309 docs/manual/smsd/tables.rst:314
msgid "Not used by SMSD currently, included only for application usage."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:312
msgid "pbk_groups ++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:316
#, no-wrap
msgid ""
"History\n"
"-------\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:319
msgid "History of schema versions:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:335
#, no-wrap
msgid ""
"12\n"
"    the changes only affect MySQL structure changing default values for\n"
"    timestamps from ``0000-00-00 00:00:00`` to ``CURRENT_TIMESTAMP()`` by \n"
"    using triggers, to update to this version, just execute triggers \n"
"    definition at the end of SQL file.\n"
"11\n"
"    all fields for storing message text are no longer limited to 160 "
"chars,\n"
"    but are arbitrary length text fields (1.25.92)\n"
"10 \n"
"    ``DeliveryDateTime`` is now NULL when message is not delivered, added "
"several\n"
"    indexes\n"
"9 \n"
"    added sent/received counters to phones table\n"
"8 \n"
"    introduced phones table\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:338
#, no-wrap
msgid ""
"7\n"
"    added CreatorID to tables (it holds PhoneID if set)\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:345
msgid "Creating tables +++++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:349
msgid ""
"SQL scripts to create all needed tables for most databases are included in "
"Gammu documentation (docs/sql). As well as some PHP scripts interacting with "
"the database."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:351
msgid "For example to create SQLite tables, issue following command:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:353 docs/manual/smsd/run.rst:110 docs/manual/smsd/run.rst:125 docs/manual/smsd/run.rst:141 docs/manual/smsd/inject.rst:54 docs/manual/smsd/inject.rst:60 docs/manual/smsd/inject.rst:66 docs/manual/smsd/inject.rst:72 docs/manual/smsd/inject.rst:78 docs/manual/smsd/inject.rst:84 docs/manual/smsd/inject.rst:90 docs/manual/smsd/smsd.rst:110 docs/manual/smsd/smsd.rst:116 docs/manual/smsd/smsd.rst:135 docs/manual/smsd/smsd.rst:141 docs/manual/smsd/smsd.rst:149 docs/manual/smsd/smsd.rst:164 docs/manual/gammu/index.rst:1811 docs/manual/gammu/index.rst:1817 docs/manual/gammu/index.rst:1823 docs/manual/gammu/index.rst:1829 docs/manual/gammu/index.rst:1835 docs/manual/gammu/index.rst:1841 docs/manual/gammu/index.rst:1847 docs/manual/gammu/index.rst:1856 docs/manual/gammu/index.rst:1862 docs/manual/gammu/index.rst:1871 docs/manual/gammu/index.rst:1885 docs/manual/gammu/index.rst:1891 docs/manual/gammu/index.rst:1897 docs/manual/gammu/index.rst:1920 docs/manual/project/documentation.rst:19 docs/manual/project/documentation.rst:26 docs/manual/project/documentation.rst:48 docs/manual/project/documentation.rst:56 docs/manual/project/install.rst:106 docs/manual/project/install.rst:113 docs/manual/project/install.rst:119 docs/manual/project/install.rst:125 docs/manual/project/install.rst:131 docs/manual/project/install.rst:171 docs/manual/project/install.rst:267 docs/manual/project/install.rst:273 docs/manual/project/install.rst:285 docs/manual/project/install.rst:297 docs/manual/project/install.rst:328
msgid ".. code-block:: sh"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:355
#, no-wrap
msgid "    sqlite3 smsd.db < docs/sql/sqlite.sql\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:358
msgid "Injecting a message using SQL +++++++++++++++++++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:362
msgid ""
"To send a message, you can either use :ref:`gammu-smsd-inject`, which does "
"all the magic for you, or you can insert the message manually. The simplest "
"example is short text message:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:364 docs/manual/smsd/tables.rst:394 docs/manual/smsd/mysql.rst:21
msgid ".. code-block:: sql"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:376
#, no-wrap
msgid ""
"    INSERT INTO outbox (\n"
"        DestinationNumber,\n"
"        TextDecoded,\n"
"        CreatorID,\n"
"        Coding\n"
"    ) VALUES (\n"
"        '800123465', \n"
"        'This is a SQL test message', \n"
"        'Program',\n"
"        'Default_No_Compression'\n"
"    );\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:379
msgid "Injecting long message using SQL ++++++++++++++++++++++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:383
msgid ""
"Inserting multipart messages is a bit more tricky, you need to construct "
"also UDH header and store it hexadecimally written into UDH field. Unless "
"you have a good reason to do this manually, use :ref:`gammu-smsd-inject`."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:390
msgid ""
"For long text message, the UDH starts with ``050003`` followed by byte as a "
"message reference (you can put anything there, but it should be different "
"for each message, ``D3`` in following example), byte for number of messages "
"(``02`` in example, it should be unique for each message you send to same "
"phone number)  and byte for number of current message (``01`` for first "
"message, ``02`` for second, etc.)."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:392
msgid "For example long text message of two parts could look like following:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:410
#, no-wrap
msgid ""
"    INSERT INTO outbox (\n"
"        CreatorID,\n"
"        MultiPart,\n"
"        DestinationNumber,\n"
"        UDH,\n"
"        TextDecoded,\n"
"        Coding\n"
"    ) VALUES (\n"
"        'Gammu 1.23.91',\n"
"        'true',\n"
"        '123465',\n"
"        '050003D30201',\n"
"        'Mqukqirip ya konej eqniu rejropocejor hugiygydewl tfej nrupxujob "
"xuemymiyliralj. Te tvyjuh qaxumur ibewfoiws zuucoz tdygu gelum L ejqigqesykl "
"kya jdytbez',\n"
"        'Default_No_Compression'\n"
"    )\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:425
#, no-wrap
msgid ""
"    INSERT INTO outbox_multipart (\n"
"        SequencePosition,\n"
"        UDH,\n"
"        Class,\n"
"        TextDecoded,\n"
"        ID,\n"
"        Coding\n"
"    ) VALUES (\n"
"        2,\n"
"        '050003D30202',\n"
"        'u xewz qisubevumxyzk ufuylehyzc. Nse xobq dfolizygqysj t "
"bvowsyhyhyemim ovutpapeaempye giuuwbib.', \n"
"        <ID_OF_INSERTED_RECORD_IN_OUBOX_TABLE>,\n"
"        'Default_No_Compression'\n"
"    )\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/tables.rst:429
#, no-wrap
msgid ""
"    Adding UDH means that you have less space for text, in above example you "
"\n"
"    can use only 153 characters in single message.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/pgsql.rst:2
msgid ".. _gammu-smsd-pgsql:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/pgsql.rst:4
#, no-wrap
msgid ""
"PostgreSQL Backend\n"
"==================\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/pgsql.rst:9
msgid ""
"PGSQL backend stores all data in a `PostgreSQL`_ database server, which "
"parameters are defined by configuration (see :ref:`gammu-smsdrc` for "
"description of configuration options)."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/pgsql.rst:15
msgid ".. _PostgreSQL: http://www.postgresql.org/"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/pgsql.rst:20
msgid "SQL script for creating tables in PostgreSQL database:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/pgsql.rst:23
#, no-wrap
msgid ""
".. literalinclude:: ../../sql/pgsql.sql\n"
"   :language: sql\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/pgsql.rst:26
#, no-wrap
msgid "    You can find the script in :file:`docs/sql/pgsql.sql` as well. \n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/null.rst:2
msgid ".. _gammu-smsd-null:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/null.rst:4
#, no-wrap
msgid ""
"Null Backend\n"
"============\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/null.rst:8
msgid ""
"NULL backend does not store data at all. It could be useful in case you "
"don't want to store messages at all and you want to process then in "
":config:option:`RunOnReceive` handler."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:2
msgid ".. _smsd_run:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:4
#, no-wrap
msgid ""
"RunOnReceive Directive\n"
"======================\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:12
msgid ""
"Gammu SMSD can be configured by :config:option:`RunOnReceive` directive (see "
":ref:`gammu-smsdrc` for details) to run defined program after receiving "
"message."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:18
msgid ""
"This parameter is executed through shell, so you might need to escape some "
"special characters and you can include any number of "
"parameters. Additionally parameters with identifiers of received messages "
"are appended to the command line. The identifiers depend on used service "
"backend, typically it is ID of inserted row for database backends or file "
"name for file based backends."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:24
msgid ""
"Gammu SMSD waits for the script to terminate. If you make some time "
"consuming there, it will make SMSD not receive new messages. However to "
"limit breakage from this situation, the waiting time is limited to two "
"minutes. After this time SMSD will continue in normal operation and might "
"execute your script again."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:26
#, no-wrap
msgid ""
"Environment\n"
"-----------\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:31
msgid ""
"program is executed with environment which contains lot of information about "
"the message. You can use it together with NULL service (see "
":ref:`gammu-smsd-null`) to implement completely own processing of messages."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:34
msgid "Global variables ++++++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:36
msgid ".. envvar:: SMS_MESSAGES"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:38
#, no-wrap
msgid "    Number of physical messages received.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:40
msgid ".. envvar:: DECODED_PARTS"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:42
#, no-wrap
msgid "    Number of decoded message parts.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:45
msgid "Per message variables +++++++++++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:48
msgid ""
"The variables further described as ``SMS_1_...`` are generated for each "
"physical message, where 1 is replaced by current number of message."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:50
msgid ".. envvar:: SMS_1_CLASS"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:52
#, no-wrap
msgid "    Class of message.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:54
msgid ".. envvar:: SMS_1_NUMBER"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:56
#, no-wrap
msgid "    Sender number.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:58
msgid ".. envvar:: SMS_1_TEXT"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:60
#, no-wrap
msgid "    Message text. Text is not available for 8-bit binary messages.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:63
msgid "Per part variables ++++++++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:67
msgid ""
"The variables further described as ``DECODED_1_...`` are generated for each "
"message part, where 1 is replaced by current number of part. Set are only "
"those variables whose content is present in the message."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:69
msgid ".. envvar:: DECODED_1_TEXT"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:71
#, no-wrap
msgid "    Decoded long message text.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:73
msgid ".. envvar:: DECODED_1_MMS_SENDER"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:75
#, no-wrap
msgid "    Sender of MMS indication message.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:77
msgid ".. envvar:: DECODED_1_MMS_TITLE"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:79
#, no-wrap
msgid "    title of MMS indication message.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:81
msgid ".. envvar:: DECODED_1_MMS_ADDRESS"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:83
#, no-wrap
msgid "    Address (URL) of MMS from MMS indication message.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:85
msgid ".. envvar:: DECODED_1_MMS_SIZE"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:87
#, no-wrap
msgid "    Size of MMS as specified in MMS indication message.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:94
msgid "Activating RunOnReceive +++++++++++++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:97
msgid ""
"To activate this feature you need to set :config:option:`RunOnReceive` in "
"the :ref:`gammu-smsdrc`."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:102
#, no-wrap
msgid ""
"    [smsd]\n"
"    RunOnReceive = /path/to/script.sh\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:105
msgid ""
"Processing messages from the files backend "
"++++++++++++++++++++++++++++++++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:108
msgid ""
"Following script (if used as :config:option:`RunOnReceive` handler) passes "
"message data to other program. This works only with the "
":ref:`gammu-smsd-files`."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:117
#, no-wrap
msgid ""
"    #!/bin/sh\n"
"    INBOX=/path/to/smsd/inbox\n"
"    PROGRAM=/bin/cat\n"
"    for ID in \"$@\" ; do\n"
"        $PROGRAM < $INBOX/$ID\n"
"    done\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:120
msgid "Passing message text to program +++++++++++++++++++++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:123
msgid ""
"Following script (if used as :config:option:`RunOnReceive` handler) passes "
"message text and sender to external program."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:131
#, no-wrap
msgid ""
"    #!/bin/sh\n"
"    PROGRAM=/bin/echo\n"
"    for i in `seq $SMS_MESSAGES` ; do\n"
"        eval \"$PROGRAM \\\"\\${SMS_${i}_NUMBER}\\\" "
"\\\"\\${SMS_${i}_TEXT}\\\"\"\n"
"    done\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:135
msgid ""
"Passing MMS indication parameters to external program "
"+++++++++++++++++++++++++++++++++++++++++++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:139
msgid ""
"Following script (if used as :config:option:`RunOnReceive` handler) will "
"write information about each received MMS indication to the log file. Just "
"replace echo command with your own program to do custom processing."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:150
#, no-wrap
msgid ""
"    #!/bin/sh\n"
"    if [ $DECODED_PARTS -eq 0 ] ; then\n"
"        # No decoded parts, nothing to process\n"
"        exit\n"
"    fi\n"
"    if [ \"$DECODED_1_MMS_ADDRESS\" ] ; then\n"
"        echo \"$DECODED_1_MMS_ADDRESS\" \"$DECODED_1_MMS_SENDER\" "
"\"$DECODED_1_MMS_TITLE\" >> /tmp/smsd-mms.log\n"
"    fi\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:153
msgid "Processing message text in Python +++++++++++++++++++++++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:156
msgid ""
"Following script (if used as :config:option:`RunOnReceive` handler) written "
"in Python will concatenate all text from received message:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:158
msgid ".. code-block:: python"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:162
#, no-wrap
msgid ""
"    #!/usr/bin/python\n"
"    import os\n"
"    import sys\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:164
#, no-wrap
msgid "    numparts = int(os.environ['DECODED_PARTS'])\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:169
#, no-wrap
msgid ""
"    # Are there any decoded parts?\n"
"    if numparts == 0:\n"
"        print('No decoded parts!')\n"
"        sys.exit(1)\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:176
#, no-wrap
msgid ""
"    # Get all text parts\n"
"    text = ''\n"
"    for i in range(1, numparts + 1):\n"
"        varname = 'DECODED_%d_TEXT' % i\n"
"        if varname in os.environ:\n"
"            text = text + os.environ[varname]\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/run.rst:178
#, no-wrap
msgid ""
"    # Do something with the text\n"
"    print('Number %s have sent text: %s' % (os.environ['SMS_1_NUMBER'], "
"text))\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:2
msgid ".. _gammu-smsdrc:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:4
#, no-wrap
msgid ""
"SMSD Configuration File\n"
"=======================\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:12
msgid ""
"gammu-smsd reads configuration from a config file. It's location can be "
"specified on command line, otherwise default path ``/etc/gammu-smsdrc`` is "
"used."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:18
msgid ""
"Configuration file of gammu-smsd consists of at least two sections - "
":config:section:`[gammu]` and :config:section:`[smsd]`. For "
":ref:`gammu-smsd-sql` you can also use :config:section:`[sql]`."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:24
msgid ""
"The :config:section:`[gammu]` section is configuration of a phone connection "
"and is same as described in :ref:`gammurc` with the only exception that "
":config:option:`LogFile` is ignored and common logging for gammu library and "
"SMS daemon is used. However the :config:option:`LogFormat` directive still "
"configures how much messages gammu emits."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:26
msgid ".. config:section:: [smsd]"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:30
#, no-wrap
msgid ""
"    The :config:section:`[smsd]` section configures SMS daemon itself, which "
"are described in\n"
"    following subsections. First general parameters of SMS daemon are listed "
"and\n"
"    then specific parameters for storage backends.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:32
msgid ".. config:section:: [include_numbers]"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:34
#, no-wrap
msgid ""
"    List of numbers from which accept messages, see "
":ref:`message_filtering`.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:36
msgid ".. config:section:: [exclude_numbers]"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:38
#, no-wrap
msgid ""
"    List of numbers from which reject messages, see "
":ref:`message_filtering`.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:40
msgid ".. config:section:: [include_smsc]"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:42
#, no-wrap
msgid ""
"    List of SMSC numbers from which accept messages, see "
":ref:`message_filtering`.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:44
msgid ".. config:section:: [exclude_smsc]"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:46
#, no-wrap
msgid ""
"    List of SMSC numbers from which reject messages, see "
":ref:`message_filtering`.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:48
msgid ".. config:section:: [sql]"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:50
#, no-wrap
msgid ""
"    Configure SQL queries used by :ref:`gammu-smsd-sql`, you usually don't "
"have to modify them.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:52
#, no-wrap
msgid "    .. seealso:: :ref:`Configurable queries`\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:54
#, no-wrap
msgid ""
"General parameters of SMS daemon\n"
"--------------------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:57
msgid ".. config:option:: Service"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:59
#, no-wrap
msgid "    SMSD service to use, one of following choices:\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:66
#, no-wrap
msgid ""
"    ``FILES``  \n"
"        stores messages in files, see :ref:`gammu-smsd-files` for details\n"
"    ``NULL``\n"
"        does not store messages at all, see :ref:`gammu-smsd-null` for "
"details\n"
"    ``SQL``\n"
"        stores messages in SQL database, see :ref:`gammu-smsd-sql` for "
"details\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:70
#, no-wrap
msgid ""
"        .. versionadded:: 1.28.93\n"
"    ``MYSQL``\n"
"        synonym for :config:option:`Service` = ``SQL`` and "
":config:option:`Driver` = ``native_mysql``\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:72
#, no-wrap
msgid ""
"        stores messages in MySQL database, see :ref:`gammu-smsd-mysql` for "
"details\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:76
#, no-wrap
msgid ""
"        .. deprecated:: 1.28.93\n"
"    ``PGSQL``\n"
"        synonym for :config:option:`Service` = ``SQL`` and "
":config:option:`Driver` = ``native_mysql``\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:78
#, no-wrap
msgid ""
"        stores messages in PostgreSQL database, see :ref:`gammu-smsd-pgsql` "
"for details\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:82
#, no-wrap
msgid ""
"        .. deprecated:: 1.28.93\n"
"    ``DBI``\n"
"        synonym for :config:option:`Service` = ``SQL`` and "
":config:option:`Driver` = DBI driver\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:86
#, no-wrap
msgid ""
"        stores messages in any database supported by libdbi, this includes\n"
"        MSSQL, MySQL, PostgreSQL or SQLite databases, see "
":ref:`gammu-smsd-dbi` for\n"
"        details\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:88
#, no-wrap
msgid "        .. deprecated:: 1.28.93\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:92
#, no-wrap
msgid ""
"        Availability of backends depends on platform and compile time "
"configuration.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:94
msgid ".. config:option:: PIN"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:97
#, no-wrap
msgid ""
"    PIN for SIM card. This is optional, but you should set it if your phone "
"after\n"
"    power on requires PIN.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:99
msgid ".. config:option:: NetworkCode"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:102
#, no-wrap
msgid ""
"    Network personalisation password. This is optional, but some phones "
"require it\n"
"    after power on.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:104
msgid ".. config:option:: PhoneCode"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:107
#, no-wrap
msgid ""
"    Phone lock password. This is optional, but some phones require it after "
"power\n"
"    on.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:113
#, no-wrap
msgid ""
"    File where SMSD actions are being logged. You can also use special "
"value\n"
"    ``syslog`` which will send all messages to syslog daemon. On Windows "
"another\n"
"    special value ``eventlog`` exists, which will send logs to Windows Event "
"Log.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:117
#, no-wrap
msgid ""
"    If you run SMSD as a system daemon (or service), it is recommended to "
"use\n"
"    absolute path to log file as startup directory might be different than "
"you\n"
"    expect.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:119
#, no-wrap
msgid "    Default is to provide no logging.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:121
msgid ".. config:option:: DebugLevel"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:124
#, no-wrap
msgid ""
"    Debug level for SMSD. The integer value should be sum of all flags you\n"
"    want to enable. \n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:131
#, no-wrap
msgid ""
"    1\n"
"        enables basic debugging information\n"
"    2\n"
"        enables logging of SQL queries of service backends\n"
"    4\n"
"        enables logging of gammu debug information\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:133
#, no-wrap
msgid "    Generally to get as much debug information as possible, use 255.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:135
#, no-wrap
msgid "    Default is 0, what should mean no extra information.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:137
msgid ".. config:option:: CommTimeout"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:139
#, no-wrap
msgid "    How many seconds should SMSD wait after there is no message in outbox.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:141 docs/manual/smsd/config.rst:148
#, no-wrap
msgid "    Default is 30.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:143
msgid ".. config:option:: SendTimeout"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:146
#, no-wrap
msgid ""
"    Shows how many seconds SMSD should wait for network answer during "
"sending \n"
"    sms. If nothing happen during this time, sms will be resent.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:150
msgid ".. config:option:: MaxRetries"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:152
#, no-wrap
msgid "    How many times will SMSD try to resend message if sending fails.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:154 docs/manual/smsd/config.rst:178
#, no-wrap
msgid "    Default is 1.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:156
msgid ".. config:option:: ReceiveFrequency"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:160
#, no-wrap
msgid ""
"    The number of seconds between testing for received SMSes, when the phone "
"is\n"
"    busy sending SMSes. Normally a test for received SMSes is done every\n"
"    :config:option:`CommTimeout` seconds and after each sent SMS. \n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:162 docs/manual/smsd/config.rst:213 docs/manual/smsd/config.rst:227
#, no-wrap
msgid "    Default is 0 (not used).\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:164
msgid ".. config:option:: StatusFrequency"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:167
#, no-wrap
msgid ""
"    The number of seconds between refreshing phone status (battery, signal) "
"stored\n"
"    in shared memory and possibly in service backends. Use 0 to disable.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:169
#, no-wrap
msgid "    Default is 15.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:171
msgid ".. config:option:: LoopSleep"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:176
#, no-wrap
msgid ""
"    The number of seconds how long will SMSD sleep before checking for "
"some\n"
"    activity. Please note that setting this to higher value than 1 will "
"have\n"
"    effects to other time based configurations, because they will be "
"effectively\n"
"    rounded to multiply of this value.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:180
msgid ".. config:option:: MultipartTimeout"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:184
#, no-wrap
msgid ""
"    The number of seconds how long will SMSD wait for all parts of "
"multipart\n"
"    message. If all parts won't arrive in time, parts will be processed as "
"separate\n"
"    messages.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:186 docs/manual/smsd/config.rst:249
#, no-wrap
msgid "    Default is 600 (10 minutes).\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:188
msgid ".. config:option:: CheckSecurity"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:190
#, no-wrap
msgid "    Whether to check if phone wants to enter PIN.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:192 docs/manual/smsd/config.rst:198 docs/manual/smsd/config.rst:204
#, no-wrap
msgid "    Default is 1 (enabled).\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:194
msgid ".. config:option:: CheckBattery"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:196
#, no-wrap
msgid "    Whether to check phone battery state periodically.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:200
msgid ".. config:option:: CheckSignal"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:202
#, no-wrap
msgid "    Whether to check signal level periodically.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:206
msgid ".. config:option:: ResetFrequency"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:211
#, no-wrap
msgid ""
"    The number of seconds between performing a preventive soft reset in "
"order to\n"
"    minimize the cases of hanging phones e.g. Nokia 5110 will sometimes "
"freeze to\n"
"    a state when only after unmounting the battery the phone will be "
"functional\n"
"    again.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:215
msgid ".. config:option:: HardResetFrequency"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:217 docs/manual/smsd/config.rst:364
#, no-wrap
msgid "    .. versionadded:: 1.28.92\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:219 docs/manual/gammu/index.rst:823
#, no-wrap
msgid "    .. warning::\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:222
#, no-wrap
msgid ""
"       For some phones hard reset means deleting all data in it. Use \n"
"       :config:option:`ResetFrequency`, unless you know what you are "
"doing.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:225
#, no-wrap
msgid ""
"    The number of seconds between performing a preventive hard reset in "
"order to\n"
"    minimize the cases of hanging phones.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:229
msgid ".. config:option:: DeliveryReport"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:231
#, no-wrap
msgid ""
"    Whether delivery reports should be used, one of ``no``, ``log``, "
"``sms``.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:238
#, no-wrap
msgid ""
"    ``log``\n"
"        one line log entry, \n"
"    ``sms``\n"
"        store in inbox as a received SMS\n"
"    ``no``\n"
"        no delivery reports\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:240
#, no-wrap
msgid "    Default is ``no``.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:242
msgid ".. config:option:: DeliveryReportDelay"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:247
#, no-wrap
msgid ""
"    Delay in seconds how long is still delivery report considered "
"valid. This\n"
"    depends on brokeness of your network (delivery report should have same\n"
"    timestamp as sent message). Increase this if delivery reports are not "
"paired\n"
"    with sent messages.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:251
msgid ".. config:option:: PhoneID"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:254
#, no-wrap
msgid ""
"    String with info about phone used for sending/receiving. This can be "
"useful if\n"
"    you want to run several SMS daemons.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:258
#, no-wrap
msgid ""
"    When you set PhoneID, all messages (including injected ones) will be "
"marked by\n"
"    this string and it allow more SMS daemons to share single "
"database. This\n"
"    option has actually no effect with :ref:`gammu-smsd-files`.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:260
msgid ".. config:option:: RunOnReceive"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:262
#, no-wrap
msgid "    Executes a program after receiving message. \n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:268
#, no-wrap
msgid ""
"    This parameter is executed through shell, so you might need to escape "
"some\n"
"    special characters and you can include any number of "
"parameters. Additionally\n"
"    parameters with identifiers of received messages are appended to the "
"command\n"
"    line. The identifiers depend on used service backend, typically it is ID "
"of\n"
"    inserted row for database backends or file name for file based "
"backends.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:274
#, no-wrap
msgid ""
"    Gammu SMSD waits for the script to terminate. If you make some time "
"consuming\n"
"    there, it will make SMSD not receive new messages. However to limit "
"breakage\n"
"    from this situation, the waiting time is limited to two minutes. After "
"this\n"
"    time SMSD will continue in normal operation and might execute your "
"script\n"
"    again.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:277
#, no-wrap
msgid ""
"    The process has available lot of information about received message in "
"\n"
"    environment, check :ref:`smsd_run` for more details.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:279
msgid ".. config:option:: RunOnFailure"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:281
#, no-wrap
msgid "    .. versionadded:: 1.28.93\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:283
#, no-wrap
msgid "    Executes a program on failure.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:286
#, no-wrap
msgid ""
"    This can be used to proactively react on some failures or to "
"interactively\n"
"    detect failure of sending message.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:290
#, no-wrap
msgid ""
"    The program will receive optional parameter, which can currently be "
"either\n"
"    ``INIT`` (meaning failure during phone initialization) or message ID,\n"
"    which would indicate error while sending the message.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:292
#, no-wrap
msgid ""
"    .. note:: The environment with message (as is in "
":config:option:`RunOnReceive`) is not passed to the command.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:294
msgid ".. config:option:: IncludeNumbersFile"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:299
#, no-wrap
msgid ""
"    File with list of numbers which are accepted by SMSD. The file contains "
"one\n"
"    number per line, blank lines are ignored. The file is read at startup "
"and is\n"
"    reread only when configuration is being reread. See Message filtering "
"for\n"
"    details.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:301
msgid ".. config:option:: ExcludeNumbersFile"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:306
#, no-wrap
msgid ""
"    File with list of numbers which are not accepted by SMSD. The file "
"contains\n"
"    one number per line, blank lines are ignored. The file is read at "
"startup and\n"
"    is reread only when configuration is being reread. See Message filtering "
"for\n"
"    details.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:308
msgid ".. config:option:: IncludeSMSCFile"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:313
#, no-wrap
msgid ""
"    File with list of SMSC numbers which are accepted by SMSD. The file "
"contains\n"
"    one number per line, blank lines are ignored. The file is read at "
"startup and\n"
"    is reread only when configuration is being reread. See Message filtering "
"for\n"
"    details.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:315
msgid ".. config:option:: ExcludeSMSCFile"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:320
#, no-wrap
msgid ""
"    File with list of SMSC numbers which are not accepted by SMSD. The "
"file\n"
"    contains one number per line, blank lines are ignored. The file is read "
"at\n"
"    startup and is reread only when configuration is being reread. See "
"Message\n"
"    filtering for details.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:322
msgid ".. config:option:: BackendRetries"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:324
#, no-wrap
msgid "    How many times will SMSD backend retry operation.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:327
#, no-wrap
msgid ""
"    The implementation on different backends is different, for database "
"backends\n"
"    it generally means how many times it will try to reconnect to the "
"server.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:329
#, no-wrap
msgid "    Default is 10.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:331
msgid ".. config:option:: Send"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:333
#, no-wrap
msgid "    Whether to enable sending of messages.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:335 docs/manual/smsd/config.rst:341
#, no-wrap
msgid "    Default is True.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:337
msgid ".. config:option:: Receive"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:339
#, no-wrap
msgid "    Whether to enable receiving of messages.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:344
#, no-wrap
msgid ""
"Database backends options\n"
"-------------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:349
msgid ""
"All DBI, MYSQL and PGSQL backends (see :ref:`gammu-smsd-mysql`, "
":ref:`gammu-smsd-pgsql`, :ref:`gammu-smsd-dbi` for their documentation)  "
"supports same options for configuring connection to a database:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:351
msgid ".. config:option:: User"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:353
#, no-wrap
msgid "    User name used for connection to a database.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:355
msgid ".. config:option:: Password"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:357
#, no-wrap
msgid "    Password used for connection to a database.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:359
msgid ".. config:option:: Host"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:362
#, no-wrap
msgid ""
"    Database server address. It can also contain port or socket path after\n"
"    semicolon, for example ``localhost:/path/to/socket``.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:366
msgid ".. config:option:: PC"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:368
#, no-wrap
msgid "    Synonym for :config:option:`Host`.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:370
#, no-wrap
msgid "    .. deprecated:: 1.28.92\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:372
msgid ".. config:option:: Database"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:376
#, no-wrap
msgid ""
"    Name of database to use. Please note that you should create tables in "
"this\n"
"    database before using gammu-smsd. SQL files for creating needed tables "
"are\n"
"    included in documentation.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:378
msgid ".. config:option:: SkipSMSCNumber"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:382
#, no-wrap
msgid ""
"    When you send sms from some SMS centere you can have delivery reports "
"from\n"
"    other SMSC number. You can set here number of this SMSC used by you and "
"Gammu\n"
"    will not check it's number during assigning reports to sent SMS.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:384
msgid ".. config:option:: Driver"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:386
#, no-wrap
msgid "    SQL driver to use. \n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:388
#, no-wrap
msgid ""
"    Can be either one of native drivers (``native_mysql`` or "
"``native_pgsql``) or :ref:`gammu-smsd-dbi` driver.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:393
#, no-wrap
msgid ""
"    Depends on what DBI drivers you have installed, DBI\n"
"    supports: ``mysql``, ``freetds`` (provides access to MS SQL Server and\n"
"    Sybase), ``pgsql``, ``sqlite``, ``sqlite3``, ``firebird`` and "
"``ingres``,\n"
"    ``msql`` and ``oracle`` drivers are under development.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:395
msgid ".. config:option:: DriversPath"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:398
#, no-wrap
msgid ""
"    Path, where DBI drivers are stored, this usually does not have to be set "
"if\n"
"    you have properly installed drivers.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:400
msgid ".. config:option:: DBDir"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:403
#, no-wrap
msgid ""
"    Database directory for some (currently only sqlite) DBI drivers. Set "
"here path\n"
"    where sqlite database files are stored.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:406
msgid "Files backend options +++++++++++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:410
msgid ""
"The FILES backend accepts following configuration options. See "
":ref:`gammu-smsd-files` for more detailed service backend "
"description. Please note that all path should contain trailing path "
"separator (/ on Unix systems):"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:412
msgid ".. config:option:: InboxPath"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:414
#, no-wrap
msgid "    Where the received SMSes are stored.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:416 docs/manual/smsd/config.rst:422
#, no-wrap
msgid "    Default is current directory.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:418
msgid ".. config:option:: OutboxPath"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:420
#, no-wrap
msgid "    Where SMSes to be sent should be placed.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:424
msgid ".. config:option:: SentSMSPath"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:427
#, no-wrap
msgid ""
"    Where the transmitted SMSes are placed, if same as "
":config:option:`OutboxPath` transmitted\n"
"    messages are deleted.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:429
#, no-wrap
msgid "    Default is to delete transmitted messages.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:431
msgid ".. config:option:: ErrorSMSPath"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:433
#, no-wrap
msgid "    Where SMSes with error in transmission is placed.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:435
#, no-wrap
msgid "    Default is same as :config:option:`SentSMSPath`.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:437
msgid ".. config:option:: InboxFormat"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:439
#, no-wrap
msgid ""
"    The format in which the SMS will be stored: ``detail``, ``unicode``, "
"``standard``.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:446
#, no-wrap
msgid ""
"    ``detail``   \n"
"        format used for message backup by :ref:`gammu`, see "
":ref:`gammu-smsbackup`.\n"
"    ``unicode``\n"
"        message text stored in unicode (UTF-16)\n"
"    ``standard``\n"
"        message text stored in system charset\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:449
#, no-wrap
msgid ""
"    The ``standard`` and ``unicode`` settings do not apply for 8-bit "
"messages, which\n"
"    are always written raw as they are received with extension .bin.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:451
#, no-wrap
msgid "    Default is ``unicode``.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:453
msgid ".. config:option:: OutboxFormat"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:456
#, no-wrap
msgid ""
"    The format in which messages created by :ref:`gammu-smsd-inject` will be "
"stored,\n"
"    it accepts same values as InboxFormat.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:459
#, no-wrap
msgid ""
"    Default is ``detail`` if Gammu is compiled in with backup functions, "
"``unicode``\n"
"    otherwise.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:461
msgid ".. config:option:: TransmitFormat"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:463
#, no-wrap
msgid "    The format for transmitting the SMS: ``auto``, ``unicode``, ``7bit``. \n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:465
#, no-wrap
msgid "    Default is ``auto``.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:467
msgid ".. _message_filtering:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:469
#, no-wrap
msgid ""
"Message filtering\n"
"-----------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:476
msgid ""
"SMSD allows to process only limited subset of incoming messages. You can "
"define filters for sender number in :config:section:`[include_numbers]` and "
":config:section:`[exclude_numbers]` sections or using "
":config:option:`IncludeNumbersFile` and :config:option:`ExcludeNumbersFile` "
"directives."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:481
msgid ""
"If :config:section:`[include_numbers]` section exists, all values (keys are "
"ignored) from it are used as allowed phone numbers and no other message is "
"processed. On the other side, in :config:section:`[exclude_numbers]` you can "
"specify numbers which you want to skip."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:487
msgid ""
"Lists from both sources are merged together. If there is any number in "
"include list, only include list is used and only messages in this list are "
"being accepted. If include list is empty, exclude list can be used to ignore "
"messages from some numbers. If both lists are empty, all messages are "
"accepted."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:492
msgid ""
"Similar filtering rules can be used for SMSC number filtering, they just use "
"different set of configuration options - :config:section:`[include_smsc]` "
"and :config:section:`[exclude_smsc]` sections or "
":config:option:`IncludeSMSCFile` and :config:option:`ExcludeSMSCFile` "
"directives."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:499
msgid ""
"There is more complete example available in Gammu documentation. Please note "
"that for simplicity following examples do not include "
":config:section:`[gammu]` section, you can look into :ref:`gammurc` for some "
"examples how it can look like."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:501
msgid "SMSD configuration file for FILES backend could look like:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:512
#, no-wrap
msgid ""
"    [smsd]\n"
"    Service = files\n"
"    PIN = 1234\n"
"    LogFile = syslog\n"
"    InboxPath = /var/spool/sms/inbox/\n"
"    OutboPpath = /var/spool/sms/outbox/\n"
"    SentSMSPath = /var/spool/sms/sent/\n"
"    ErrorSMSPath = /var/spool/sms/error/\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:514
msgid "If you want to use MYSQL backend, you will need something like this:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:525
#, no-wrap
msgid ""
"    [smsd]\n"
"    Service = mysql\n"
"    PIN = 1234\n"
"    LogFile = syslog\n"
"    User = smsd\n"
"    Password = smsd\n"
"    PC = localhost\n"
"    Database = smsd\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:527
msgid "Process only messages from 123456 number:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:532
#, no-wrap
msgid ""
"    [include_numbers]\n"
"    number1 = 123456\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:534
msgid "Do not process messages from evil number 666:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:539
#, no-wrap
msgid ""
"    [exclude_numbers]\n"
"    number1 = 666\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/config.rst:541
msgid "Enabling debugging:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/overview.rst:2
#, no-wrap
msgid ""
"Overview\n"
"========\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/overview.rst:7
msgid ""
"Gammu SMS Daemon is a program that periodically scans GSM modem for received "
"messages, stores them in defined storage and also sends messages enqueued in "
"this storage."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/overview.rst:9
#, no-wrap
msgid ""
"Overall schema\n"
"--------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/overview.rst:13
msgid ""
"The interactions of SMS Daemon and related components can be seen on "
"following picture."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/overview.rst:15 docs/manual/smsd/code.rst:150 docs/manual/smsd/code.rst:182 docs/manual/internal/state-machine.rst:11
msgid ".. graphviz::"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/overview.rst:35
#, no-wrap
msgid ""
"   digraph smsdinteractions {\n"
"       \"gammu-smsd-inject\" [shape=box];\n"
"       \"gammu-smsd\" [shape=box];\n"
"       \"Run on receive\" [shape=box, style=dotted];\n"
"       \"GSM modem\" [shape=box, style=dashed];\n"
"       \"gammu-smsd-monitor\" [shape=box];\n"
"       \"Service\\nstorage\" [shape=doublecircle];\n"
"       \"Kalkun\" [shape=box, style=dotted];\n"
"       \"gammu-smsd\" -> \"GSM modem\" [label=\"Outgoing\"];\n"
"       \"GSM modem\" -> \"gammu-smsd\" [label=\"Incoming\"];\n"
"       \"gammu-smsd\" -> \"Service\\nstorage\" [label=\"Save\"];\n"
"       \"Service\\nstorage\" -> \"gammu-smsd\" [label=\"Read\"];\n"
"       \"gammu-smsd\" -> \"Run on receive\" [label=\"Execute\"];\n"
"       \"Service\\nstorage\" -> \"Run on receive\" [label=\"Read\"];\n"
"       \"Kalkun\" -> \"Service\\nstorage\" [label=\"Inject\"];\n"
"       \"Service\\nstorage\" -> \"Kalkun\" [label=\"Read\"];\n"
"       \"gammu-smsd-inject\" -> \"Service\\nstorage\" [label=\"Inject\"];\n"
"       \"gammu-smsd\" -> \"gammu-smsd-monitor\" [label=\"Monitor\"];\n"
"   }\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/overview.rst:37
#, no-wrap
msgid ""
"SMSD operation\n"
"--------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/overview.rst:40
msgid "The SMSD operation consist of several steps."
msgstr ""

#. type: Bullet: '1. '
#: docs/manual/smsd/overview.rst:51
msgid "Process command line options."
msgstr ""

#. type: Bullet: '2. '
#: docs/manual/smsd/overview.rst:51
msgid "Configure backend service."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/overview.rst:51
#, no-wrap
msgid ""
"3. Main loop is executed until it is signalled to be terminated.\n"
"    1. Try to connect to phone if not connected.\n"
"    2. Check for security code if configured (configured by "
":config:option:`CheckSecurity`).\n"
"    3. Check for received messages (frequency configured by "
":config:option:`ReceiveFrequency`).\n"
"    4. Check for reset of the phone if configured (frequency configured by "
":config:option:`ResetFrequency`).\n"
"    5. Check for messages to send (frequency configured by "
":config:option:`CommTimeout`).\n"
"    6. Check phone status (frequency configured by "
":config:option:`StatusFrequency`).\n"
"    7. Sleep for defined time (:config:option:`LoopSleep`).\n"
"4. Backend service is freed.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/manual.rst:2
#, no-wrap
msgid ""
"Program Manuals\n"
"===============\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/manual.rst:9
#, no-wrap
msgid ""
"    smsd\n"
"    inject\n"
"    monitor\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/inject.rst:2
msgid ".. _gammu-smsd-inject:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/inject.rst:4
#, no-wrap
msgid ""
"gammu-smsd-inject\n"
"=================\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/inject.rst:7
msgid ".. program:: gammu-smsd-inject"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/inject.rst:12 docs/manual/smsd/monitor.rst:12 docs/manual/smsd/smsd.rst:12 docs/manual/gammu/index.rst:13 docs/manual/utils/gammu-config.rst:12 docs/manual/utils/jadmaker.rst:12 docs/manual/utils/gammu-detect.rst:15
msgid ".. code-block:: text"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/inject.rst:14
#, no-wrap
msgid ""
"    gammu-smsd-inject [OPTION]... MESSAGETYPE RECIPIENT "
"[MESSAGE_PARAMETER]...\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/inject.rst:19
msgid "This manual page documents briefly the :program:`gammu-smsd-inject` command."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/inject.rst:22
msgid ""
":program:`gammu-smsd-inject` is a program that enqueues message in Gammu SMS "
"Daemon, which will be later sent by the daemon using connected GSM modem."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/inject.rst:25
msgid ""
"Support for this program depends on features available in currently used "
"SMSD service backend, however currently it is supported by all of them."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/inject.rst:28 docs/manual/smsd/monitor.rst:26 docs/manual/smsd/smsd.rst:30
msgid ""
"Program accepts following options (please note that long options might be "
"not accepted on some platforms):"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/inject.rst:30 docs/manual/smsd/monitor.rst:28 docs/manual/smsd/smsd.rst:32 docs/manual/utils/gammu-config.rst:24 docs/manual/utils/jadmaker.rst:25 docs/manual/utils/gammu-detect.rst:45
msgid ".. option:: -h, --help"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/inject.rst:32 docs/manual/smsd/monitor.rst:30 docs/manual/smsd/smsd.rst:34
#, no-wrap
msgid "    Shows help.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/inject.rst:34 docs/manual/smsd/monitor.rst:32 docs/manual/smsd/smsd.rst:36 docs/manual/utils/gammu-detect.rst:53
msgid ".. option:: -v, --version"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/inject.rst:36 docs/manual/smsd/monitor.rst:34 docs/manual/smsd/smsd.rst:38
#, no-wrap
msgid "    Shows version information and compiled in features.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/inject.rst:38 docs/manual/smsd/monitor.rst:36 docs/manual/smsd/smsd.rst:40
msgid ".. option:: -c, --config=file"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/inject.rst:41 docs/manual/smsd/monitor.rst:39 docs/manual/smsd/smsd.rst:43
#, no-wrap
msgid ""
"    Configuration file to use, default is /etc/gammu-smsdrc, on Windows "
"there\n"
"    is no default and configuration file path has to be always specified.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/inject.rst:44
msgid ""
"For description of message types and their parameters, please check "
"documentation for :option:`gammu savesms`."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/inject.rst:50
msgid ""
"To check it out, you need to have configuration file for SMSD, see "
":ref:`gammu-smsdrc` for more details about it."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/inject.rst:52
msgid "Inject text message up to standard 160 chars:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/inject.rst:56
#, no-wrap
msgid ""
"    echo \"All your base are belong to us\" | gammu-smsd-inject TEXT "
"123456\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/inject.rst:58 docs/manual/smsd/inject.rst:70 docs/manual/smsd/inject.rst:76 docs/manual/gammu/index.rst:1815 docs/manual/gammu/index.rst:1827 docs/manual/gammu/index.rst:1833
msgid "or"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/inject.rst:62
#, no-wrap
msgid "    gammu-smsd-inject TEXT 123456 -text \"All your base are belong to us\"\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/inject.rst:64
msgid "Inject long text message:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/inject.rst:68
#, no-wrap
msgid ""
"    echo \"All your base are belong to us\" | gammu-smsd-inject TEXT 123456 "
"-len 400\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/inject.rst:74
#, no-wrap
msgid ""
"    gammu-smsd-inject TEXT 123456 -len 400 -text \"All your base are belong "
"to us\"\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/inject.rst:80
#, no-wrap
msgid "    gammu-smsd-inject EMS 123456 -text \"All your base are belong to us\"\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/inject.rst:82
msgid ""
"Inject some funky message with predefined sound and animation from 2 "
"bitmaps:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/inject.rst:86
#, no-wrap
msgid ""
"    gammu-smsd-inject EMS 123456 -text \"Greetings\" -defsound 1 -text "
"\"from Gammu\" -tone10 axelf.txt -animation 2 file1.bmp file2.bmp\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/inject.rst:88
msgid "Inject protected message with ringtone:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/inject.rst:91
#, no-wrap
msgid ""
"    gammu-smsd-inject EMS 123456 -protected 2 -variablebitmaplong ala.bmp "
"-toneSElong axelf.txt -toneSE ring.txt\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/mysql.rst:2
msgid ".. _gammu-smsd-mysql:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/mysql.rst:4
#, no-wrap
msgid ""
"MySQL Backend\n"
"=============\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/mysql.rst:9
msgid ""
"MYSQL backend stores all data in a `MySQL`_ database server, which "
"parameters are defined by configuration (see :ref:`gammu-smsdrc` for "
"description of configuration options)."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/mysql.rst:15
#, no-wrap
msgid ""
"Privileges\n"
"----------\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/mysql.rst:19
msgid ""
"The user accessing the database does not need much privileges, the following "
"privleges should be enough:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/mysql.rst:23
#, no-wrap
msgid "    GRANT USAGE ON *.* TO 'smsd'@'localhost' IDENTIFIED BY 'password';\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/mysql.rst:25
#, no-wrap
msgid ""
"    GRANT SELECT, INSERT, UPDATE, DELETE ON `smsd`.* TO "
"'smsd'@'localhost';\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/mysql.rst:30
#, no-wrap
msgid ""
"   For creating the SQL tables you need more privileges, especially for\n"
"   creating triggers, which are used for some functionality.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/mysql.rst:32
msgid ".. _MySQL: http://www.mysql.com/"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/mysql.rst:37
msgid "SQL script for creating tables in MySQL database:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/mysql.rst:40
#, no-wrap
msgid ""
".. literalinclude:: ../../sql/mysql.sql\n"
"   :language: mysql\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/mysql.rst:43
#, no-wrap
msgid "    You can find the script in :file:`docs/sql/mysql.sql` as well. \n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/code.rst:2
#, no-wrap
msgid ""
"Developer documentation\n"
"=======================\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/code.rst:13
msgid ""
"The backend service is responsible for storing received messages and giving "
"the SMSD core messages to send. It is solely up to them how the message will "
"be stored, for example currently Gammu includes backends to store messages "
"on filesystem (:ref:`smsd_files`), various databases (:ref:`smsd_mysql`, "
":ref:`smsd_pgsql`, :ref:`smsd_dbi`) or backend which does not store anything "
"at all (:ref:`smsd_null`)."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/code.rst:17
msgid "Backend interface +++++++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/code.rst:20
msgid ""
"Each backend service needs to support several operations, which are exported "
"in ``GSM_SMSDService`` structure:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/code.rst:22
#, no-wrap
msgid ""
".. c:function:: GSM_Error\tGSM_SMSDService::Init \t      (GSM_SMSDConfig "
"*Config)\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/code.rst:24
#, no-wrap
msgid "    Initializes internal state, connect to backend storage.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/code.rst:27 docs/manual/smsd/code.rst:34 docs/manual/smsd/code.rst:41 docs/manual/smsd/code.rst:109 docs/manual/smsd/code.rst:116
#, no-wrap
msgid ""
"    :param Config: Pointer to SMSD configuration data\n"
"    :return: Error code.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/code.rst:29
#, no-wrap
msgid ""
".. c:function:: GSM_Error\tGSM_SMSDService::Free \t      (GSM_SMSDConfig "
"*Config)\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/code.rst:31
#, no-wrap
msgid "    Freeing internal data, disconnect from backend storage.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/code.rst:36
#, no-wrap
msgid ""
".. c:function:: GSM_Error\tGSM_SMSDService::InitAfterConnect   "
"(GSM_SMSDConfig *Config)\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/code.rst:38
#, no-wrap
msgid ""
"    Optional hook called after SMSD is connected to phone, can be used for "
"storing infromation about phone in backend.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/code.rst:43
#, no-wrap
msgid ""
".. c:function:: GSM_Error\tGSM_SMSDService::SaveInboxSMS       "
"(GSM_MultiSMSMessage *sms, GSM_SMSDConfig *Config, char **Locations)\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/code.rst:45
#, no-wrap
msgid "    Saves message into inbox.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/code.rst:50
#, no-wrap
msgid ""
"    :param sms: Message data to save\n"
"    :param Config: Pointer to SMSD configuration data\n"
"    :param Locations: Newly allocation pointer to string with IDs "
"identifying saved messages.\n"
"    :return: Error code.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/code.rst:52
#, no-wrap
msgid ""
".. c:function:: GSM_Error\tGSM_SMSDService::FindOutboxSMS      "
"(GSM_MultiSMSMessage *sms, GSM_SMSDConfig *Config, char *ID)\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/code.rst:54
#, no-wrap
msgid "    Finds message in outbox suitable for sending.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/code.rst:62
#, no-wrap
msgid ""
"    :param sms: Found outbox message will be stored here\n"
"    :param Config: Pointer to SMSD configuration data\n"
"    :param ID: Identification of found message will be stored here, this\n"
"        should be unique for different message, so that repeated attempts "
"to\n"
"        send same message can be detected by SMSD core. Empty string avoids "
"\n"
"        this check.\n"
"    :return: Error code.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/code.rst:64
#, no-wrap
msgid ""
".. c:function:: GSM_Error\tGSM_SMSDService::MoveSMS  \t      "
"(GSM_MultiSMSMessage *sms, GSM_SMSDConfig *Config, char *ID, gboolean "
"alwaysDelete, gboolean sent)\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/code.rst:66
#, no-wrap
msgid "    Moves sent message from outbox to sent items.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/code.rst:73
#, no-wrap
msgid ""
"    :param sms: Message which should be moved, backend usually can get it by "
"ID as well.\n"
"    :param Config: Pointer to SMSD configuration data.\n"
"    :param ID: Identification of message to be moved.\n"
"    :param alwaysDelete: Whether to delete message from outbox even if "
"moving fails.\n"
"    :param sent: Whether message was sent (``TRUE``) or there was a failure "
"(``FALSE``).\n"
"    :return: Error code.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/code.rst:75
#, no-wrap
msgid ""
".. c:function:: GSM_Error\tGSM_SMSDService::CreateOutboxSMS    "
"(GSM_MultiSMSMessage *sms, GSM_SMSDConfig *Config, char *NewID)\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/code.rst:77
#, no-wrap
msgid "    Saves message into outbox queue.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/code.rst:82
#, no-wrap
msgid ""
"    :param sms: Message data to save\n"
"    :param Config: Pointer to SMSD configuration data\n"
"    :param NewID: ID of created message will be stored here.\n"
"    :return: Error code.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/code.rst:84
#, no-wrap
msgid ""
".. c:function:: GSM_Error\tGSM_SMSDService::AddSentSMSInfo     "
"(GSM_MultiSMSMessage *sms, GSM_SMSDConfig *Config, char *ID, int Part, "
"GSM_SMSDSendingError err, int TPMR)\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/code.rst:86
#, no-wrap
msgid "    Logs information about sent message (eg. delivery report).\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/code.rst:94
#, no-wrap
msgid ""
"    :param sms: Message which should be moved, backend usually can get it by "
"ID as well.\n"
"    :param Config: Pointer to SMSD configuration data\n"
"    :param ID: Identification of message to be marked.\n"
"    :param Part: Part of the message which is being processed.\n"
"    :param err: Status of sending message.\n"
"    :param TPMR: Message reference if available (:term:`TPMR`).\n"
"    :return: Error code.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/code.rst:96
msgid ""
".. c:function:: GSM_Error\tGSM_SMSDService::RefreshSendStatus "
"(GSM_SMSDConfig *Config, char *ID)"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/code.rst:98
#, no-wrap
msgid "    Updates sending status in service backend. \n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/code.rst:102
#, no-wrap
msgid ""
"    :param Config: Pointer to SMSD configuration data\n"
"    :param ID: Identification of message to be marked.\n"
"    :return: Error code.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/code.rst:104
msgid ""
".. c:function:: GSM_Error\tGSM_SMSDService::RefreshPhoneStatus "
"(GSM_SMSDConfig *Config)"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/code.rst:106
#, no-wrap
msgid ""
"    Updates information about phone in database (network status, battery, "
"etc.).   \n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/code.rst:111
msgid ""
".. c:function:: GSM_Error\tGSM_SMSDService::ReadConfiguration "
"(GSM_SMSDConfig *Config)"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/code.rst:113
#, no-wrap
msgid "    Reads configuration specific for this backend.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/code.rst:119
msgid "Message ID ++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/code.rst:124
msgid ""
"You might have noticed that message ID is often used in the API. The primary "
"reason for this is that it is usually easier for backend to handle message "
"just by it's internal identification instead of handling message data from "
":c:type:`GSM_MultiSMSMessage`."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/code.rst:128
msgid ""
"If the backend does not use any IDs internally, it really does not have to "
"provide them, with only exception of "
":c:func:`GSM_SMSDService::FindOutboxSMS`, where ID is used for detection of "
"repeated sending of same message."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/code.rst:130
msgid "The lifetime of ID for sent message:"
msgstr ""

#. type: Bullet: '    * '
#: docs/manual/smsd/code.rst:140
msgid ""
":c:func:`GSM_SMSDService::CreateOutboxSMS` or direct manipulation with "
"backend storage creates new ID"
msgstr ""

#. type: Bullet: '    * '
#: docs/manual/smsd/code.rst:140
msgid ":c:func:`GSM_SMSDService::FindOutboxSMS` returns ID of message to process"
msgstr ""

#. type: Bullet: '    * '
#: docs/manual/smsd/code.rst:140
msgid ""
":c:func:`GSM_SMSDService::AddSentSMSInfo` and "
":c:func:`GSM_SMSDService::RefreshSendStatus` are then notified using this ID "
"about sending of the message"
msgstr ""

#. type: Bullet: '    * '
#: docs/manual/smsd/code.rst:140
msgid ""
":c:func:`GSM_SMSDService::MoveSMS` then moves the message based on ID to "
"sent items"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/code.rst:142
msgid "The lifetime of ID for incoming messages:"
msgstr ""

#. type: Bullet: '    * '
#: docs/manual/smsd/code.rst:145
msgid ":c:func:`GSM_SMSDService::SaveInboxSMS` generates the message"
msgstr ""

#. type: Bullet: '    * '
#: docs/manual/smsd/code.rst:145
msgid ":ref:`smsd_run` uses this ID"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/code.rst:147
#, no-wrap
msgid ""
"Message Sending Workflow\n"
"------------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/code.rst:177
#, no-wrap
msgid ""
"   digraph smsdsending {\n"
"      \"new message\" [shape=box];\n"
"      \"message in storage\" [shape=box];\n"
"      \"message sent\" [shape=box];\n"
"      \"error sending message\" [shape=box];\n"
"      \"new message\" -> \"manually created SMS\";\n"
"      \"new message\" -> \"CreateOutboxSMS\";\n"
"      \"manually created SMS\" -> \"message in storage\";\n"
"      \"CreateOutboxSMS\" -> \"message in storage\"\n"
"      \"message in storage\" -> \"FindOutboxSMS\";\n"
"      \"FindOutboxSMS\" -> \"AddSentSMSInfo(ERROR)\" [label=\"Error\", "
"style=dotted];\n"
"      \"FindOutboxSMS\" -> \"check duplicates\";\n"
"      \"check duplicates\" -> \"AddSentSMSInfo(ERROR)\" [label=\"Too many "
"retries\", style=dotted];\n"
"      \"check duplicates\" -> \"GSM_SendSMS\"; \n"
"      \"GSM_SendSMS\" -> \"RefreshSendStatus\";\n"
"      \"GSM_SendSMS\" -> \"AddSentSMSInfo(ERROR)\" [label=\"Error\", "
"style=dotted];\n"
"      \"RefreshSendStatus\" -> \"RefreshSendStatus\" [label=\"Sending\"];\n"
"      \"RefreshSendStatus\" -> \"AddSentSMSInfo(ERROR)\" [label=\"Timeout\", "
"style=dotted];\n"
"      \"RefreshSendStatus\" -> \"AddSentSMSInfo(OK)\";\n"
"      \"AddSentSMSInfo(OK)\" -> \"MoveSMS(noforce, OK)\";\n"
"      \"MoveSMS(noforce, OK)\" -> \"MoveSMS(force, ERR)\" [label=\"Error\", "
"style=dotted];\n"
"      \"AddSentSMSInfo(OK)\" -> \"MoveSMS(force, ERR)\" [label=\"Error\", "
"style=dotted];\n"
"      \"AddSentSMSInfo(ERROR)\" -> \"MoveSMS(force, ERR)\";\n"
"      \"MoveSMS(noforce, OK)\" -> \"message sent\";\n"
"      \"MoveSMS(force, ERR)\" -> \"error sending message\";\n"
"   }\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/code.rst:179
#, no-wrap
msgid ""
"Message Receiving Workflow\n"
"--------------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/code.rst:201
#, no-wrap
msgid ""
"   digraph smsdreceiving {\n"
"       \"received message\" [shape=box];\n"
"       \"ignored message\" [shape=box];\n"
"       \"failed message\" [shape=box];\n"
"       \"waiting message\" [shape=box];\n"
"       \"processed message\" [shape=box];\n"
"       \"received message\" -> \"GSM_GetNextSMS\";\n"
"       \"GSM_GetNextSMS\" -> \"SMSD_ValidMessage\";\n"
"       \"SMSD_ValidMessage\" -> \"GSM_LinkSMS\";\n"
"       \"SMSD_ValidMessage\" -> \"ignored message\" [label=\"Not valid\", "
"style=dotted];\n"
"       \"GSM_LinkSMS\" -> \"SMSD_CheckMultipart\";\n"
"       \"SMSD_CheckMultipart\" -> \"SaveInboxSMS\";\n"
"       \"SMSD_CheckMultipart\" -> \"waiting message\" [label=\"Not all "
"parts\", style=dotted];\n"
"       \"SaveInboxSMS\" -> \"SMSD_RunOnReceive\" [label=\"Locations are "
"passed here\"];\n"
"       \"SaveInboxSMS\" -> \"failed message\" [label=\"Error\", "
"style=dotted];\n"
"       \"SMSD_RunOnReceive\" -> \"GSM_DeleteSMS\";\n"
"       \"GSM_DeleteSMS\" -> \"processed message\"\n"
"       \"GSM_DeleteSMS\" -> \"failed message\" [label=\"Error\", "
"style=dotted];\n"
"   }\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/monitor.rst:2
msgid ".. _gammu-smsd-monitor:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/monitor.rst:4
#, no-wrap
msgid ""
"gammu-smsd-monitor\n"
"==================\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/monitor.rst:7
msgid ".. program:: gammu-smsd-monitor"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/monitor.rst:14
#, no-wrap
msgid "    gammu-smsd-monitor [OPTION]...\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/monitor.rst:19
msgid ""
"This manual page documents briefly the :program:`gammu-smsd-monitor` "
"command."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/monitor.rst:23
msgid ""
":program:`gammu-smsd-monitor` is a program that monitors state of Gammu SMS "
"Daemon. It periodically displays information about phone and number of "
"processed messages."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/monitor.rst:41
msgid ".. option:: -l, --loops=count"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/monitor.rst:43
#, no-wrap
msgid "    Number of loops, by default monitor loops infinitely.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/monitor.rst:45
msgid ".. option:: -d, --delay=seconds"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/monitor.rst:47
#, no-wrap
msgid "    Delay betwen polling SMSD state, default is 20 seconds.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/monitor.rst:49
msgid ".. option:: -C, --csv"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/monitor.rst:51
#, no-wrap
msgid "    Print output in comma separated values format:\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/monitor.rst:53
#, no-wrap
msgid "    .. code-block:: text\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/monitor.rst:54
#, no-wrap
msgid "        client;phone ID;IMEI;sent;received;failed;battery;signal\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:2
msgid ".. _gammu-smsd:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:4
#, no-wrap
msgid ""
"gammu-smsd\n"
"==========\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:7
msgid ".. program:: gammu-smsd"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:14
#, no-wrap
msgid "    gammu-smsd [OPTION]...\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:20
msgid "This manual page documents briefly the :program:`gammu-smsd` command."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:24
msgid ""
":program:`gammu-smsd` is a program that periodically scans GSM modem for "
"received messages, stores them in defined storage and also sends messages "
"enqueued in this storage."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:27
msgid ""
"The daemon can reload configuration file after sending hangup signal "
"(SIGHUP)  and properly terminates itself on SIGINT and SIGTERM."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:47
#, no-wrap
msgid ""
"    If you run SMSD as a system daemon (or service), it is recommended to "
"use\n"
"    absolute path to configuration file as startup directory might be\n"
"    different than you expect.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:49
#, no-wrap
msgid "    See :ref:`gammu-smsdrc` for configuration file documentation.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:51
msgid ".. option:: -p, --pid=file"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:53
#, no-wrap
msgid ""
"    Lock file for storing pid, empty for no locking. Not supported on "
"Windows.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:55
msgid ".. option:: -U, --user=user"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:57
#, no-wrap
msgid "    Drop daemon privileges to chosed user after starting.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:59
msgid ".. option:: -G, --group=group"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:61
#, no-wrap
msgid "    Drop daemon privileges to chosen group after starting.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:63
msgid ".. option:: -d, --daemon"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:65
#, no-wrap
msgid "    Daemonize program on startup. Not supported on Windows.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:67
msgid ".. option:: -i, --install-service"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:69
#, no-wrap
msgid "    Installs SMSD as a Windows service.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:71
msgid ".. option:: -u, --uninstall-service"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:73
#, no-wrap
msgid "    Uninstalls SMSD as a Windows service.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:75
msgid ".. option:: -s, --start-service"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:77
#, no-wrap
msgid "    Starts SMSD Windows service.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:79
msgid ".. option:: -k, --stop-service"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:81
#, no-wrap
msgid "    Stops SMSD Windows service.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:83
msgid ".. option:: -f, --max-failures=count"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:85
#, no-wrap
msgid ""
"    Terminate after defined number of failures. Use 0 to not terminate (this "
"is default).\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:87
msgid ".. option:: -X, --suicide=seconds"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:89
#, no-wrap
msgid "    Kills itself after number of seconds.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:91
msgid ".. option:: -S, --run-service"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:94
#, no-wrap
msgid ""
"    Runs pogram as SMSD Windows service. This should not be used manually, "
"but\n"
"    only Windows Service manager should use this command.\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:96
msgid ".. option:: -n, --service-name=name"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:100
#, no-wrap
msgid ""
"    Defines name of a Windows service. Each service requires an unique "
"name,\n"
"    so if you want to run several SMSD instances, you have to name each\n"
"    service differently. Default is \"GammuSMSD\".\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:106
msgid "Linux/Unix Examples +++++++++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:108
msgid "Start SMSD as a daemon on Linux:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:112
#, no-wrap
msgid ""
"    gammu-smsd --config /etc/gammu-smsdrc --pid /var/run/gammu-smsd.pid "
"--daemon\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:114
msgid "Start SMSD as a daemon on Linux with reduced privileges:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:118
#, no-wrap
msgid ""
"    gammu-smsd --config /etc/gammu-smsdrc --pid /var/run/gammu-smsd.pid "
"--daemon --user gammu --group gammu\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:121
msgid "SMSD as a system wide daemon ++++++++++++++++++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:125
msgid ""
"To use SMSD as a daemon, you might want to use init script which is shipped "
"with Gammu in contrib/init directory. It is not installed by default, either "
"install it manually or check INSTALL file for instructions."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:128
msgid ""
"Under Windows 7 you might need to disable UAC (user account control) before "
"you will be able to install SMSD service."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:131
msgid "Windows Service Examples ++++++++++++++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:133
msgid "Install Gammu SMSD Windows service:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:137
#, no-wrap
msgid "    gammu-smsd.exe -c c:\\Gammu\\smsdrc -i\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:139
msgid "Install two instances of SMSD Windows service:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:143
#, no-wrap
msgid "    gammu-smsd.exe -c c:\\Gammu\\smsdrc-1 -n Gammu-first-phone -i\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:145
#, no-wrap
msgid "    gammu-smsd.exe -c c:\\Gammu\\smsdrc-2 -n Gammu-second-phone -i\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:147
msgid "To uninstall a Windows service:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:151
#, no-wrap
msgid "    gammu-smsd.exe -u\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:154
msgid "Troubleshooting Windows Service +++++++++++++++++++++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:160
msgid ""
"If Gammu fails to start as a Windows service (you will usually get \"Error "
"1053: The service did not respond to the start or control request in a "
"timely fashion\"), first check your SMSD logs. If they do not contain any "
"useful hint, try starting SMSD manually with exactly same parameters as you "
"installed the service (without -i)."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:162
msgid "For example the command line can look like:"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:166
#, no-wrap
msgid "    gammu-smsd.exe -c smsdrc\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:169
msgid ""
"You now should be able to get errors from SMSD even if it fails to start as "
"a service."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:171
#, no-wrap
msgid ""
"Known Limitations\n"
"-----------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:177
msgid ""
"You can not use same phone by more programs in same time. However in case "
"you did not enable locking in :config:section:`[gammu]` section, it might be "
"able to start the communication with phone from more programs. In this case "
"neither of the programs will probably work."
msgstr ""

#. type: Plain text
#: docs/manual/smsd/smsd.rst:180
msgid ""
"There is no way to detect that SMS message is reply to another by looking at "
"message headers. The only way to achieve this is to add some token to the "
"message and let the user include it in the message on reply."
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:2
msgid ".. _gammu:"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:4
#, no-wrap
msgid ""
"Gammu Utility\n"
"=============\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:7
msgid ".. program:: gammu"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:10
msgid "Synopsis ++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:15
#, no-wrap
msgid "    gammu [parameters] <command> [options]\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:18
msgid ""
"Commands actually indicate which operation should Gammu perform. They can be "
"specified with or without leading ``--``."
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:21
msgid "Description +++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:24
msgid ""
"This program is a tool for mobile phones. Many vendors and phones are "
"supported, for actual listing see `Gammu Phones Database "
"<http://wammu.eu/phones/>`_."
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:27
#, no-wrap
msgid ""
"Options\n"
"-------\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:30
msgid "Parameters before command configure gammu behaviour:"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:32
msgid ".. option:: -c, --config <filename>"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:34
#, no-wrap
msgid "    name of configuration file\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:36
msgid ".. option:: -s, --section <confign>"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:38
#, no-wrap
msgid "   section of config file to use, eg. 42\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:40
msgid ".. option:: -d, --debug <level>"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:42
#, no-wrap
msgid ""
"   debug level (see :config:option:`LogFormat` in :ref:`gammurc` for "
"possible values)\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:44
msgid ".. option:: -f, --debug-file <filename>"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:46
#, no-wrap
msgid "   file for logging debug messages\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:49
#, no-wrap
msgid ""
"Call commands\n"
"-------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:52
msgid ".. option:: answercall [id]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:54
#, no-wrap
msgid "   Answer incoming call.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:56
msgid ".. option:: cancelcall [id]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:58
#, no-wrap
msgid "    Cancel incoming call\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:60
msgid ".. option:: canceldiverts"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:62
#, no-wrap
msgid "    Cancel all existing call diverts.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:64
msgid ".. option:: conferencecall id"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:66
#, no-wrap
msgid "    Initiates a conference call.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:68
msgid ".. option:: dialvoice number [show|hide]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:70
#, no-wrap
msgid "    Make voice call from SIM card line set in phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:72
#, no-wrap
msgid ""
"    ``show|hide`` - optional parameter whether to disable call number "
"indication.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:74
msgid ""
".. option:: divert get|set all|busy|noans|outofreach all|voice|fax|data "
"[number timeout]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:76
#, no-wrap
msgid "    Manage or display call diverts.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:87
#, no-wrap
msgid ""
"    ``get`` or ``set``\n"
"        whether to get divert information or to set it.\n"
"    ``all`` or ``busy`` or ``noans`` or ``outofreach`` \n"
"        condition when apply divert\n"
"    ``all`` or ``voice`` or ``fax`` or ``data`` \n"
"        call type when apply divert\n"
"    number \n"
"        number where to divert\n"
"    timeout \n"
"        timeout when the diversion will happen\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:89
msgid ".. option:: getussd code"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:91
#, no-wrap
msgid ""
"    Retrieves USSD information - dials a service number and reads "
"response.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:93
msgid ".. option:: holdcall id"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:95
#, no-wrap
msgid "    Holds call.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:97
msgid ".. option:: maketerminatedcall number length [show|hide]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:100
#, no-wrap
msgid ""
"    Make voice call from SIM card line set in phone which will \n"
"    be terminated after ``length`` seconds.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:102
msgid ".. option:: senddtmf sequence"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:104
#, no-wrap
msgid "    Plays DTMF sequence. In some phones available only during calls\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:106
msgid ".. option:: splitcall id"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:108
#, no-wrap
msgid "    Splits call.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:110
msgid ".. option:: switchcall [id]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:112
#, no-wrap
msgid "    Switches call.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:114
msgid ".. option:: transfercall [id]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:116
#, no-wrap
msgid "    Transfers call.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:118
msgid ".. option:: unholdcall id"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:120
#, no-wrap
msgid "    Unholds call.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:122
#, no-wrap
msgid ""
"SMS and EMS commands\n"
"--------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:127
msgid ""
"Sending messages might look a bit complicated on first attempt to use.  But "
"be patient, the command line has been written in order to allow almost every "
"usage. See EXAMPLE section for some hints on usage."
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:130
msgid ""
"There is also an option to use :ref:`gammu-smsd` when you want to send or "
"receive more messages and process them automatically."
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:132
#, no-wrap
msgid ""
"Introduction to SMS formats\n"
"___________________________\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:135
msgid "Gammu has support for many SMS formats like:"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:146
#, no-wrap
msgid ""
"Nokia Smart Messaging\n"
"    used for monochromatic picture images, downloadable profiles, "
"monochromatic operator logos, monochromatic caller logos and monophonic "
"ringtones\n"
"Linked SMS\n"
"    both with 8 and 16-bit identification numbers in headers\n"
"EMS\n"
"    this is SMS format used for saving monochromatic images, monophonic "
"ringtones, animations, text formatting and others\n"
"MMS notifications\n"
"    contains links where phone should download MMS\n"
"Alcatel logo messages\n"
"    proprietary format for logos\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:151
msgid ""
"You need to ensure that the target phone supports message type you want to "
"send. Otherwise the phone will not be able to display it or will even crash, "
"because firmware of phone did not expect this possibility."
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:153
#, no-wrap
msgid ""
"Encoding chars in SMS text\n"
"__________________________\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:156
msgid "Text in SMS can be coded using two ways:"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:159
msgid "GSM Default Alphabet ~~~~~~~~~~~~~~~~~~~~"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:164
msgid ""
"With `GSM Default Alphabet` you can fit at most 160 chars into single SMS "
"(Gammu doesn't support compressing such texts according to GSM standards, "
"but it isn't big limit, because there are no phones supporting them), but "
"they're from limited set:"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/gammu/index.rst:171
msgid "all Latin small and large"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/gammu/index.rst:171
msgid "all digits"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/gammu/index.rst:171
msgid "some Greek"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/gammu/index.rst:171
msgid "some other national"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/gammu/index.rst:171
msgid "some symbols like @ ! \" # & / ( ) % * + = - , . : ; < > ?"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/gammu/index.rst:171
msgid "few others"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:174
msgid "Unicode ~~~~~~~"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:177
msgid ""
"With `Unicode` single SMS can contain at most 70 chars, but these can be any "
"chars including all national and special ones."
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:179 docs/manual/c/index.rst:16 docs/manual/c/api.rst:5
msgid ".. warning::"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:182
#, no-wrap
msgid ""
"   Please note, that some older phones might have problems displaying such\n"
"   message.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:185
msgid "Conversion ~~~~~~~~~~"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:190
msgid ""
"Gammu tries to do the best to handle non ASCII characters in your message.  "
"Everything is internally handled in Unicode (the input is converted "
"depending on your locales configuration) and in case message uses Unicode "
"the text will be given as such to the message."
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:197
msgid ""
"Should the message be sent in GSM Default Alphabet, Gammu will try to "
"convert all characters to keep message readable. Gammu does support multi "
"byte encoding for some characters in GSM Default Alphabet (it is needed for "
"``^`` ``{`` ``}`` ``\\`` ``[`` ``]`` ``~`` ``|``). The characters which are "
"not present in GSM Default Alphabet are transliterated to closest ASCII "
"equivalent (accents are removed).  Remaining not known characters are "
"replaced by question mark."
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:199
#, no-wrap
msgid ""
"SMS commands\n"
"____________\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:202
msgid ".. option:: addsmsfolder name"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:204
msgid ".. option:: deleteallsms folder"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:206
#, no-wrap
msgid "    Delete all SMS from specified SMS folder.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:208
msgid ".. option:: deletesms folder start [stop]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:211
#, no-wrap
msgid ""
"    Delete SMS from phone. See description for :option:`gammu getsms` for "
"info about\n"
"    sms folders naming convention. \n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:213 docs/manual/gammu/index.rst:236 docs/manual/gammu/index.rst:253 docs/manual/gammu/index.rst:673 docs/manual/gammu/index.rst:733 docs/manual/gammu/index.rst:956 docs/manual/gammu/index.rst:1415 docs/manual/gammu/index.rst:1425 docs/manual/gammu/index.rst:1431
#, no-wrap
msgid "    Locations are numerated from 1.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:215
msgid ".. option:: displaysms ... (options like in sendsms)"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:218
#, no-wrap
msgid ""
"    Displays PDU data of encoded SMS messages. It accepts same parameters "
"and \n"
"    behaves same like sendsms.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:220
msgid ".. option:: getallsms -pbk"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:225
#, no-wrap
msgid ""
"    Get all SMS from phone. In some phones you will have also SMS "
"templates\n"
"    and info about locations used to save Picture Images. With each sms "
"you\n"
"    will see location. If you want to get such sms from phone alone, use\n"
"    :option:`gammu getsms`.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:227
msgid ".. option:: geteachsms -pbk"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:230
#, no-wrap
msgid ""
"    Similiary to :option:`gammu getallsms`. Difference is, that\n"
"    links all concatenated sms\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:232
msgid ".. option:: getsms folder start [stop]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:234
#, no-wrap
msgid "    Get SMS. \n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:240
#, no-wrap
msgid ""
"    Folder 0 means that sms is being read from \"flat\" memory (all sms from "
"all\n"
"    folders have unique numbers). It's sometimes emulated by Gammu. You \n"
"    can use it with all phones.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:247
#, no-wrap
msgid ""
"    Other folders like 1, 2, etc. match folders in phone such as Inbox, "
"Outbox, etc.\n"
"    and each sms has unique number in his folder. Name of folders can\n"
"    depend on your phone (the most often 1=\"Inbox\", 2=\"Outbox\", etc.).\n"
"    This method is not supported by all phones (for example, not supported\n"
"    by Nokia 3310, 5110, 6110). If work with your phone, use\n"
"    :option:`gammu getsmsfolders` to get folders list.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:249
msgid ".. option:: getsmsc [start [stop]]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:251
#, no-wrap
msgid "    Get SMSC settings from SIM card. \n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:255
msgid ".. option:: getsmsfolders"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:257
#, no-wrap
msgid "    Get names for SMS folders in phone\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:259
msgid ""
".. option:: savesms TYPE [type parameters] [type options] [-folder id] "
"[-unread] [-read] [-unsent] [-sent] [-sender number] [-smsname name] "
"[-smscset number] [-smscnumber number] [-reply] [-maxsms num]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:261
#, no-wrap
msgid "   Saves SMS to phone, see bellow for ``TYPE`` options.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:263
#, no-wrap
msgid "    .. option:: -smscset number\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:265
#, no-wrap
msgid ""
"        SMSC number will be taken from phone stored SMSC configuration "
"``number``. \n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:267
#, no-wrap
msgid "        Default: 1\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:269
#, no-wrap
msgid "    .. option:: -smscnumber number\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:271
#, no-wrap
msgid "        SMSC number\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:273
#, no-wrap
msgid "    .. option:: -reply\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:275
#, no-wrap
msgid "        reply SMSC is set\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:277
#, no-wrap
msgid "    .. option:: -maxnum number\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:280
#, no-wrap
msgid ""
"        Limit maximal number of messages which will be\n"
"        created. If there are more messages, Gammu will terminate with "
"failure.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:282
#, no-wrap
msgid "    .. option:: -folder number\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:284
#, no-wrap
msgid "        save to specified folder. \n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:286
#, no-wrap
msgid "        Folders are numerated from 1.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:288
#, no-wrap
msgid ""
"        The most often folder 1 = \"Inbox\", 2 = \"Outbox\",etc. Use "
":option:`gammu getsmsfolders` to get folder list.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:290
#, no-wrap
msgid "    .. option:: -unread\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:294
#, no-wrap
msgid ""
"        makes message unread. In some phones (like 6210) you won't see \n"
"        unread sms envelope after saving such sms. In some phones with "
"internal \n"
"        SMS memory (like 6210) after using it with folder 1 SIM SMS memory "
"will be used\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:296
#, no-wrap
msgid "    .. option:: -read\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:299
#, no-wrap
msgid ""
"        makes message read. In some phones with internal\n"
"        SMS memory (like 6210) after using it with folder 1 SIM SMS memory "
"will be used\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:301
#, no-wrap
msgid "    .. option:: -unsent\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:303
#, no-wrap
msgid "        makes message unsent\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:305
#, no-wrap
msgid "    .. option:: -sent\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:307
#, no-wrap
msgid "        makes message sent\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:309
#, no-wrap
msgid "    .. option:: -smsname name\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:311
#, no-wrap
msgid "        set message name\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:313
#, no-wrap
msgid "    .. option:: -sender number\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:315
#, no-wrap
msgid "        set sender number (default: ``Gammu``)\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:317
#, no-wrap
msgid "    .. option:: -maxsms num\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:319
#, no-wrap
msgid "        maximal number of SMS messages to create\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:321
#, no-wrap
msgid "    Types of messages:\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:323
#, no-wrap
msgid "    .. option:: ANIMATION frames file1 file2...\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:327
#, no-wrap
msgid ""
"        Save an animation as a SMS. You need to give\n"
"        number of frames and picture for each frame. Each picture can be in "
"any\n"
"        picture format which Gammu supports (B/W bmp, gif, wbmp, nol, "
"nlm...).\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:329
#, no-wrap
msgid "    .. option:: BOOKMARK file location \n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:332
#, no-wrap
msgid ""
"        Read WAP bookmark from file created by :option:`gammu backup` "
"command and saves in\n"
"        Nokia format as SMS\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:335
#, no-wrap
msgid "    .. option:: CALENDAR file location \n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:340
#, no-wrap
msgid ""
"        Read calendar note from file created by :option:`gammu backup` "
"command and saves in\n"
"        VCALENDAR 1.0 format as SMS. The location identifies position of "
"calendar item \n"
"        to be read in backup file (usually 1, but can be useful in case the "
"backup contains \n"
"        more items).\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:343
#, no-wrap
msgid "    .. option:: CALLER file \n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:346
#, no-wrap
msgid ""
"        Save caller logo as sms in Nokia (Smart Messaging)\n"
"        format - size 72x14, two colors.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:348
#, no-wrap
msgid "        .. warning:: \n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:352
#, no-wrap
msgid ""
"           Please note, that it isn't designed for colour logos available "
"for\n"
"           example in DCT4/TIKU - you need to put bitmap file there inside\n"
"           phone using filesystem commands.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:356
#, no-wrap
msgid ""
"    .. option:: EMS [-unicode] [-16bit] [-format lcrasbiut] [-text text] "
"[-unicodefiletext file] [-defsound ID] [-defanimation ID] [-tone10 file] "
"[-tone10long file] [-tone12 file] [-tone12long file] [-toneSE file] "
"[-toneSElong file] [-fixedbitmap file] [-variablebitmap file] "
"[-variablebitmaplong file] [-animation frames file1 ...] [-protected "
"number]\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:358
#, no-wrap
msgid ""
"        Saves EMS sequence. All format specific parameters (like "
":option:`-defsound`) can be used few times.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:360 docs/manual/gammu/index.rst:589
#, no-wrap
msgid "        .. option:: -text\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:362
#, no-wrap
msgid "            adds text\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:364
#, no-wrap
msgid "        .. option:: -unicodefiletext\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:366
#, no-wrap
msgid "            adds text from Unicode file\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:368
#, no-wrap
msgid "        .. option:: -defanimation\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:370
#, no-wrap
msgid ""
"            adds default animation with ID specified by user. ID for "
"different phones are different.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:372
#, no-wrap
msgid "        .. option:: -animation\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:374
#, no-wrap
msgid "            adds \"frames\" frames read from file1, file2, etc.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:376
#, no-wrap
msgid "        .. option:: -defsound\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:378
#, no-wrap
msgid ""
"            adds default sound with ID specified by user. ID for different "
"phones are different.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:380
#, no-wrap
msgid "        .. option:: -tone10\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:382
#, no-wrap
msgid ""
"            adds IMelody version 1.0 read from RTTL or other compatible "
"file\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:384
#, no-wrap
msgid "        .. option:: -tone10long\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:388
#, no-wrap
msgid ""
"            IMelody version 1.0 saved in one of few SMS with UPI. Phones\n"
"            compatible with UPI (like Sony-Ericsson phones) will read such\n"
"            ringtone as one\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:390
#, no-wrap
msgid "        .. option:: -tone12\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:392
#, no-wrap
msgid ""
"            adds IMelody version 1.2 read from RTTL or other compatible "
"file\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:394
#, no-wrap
msgid "        .. option:: -tone12long\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:398
#, no-wrap
msgid ""
"            IMelody version 1.2 saved in one of few SMS with UPI. Phones\n"
"            compatible with UPI (like Sony-Ericsson phones) will read such\n"
"            ringtone as one\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:400
#, no-wrap
msgid "        .. option:: -toneSE\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:402
#, no-wrap
msgid ""
"            adds IMelody in \"short\" form supported by Sony-Ericsson "
"phones\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:404
#, no-wrap
msgid "        .. option:: -toneSElong\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:406
#, no-wrap
msgid "            add Sony-Ericsson IMelody saved in one or few SMS with UPI\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:408
#, no-wrap
msgid "        .. option:: -variablebitmap\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:410
#, no-wrap
msgid "            bitmap in any size saved in one SMS\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:412
#, no-wrap
msgid "        .. option:: -variablebitmaplong\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:414
#, no-wrap
msgid "            bitmap with maximal size 96x128 saved in one or few sms\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:416
#, no-wrap
msgid "        .. option:: -fixedbitmap\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:418
#, no-wrap
msgid "            bitmap 16x16 or 32x32\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:420
#, no-wrap
msgid "        .. option:: -protected\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:425
#, no-wrap
msgid ""
"            all ringtones and bitmaps after this parameter (excluding "
"default\n"
"            ringtones and logos) will be \"protected\" (in phones compatible "
"with\n"
"            ODI like SonyEricsson products it won't be possible to forward "
"them\n"
"            from phone menu)\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:427 docs/manual/gammu/index.rst:603
#, no-wrap
msgid "        .. option:: -16bit\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:430 docs/manual/gammu/index.rst:606
#, no-wrap
msgid ""
"            Gammu uses SMS headers with 16-bit numbers for saving linking "
"info\n"
"            in SMS (it means less chars available for user in each SMS)\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:432
#, no-wrap
msgid "        .. option:: -format lcrasbiut \n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:434
#, no-wrap
msgid ""
"            last text will be formatted. You can use combinations of "
"chars:\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:448
#, no-wrap
msgid ""
"            =========  ==================\n"
"            Character  Formating\n"
"            =========  ==================\n"
"            ``l``      left aligned\n"
"            ``c``      centered\n"
"            ``r``      right aligned\n"
"            ``a``      large font\n"
"            ``s``      small font\n"
"            ``b``      bold font\n"
"            ``i``      italic font\n"
"            ``u``      underlined font\n"
"            ``t``      strikethrough font\n"
"            =========  ==================\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:451
#, no-wrap
msgid "    .. option:: MMSINDICATOR URL Title Sender \n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:457
#, no-wrap
msgid ""
"        Creates a MMS indication SMS. It contains URL where the actual MMS\n"
"        payload is stored which needs to be SMIL encoded. The phone usually "
"\n"
"        downloads the MMS data using special APN, which does not count to\n"
"        transmitted data, however there might be limitations which URLs "
"can\n"
"        be accessed.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:459
#, no-wrap
msgid "    .. option:: MMSSETTINGS file location  \n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:462
#, no-wrap
msgid ""
"        Saves a message with MMS configuration. The\n"
"        configuration will be read from Gammu backup file from given "
"location.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:464
#, no-wrap
msgid "    .. option:: OPERATOR file  [-netcode netcode] [-biglogo]\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:467
#, no-wrap
msgid ""
"        Save operator logo as sms in Nokia (Smart Messaging) format - size\n"
"        72x14 in two colors.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:469
#, no-wrap
msgid "        .. option:: -biglogo\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:471
#, no-wrap
msgid "            Use 78x21 formatted logo instead of standard 72x14.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:473
#, no-wrap
msgid "        .. note:: \n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:477
#, no-wrap
msgid ""
"           This isn't designed for colour logos available for example in "
"newer\n"
"           phones - you need to put bitmap file there inside phone using\n"
"           filesystem commands.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:480
#, no-wrap
msgid "    .. option:: PICTURE file  [-text text] [-unicode] [-alcatelbmmi]\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:484
#, no-wrap
msgid ""
"        Read bitmap from 2 colors file (bmp, nlm, nsl, ngg, nol, wbmp, "
"etc.), format\n"
"        into bitmap in Smart Messaging (72x28, 2 colors, called often "
"Picture Image\n"
"        and saved with text) or Alcatel format and send/save over SMS.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:487
#, no-wrap
msgid ""
"    .. option:: PROFILE  [-name name] [-bitmap bitmap] [-ringtone "
"ringtone]\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:490
#, no-wrap
msgid ""
"        Read ringtone (RTTL) format, bitmap (Picture Image size) and name, "
"format into\n"
"        Smart Messaging profile and send/save as SMS. \n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:492
#, no-wrap
msgid "        .. warning::\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:495
#, no-wrap
msgid ""
"           Please note, that this format is abandoned by Nokia and "
"supported\n"
"           by some (older) devices only like Nokia 3310.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:498
#, no-wrap
msgid "    .. option:: RINGTONE file  [-long] [-scale]\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:501
#, no-wrap
msgid ""
"        Read RTTL ringtone from file and save as SMS\n"
"        into SIM/phone memory. Ringtone is saved in Nokia (Smart Messaging) "
"format.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:503
#, no-wrap
msgid "        .. option:: -long\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:506
#, no-wrap
msgid ""
"            ringtone is saved using Profile style. It can be longer (and "
"saved\n"
"            in 2 SMS), but decoded only by newer phones (like 33xx)\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:508
#, no-wrap
msgid "        .. option:: -scale\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:511
#, no-wrap
msgid ""
"            ringtone will have Scale info for each note. It will allow to "
"edit\n"
"            it correctly later in phone composer (for example, in 33xx)\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:514
#, no-wrap
msgid ""
"    .. option:: SMSTEMPLATE  [-unicode] [-text text] [-unicodefiletext file] "
"[-defsound ID] [-defanimation ID] [-tone10 file] [-tone10long file] [-tone12 "
"file] [-tone12long file] [-toneSE file] [-toneSElong file] [-variablebitmap "
"file] [-variablebitmaplong file] [-animation frames file1 ...]\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:516
#, no-wrap
msgid "        Saves a SMS template (for Alcatel phones).\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:519
#, no-wrap
msgid ""
"    .. option:: TEXT  [-inputunicode] [-16bit] [-flash] [-len len] [-autolen "
"len] [-unicode] [-enablevoice] [-disablevoice] [-enablefax] [-disablefax] "
"[-enableemail] [-disableemail] [-voidsms] [-replacemessages ID] "
"[-replacefile file] [-text msgtext] [-textutf8 msgtext]\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:522
#, no-wrap
msgid ""
"        Take text from stdin (or commandline if -text \n"
"        specified) and save as text SMS into SIM/phone memory.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:524
#, no-wrap
msgid "        .. option:: -flash\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:526
#, no-wrap
msgid ""
"            Class 0 SMS (should be displayed after receiving on recipients' "
"phone display after receiving without entering Inbox)\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:528
#, no-wrap
msgid "        .. option:: -len len\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:531
#, no-wrap
msgid ""
"            specify, how many chars will be read. When use this option and "
"text\n"
"            will be longer than 1 SMS, will be split into more linked SMS\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:533
#, no-wrap
msgid "        .. option:: -autolen len\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:538
#, no-wrap
msgid ""
"            specify, how many chars will be read. When use this option and "
"text\n"
"            will be longer than 1 SMS, will be split into more linked\n"
"            SMS.Coding type (SMS default alphabet/Unicode) is set according "
"to\n"
"            input text\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:540
#, no-wrap
msgid "        .. option:: -enablevoice\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:542
#, no-wrap
msgid "            sms will set voice mail indicator. Text will be cut to 1 sms.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:544
#, no-wrap
msgid "        .. option:: -disablevoice\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:546
#, no-wrap
msgid ""
"            sms will not set voice mail indicator. Text will be cut to 1 "
"sms.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:548
#, no-wrap
msgid "        .. option:: -enablefax\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:550
#, no-wrap
msgid "            sms will set fax indicator. Text will be cut to 1 sms.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:552
#, no-wrap
msgid "        .. option:: -disablefax\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:554
#, no-wrap
msgid "            sms will not set fax indicator. Text will be cut to 1 sms.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:556
#, no-wrap
msgid "        .. option:: -enableemail\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:558
#, no-wrap
msgid "            sms will set email indicator. Text will be cut to 1 sms.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:560
#, no-wrap
msgid "        .. option:: -disableemail\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:562
#, no-wrap
msgid "            sms will not set email indicator. Text will be cut to 1 sms.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:564
#, no-wrap
msgid "        .. option:: -voidsms\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:567
#, no-wrap
msgid ""
"            many phones after receiving it won't display anything, only "
"beep,\n"
"            vibrate or turn on light. Text will be cut to 1 sms.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:569
#, no-wrap
msgid "        .. option:: -unicode\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:571
#, no-wrap
msgid "            SMS will be saved in Unicode format\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:573
#, no-wrap
msgid "            .. note:: \n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:577
#, no-wrap
msgid ""
"                The ``~`` char in SMS text and :option:`-unicode` option\n"
"                (Unicode coding required) can cause text of SMS after "
"``~``\n"
"                char  blink in some phones (like Nokia 33xx).\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:579
#, no-wrap
msgid "        .. option:: -inputunicode\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:581
#, no-wrap
msgid "            input text is in Unicode.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:583 docs/manual/gammu/index.rst:597
#, no-wrap
msgid "            .. note::\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:587
#, no-wrap
msgid ""
"                You can create Unicode file using WordPad in Windows "
"(during\n"
"                saving select \"Unicode Text Document\" format). In Unix can "
"use\n"
"                for example YUdit or vim.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:591
#, no-wrap
msgid "            get text from command line instead of stdin.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:593
#, no-wrap
msgid "        .. option:: -textutf8\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:595
#, no-wrap
msgid "            get text in UTF-8 from command line instead of stdin.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:601
#, no-wrap
msgid ""
"                Gammu detects your locales and uses by default encoding "
"based\n"
"                on this. Use this option only when you know the input will "
"be\n"
"                in UTF-8 in all cases.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:608
#, no-wrap
msgid "        .. option:: -replacemessages ID\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:612
#, no-wrap
msgid ""
"            ``ID`` can be 1..7. When you will use option and send more "
"single\n"
"            SMS to one recipient with the same ID, each another SMS will\n"
"            replace each previous with the same ID\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:614
#, no-wrap
msgid "        .. option:: -replacefile file\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:621
#, no-wrap
msgid ""
"            when you want, you can make file in such format:\n"
"            ``src_unicode_char1, dest_unicode_char1, src_unicode_char2, "
"dest_unicode_char2``\n"
"            (everything in one line). After reading text\n"
"            for SMS from stdin there will be made translation and each src "
"char\n"
"            will be converted to dest char. In docs there is example file\n"
"            (``replace.txt``), which will change all \"a\" chars to \"1\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:623
#, no-wrap
msgid "    .. option:: TODO file location \n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:626
#, no-wrap
msgid ""
"        Saves a message with a todo entry. The content will\n"
"        be read from any backup format which Gammu supports and from given "
"location.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:628
#, no-wrap
msgid "    .. option:: VCARD10|VCARD21 file SM|ME location [-nokia] \n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:635
#, no-wrap
msgid ""
"        Read phonebook entry from file created by :option:`gammu backup`\n"
"        command and saves in VCARD 1.0 (only name and default number) or "
"VCARD\n"
"        2.1 (all entry details with all numbers, text and name) format as "
"SMS.\n"
"        The location identifies position of contact item to be read in "
"backup\n"
"        file (usually 1, but can be useful in case the backup contains "
"more\n"
"        items).\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:638
#, no-wrap
msgid "    .. option:: WAPINDICATOR URL Title \n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:641
#, no-wrap
msgid ""
"        Saves a SMS with a WAP indication for given\n"
"        URL and title.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:644
#, no-wrap
msgid "    .. option:: WAPSETTINGS file location DATA|GPRS \n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:647
#, no-wrap
msgid ""
"        Read WAP settings from file created by :option:`gammu backup` "
"command\n"
"        and saves in Nokia format as SMS\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:650
msgid ""
".. option:: sendsms TYPE destination [type parameters] [type options] "
"[-smscset number] [-smscnumber number] [-reply] [-report] [-validity "
"HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [-save [-folder number]]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:652
#, no-wrap
msgid ""
"    Sends a message to a ``destination`` number, most parameters are same as "
"for :option:`gammu savesms`.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:654
#, no-wrap
msgid "    .. option:: -save\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:656
#, no-wrap
msgid "        will also save message which is being sent\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:658
#, no-wrap
msgid "    .. option:: -report\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:660
#, no-wrap
msgid "        request delivery report for message\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:662
#, no-wrap
msgid "    .. option:: -validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:666
#, no-wrap
msgid ""
"        sets how long will be the\n"
"        message valid (SMSC will the discard the message after this time if "
"it could\n"
"        not deliver it).\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:668
msgid ".. option:: setsmsc location number"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:671
#, no-wrap
msgid ""
"    Set SMSC settings on SIM card. This keeps all SMSC configuration\n"
"    intact, it just changes the SMSC number.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:676
#, no-wrap
msgid ""
"Memory (phonebooks and calls) commands\n"
"--------------------------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:679
msgid ".. _memory types:"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:681
#, no-wrap
msgid ""
"Memory types\n"
"____________\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:684
msgid "Gammu recognizes following memory types:"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:703
#, no-wrap
msgid ""
"``DC``\n"
"     Dialled calls\n"
"``MC``\n"
"     Missed calls\n"
"``RC``\n"
"     Received calls\n"
"``ON``\n"
"     Own numbers\n"
"``VM``\n"
"     voice mailbox\n"
"``SM``\n"
"     SIM phonebook\n"
"``ME``\n"
"     phone internal phonebook\n"
"``FD``\n"
"     fixed dialling\n"
"``SL``\n"
"     sent SMS log\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:706
#, no-wrap
msgid ""
"Memory commands\n"
"_______________\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:709
msgid ".. option:: deleteallmemory DC|MC|RC|ON|VM|SM|ME|MT|FD|SL"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:711
#, no-wrap
msgid "    Deletes all entries from specified memory type.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:713 docs/manual/gammu/index.rst:719 docs/manual/gammu/index.rst:725 docs/manual/gammu/index.rst:731
#, no-wrap
msgid "    For memory types description see :ref:`memory types`.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:715
msgid ".. option:: deletememory DC|MC|RC|ON|VM|SM|ME|MT|FD|SL start [stop]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:717
#, no-wrap
msgid "    Deletes entries in specified range from specified memory type.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:721
msgid ".. option:: getallmemory DC|MC|RC|ON|VM|SM|ME|MT|FD|SL"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:723
#, no-wrap
msgid "    Get all memory locations from phone. \n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:727
msgid ".. option:: getmemory DC|MC|RC|ON|VM|SM|ME|MT|FD|SL start [stop [-nonempty]]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:729
#, no-wrap
msgid "    Get memory location from phone. \n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:735
msgid ".. option:: getspeeddial start [stop]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:737
#, no-wrap
msgid "    Gets speed dial choices.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:739
msgid ".. option:: searchmemory text"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:743
#, no-wrap
msgid ""
"    Scans all memory entries for given text. It performs\n"
"    case insensitive substring lookup. You can interrupt searching by "
"pressing\n"
"    :kbd:`Ctrl+C`.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:745
#, no-wrap
msgid ""
"Filesystem commands\n"
"-------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:750
msgid ""
"Gammu allows to access phones using native protocol (Nokias) or OBEX. Your "
"phone can also support usb storage, which is handled on the operating system "
"level and Gammu does not use that."
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:752
msgid ""
".. option:: addfile folderID name [-type "
"JAR|BMP|PNG|GIF|JPG|MIDI|WBMP|AMR|3GP|NRT] [-readonly] [-protected] "
"[-system] [-hidden] [-newtime]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:754
#, no-wrap
msgid "    Add file with specified name to folder with specified folder ID.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:756
#, no-wrap
msgid "    .. option:: -type \n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:758
#, no-wrap
msgid ""
"       File type was required for filesystem 1 in Nokia phones (current "
"filesystem 2 doesn't need this).\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:760
#, no-wrap
msgid "    .. option:: -readonly\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:762
#, no-wrap
msgid "       Sets the read only attribute.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:764
#, no-wrap
msgid "    .. option:: -protected\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:767
#, no-wrap
msgid ""
"       Sets the protected attribute (file can't be for example forwarded\n"
"       from phone menu).\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:769
#, no-wrap
msgid "    .. option:: -system\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:771
#, no-wrap
msgid "       Sets the system attribute.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:773
#, no-wrap
msgid "    .. option:: -hidden\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:775
#, no-wrap
msgid "       Sets the hidden attribute (file is hidden from phone menu).\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:777
#, no-wrap
msgid "    .. option:: -newtime \n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:779
#, no-wrap
msgid ""
"        After using it date/time of file modification will be set to moment "
"of uploading.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:781
msgid ".. option:: addfolder parentfolderID name"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:784
#, no-wrap
msgid ""
"    Create a folder in phone with specified name in a\n"
"    folder with specified folder ID.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:786
msgid ".. option:: deletefiles fileID"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:788
#, no-wrap
msgid "    Delete files with given IDs.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:790
msgid ".. option:: deletefolder name"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:792
#, no-wrap
msgid "    Delete folder with given ID.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:794
msgid ".. option:: getfilefolder fileID, fileID, ..."
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:796
#, no-wrap
msgid ""
"    Retrieve files or all files from folder with given IDs from a phone "
"filesytem.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:798
msgid ".. option:: getfiles fileID, fileID, ..."
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:800
#, no-wrap
msgid "    Retrieve files with given IDs from a phone filesytem.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:802
msgid ".. option:: getfilesystem [-flatall|-flat]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:804
#, no-wrap
msgid ""
"    Display info about all folders and files in phone memory/memory card. By "
"default there is tree displayed, you can change it:\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:806
#, no-wrap
msgid "    .. option:: -flatall\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:808
#, no-wrap
msgid ""
"        there are displayed full file/folder details like ID (first "
"parameter in line)\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:810
#, no-wrap
msgid "    .. option:: -flat\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:812
#, no-wrap
msgid ""
"    .. note:: In some phones (like N6230) content of some folders (with more "
"files) can be cut (only part of files will be displayed) for example on "
"infrared connection. This is not Gammu issue, but phone firmware problem.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:814
msgid ".. option:: getfilesystemstatus"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:817
#, no-wrap
msgid ""
"    Display info filesystem status - number of\n"
"    bytes available, used or used by some specific content.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:819
msgid ".. option:: getfolderlisting folderID"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:821
#, no-wrap
msgid ""
"    Display files and folders available in folder with given folder ID. You "
"can get ID's using getfilesystem -flatall.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:828
#, no-wrap
msgid ""
"       Please note, that in some phones (like N6230) content of some "
"folders\n"
"       (with more files) can be cut (only part of files will be displayed) "
"for\n"
"       example on infrared connection. This is not Gammu issue, but phone\n"
"       firmware problem.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:830
msgid ".. option:: getrootfolders"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:832
#, no-wrap
msgid "    Display info about drives available in phone/memory card.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:834
msgid ".. option:: sendfile name"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:838
#, no-wrap
msgid ""
"    Sends file to a phone. It's up to phone to decide where\n"
"    to store this file and how to handle it (for example when you send vCard "
"or\n"
"    vCalendar, most of phones will offer you to import it.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:840
msgid ""
".. option:: setfileattrib folderID [-system] [-readonly] [-hidden] "
"[-protected]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:843
#, no-wrap
msgid ""
"Logo and pictures commands\n"
"--------------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:848
msgid ""
"These options are mainly (there are few exceptions) for monochromatic logos "
"and images available in older phones. Recognized file formats: xpm (only "
"saving), 2-colors bmp, nlm, nsl, ngg, nol, wbmp, gif (for Samsung)."
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:850
msgid ""
"In new models all bitmaps are saved in filesystem and should go into "
"filesystem section"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:852
msgid ""
".. option:: copybitmap inputfile [outputfile "
"[OPERATOR|PICTURE|STARTUP|CALLER]]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:857
#, no-wrap
msgid ""
"    Allow to convert logos files to another. When give ONLY inputfile, "
"output will\n"
"    be written to stdout using ASCII art. When give output file and format, "
"in\n"
"    some file formats (like NLM) will be set indicator informing about logo "
"type\n"
"    to given.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:859
msgid ".. option:: getbitmap TYPE [type options]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:861
#, no-wrap
msgid "    Reads bitmap from phone, following types are supported:\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:863 docs/manual/gammu/index.rst:893
#, no-wrap
msgid "    .. option:: CALLER location [file]\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:865
#, no-wrap
msgid "        Get caller group logo from phone. Locations 1-5.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:867
#, no-wrap
msgid "    .. option:: DEALER\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:871
#, no-wrap
msgid ""
"        In some models it's possible to save dealer welcome note - text "
"displayed\n"
"        during enabling phone, which can't be edited from phone menu.  Here "
"you can\n"
"        get it.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:873
#, no-wrap
msgid "    .. option:: OPERATOR [file]\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:875
#, no-wrap
msgid ""
"        Get operator logo (picture displayed instead of operator name) from "
"phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:877
#, no-wrap
msgid "    .. option:: PICTURE location [file]\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:879
#, no-wrap
msgid "        Get Picture Image from phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:881
#, no-wrap
msgid "    .. option:: STARTUP [file]\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:883
#, no-wrap
msgid "        Get static startup logo from phone. Allow to save it in file.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:885
#, no-wrap
msgid "    .. option:: TEXT\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:887
#, no-wrap
msgid "        Get startup text from phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:889
msgid ".. option:: setbitmap TYPE [type options]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:891
#, no-wrap
msgid "    Sets bitmap in phone, following types are supported:\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:895
#, no-wrap
msgid "        Set caller logo.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:897
#, no-wrap
msgid "    .. option:: COLOUROPERATOR [fileID [netcode]]\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:899
#, no-wrap
msgid "        Sets color operator logo in phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:901
#, no-wrap
msgid "    .. option:: COLOURSTARTUP [fileID]\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:903
#, no-wrap
msgid "    .. option:: DEALER text\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:905
#, no-wrap
msgid ""
"        Sets welcome message configured by dealer, which usually can not be "
"changed in phone menus.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:907
#, no-wrap
msgid "    .. option:: OPERATOR [file [netcode]]\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:912
#, no-wrap
msgid ""
"        Set operator logo in phone. When won't give file and netcode, "
"operator logo\n"
"        will be removed from phone. When will give only filename, operator "
"logo will\n"
"        be displayed for your current GSM operator. When you give "
"additionally network\n"
"        code, it will be displayed for this operator.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:914
#, no-wrap
msgid "    .. option:: PICTURE file location [text]\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:916
#, no-wrap
msgid "        Sets picture image in phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:918
#, no-wrap
msgid "    .. option:: STARTUP file|1|2|3\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:922
#, no-wrap
msgid ""
"        Set startup logo in phone. It can be static (then you will have to "
"give file\n"
"        name) or one of predefined animated (only some phones like Nokia "
"3310 or 3330\n"
"        supports it, use location 1, 2 or 3 for these).\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:924
#, no-wrap
msgid "    .. option:: TEXT text\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:926
#, no-wrap
msgid "        Sets startup text in phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:928
#, no-wrap
msgid "    .. option:: WALLPAPER fileID\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:930
#, no-wrap
msgid "        Sets wallpaper in phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:932
#, no-wrap
msgid ""
"Ringtones commands\n"
"------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:936
msgid ""
"Ringtones are mostly supported only for older phones. For recent phones you "
"usually just upload them to some folder in phone filesystem."
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:941
msgid ""
"There are recognized various file formats by options described below: rttl, "
"binary format created for Gammu, mid (saving), re (reading), ott, "
"communicator, ringtones format found in fkn.pl, wav (saving), ime/imy "
"(saving), rng, mmf (for Samsung)."
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:944
msgid ".. option:: copyringtone source destination [RTTL|BINARY]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:946
#, no-wrap
msgid "    Copy source ringtone to destination.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:948
msgid ".. option:: getphoneringtone location [file]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:950
#, no-wrap
msgid "    Get one of \"default\" ringtones and saves into file\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:952
msgid ".. option:: getringtone location [file]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:954
#, no-wrap
msgid "    Get ringtone from phone in RTTL or BINARY format. \n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:958
msgid ".. option:: getringtoneslist"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:960
msgid ".. option:: playringtone file"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:962
#, no-wrap
msgid ""
"    Play aproximation of ringtone over phone buzzer. File can be in RTTL or "
"BINARY (Nokia DCT3) format.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:964
msgid ".. option:: playsavedringtone number"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:967
#, no-wrap
msgid ""
"    Play one of built-in ringtones. This option is available for DCT4 "
"phones.\n"
"    For getting ringtones list use :option:`gammu getringtoneslist`.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:969
msgid ".. option:: setringtone file [-location location] [-scale] [-name name]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:972
#, no-wrap
msgid ""
"    Set ringtone in phone. When don't give location, it will be written\n"
"    \"with preview\" (in phones supporting this feature like 61xx or "
"6210).\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:974
#, no-wrap
msgid "    .. option:: -scale\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:978
#, no-wrap
msgid ""
"        Scale information will be added to each note of RTTL ringtone. It "
"will\n"
"        avoid scale problems available during editing ringtone in composer\n"
"        from phone menu (for example, in Nokia 33xx).\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:980 docs/manual/gammu/index.rst:1026 docs/manual/gammu/index.rst:1320
#, no-wrap
msgid "    .. note:: \n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:983
#, no-wrap
msgid ""
"        When use ``~`` char in ringtone name, in some phones (like 33xx) "
"name\n"
"        will blink later in phone menus.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:986
#, no-wrap
msgid ""
"Calendar notes commands\n"
"-----------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:989
msgid ""
"In Nokia 3310, 3315 and 3330 these are named \"Reminders\" and have some "
"limitations (depending on phone firmware version)."
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:991
msgid ".. option:: deletecalendar start [stop]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:993
#, no-wrap
msgid "    Deletes selected calendar entries in phone. \n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:995
msgid ".. option:: getallcalendar"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:997
#, no-wrap
msgid "    Retrieves all calendar entries from phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:999
msgid ".. option:: getcalendar start [stop]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1001
#, no-wrap
msgid "    Retrieves selected calendar entries from phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1004
#, no-wrap
msgid ""
"To do list commands\n"
"-------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1007
msgid ".. option:: deletetodo start [stop]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1009
#, no-wrap
msgid "    Deletes selected todo entries in phone. \n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1011
msgid ".. option:: getalltodo"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1013
#, no-wrap
msgid "    Retrieves all todo entries from phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1015
msgid ".. option:: gettodo start [stop]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1017
#, no-wrap
msgid "    Retrieves selected todo entries from phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1019
#, no-wrap
msgid ""
"Notes commands\n"
"--------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1022
msgid ".. option:: getallnotes"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1024
#, no-wrap
msgid "    Reads all notes from the phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1029
#, no-wrap
msgid ""
"        Not all phones supports this function, especially most Sony "
"Ericsson\n"
"        phones even if they have notes inside phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1032
#, no-wrap
msgid ""
"Date, time and alarm commands\n"
"-----------------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1035
msgid ".. option:: getalarm [start]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1038
#, no-wrap
msgid ""
"    Get alarm from phone, if no location is specified,\n"
"    1 is used.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1040
msgid ".. option:: getdatetime"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1042
#, no-wrap
msgid "    Get date and time from phone\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1044
msgid ".. option:: setalarm hour minute"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1046
#, no-wrap
msgid "    Sets repeating alarm in phone on selected time.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1048
msgid ".. option:: setdatetime [HH:MM[:SS]] [YYYY/MM/DD]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1052
#, no-wrap
msgid ""
"    Set date and time in phone to date and time set in computer. Please \n"
"    note, that this option doesn't show clock on phone screen. It only set\n"
"    date and time.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1057
#, no-wrap
msgid ""
"       You can make such synchronization each time, when will connect your\n"
"       phone and use Gammu. See :config:option:`SynchronizeTime` in "
":ref:`gammurc` for details.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1060
#, no-wrap
msgid ""
"Categories commands\n"
"-------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1065
#, no-wrap
msgid "    Categories are supported only on few phones (Alcatel).\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1067
msgid ".. option:: addcategory TODO|PHONEBOOK text"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1069
msgid ".. option:: getallcategory TODO|PHONEBOOK"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1071
msgid ".. option:: getcategory TODO|PHONEBOOK start [stop]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1073
msgid ".. option:: listmemorycategory text|number"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1075
msgid ".. option:: listtodocategory text|number"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1078
#, no-wrap
msgid ""
"Backing up and restoring commands\n"
"---------------------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1081
msgid ".. option:: addnew file [-yes] [-memory ME|SM|..]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1085
#, no-wrap
msgid ""
"    Adds data written in file created using :option:`gammu backup` "
"command. All things\n"
"    backed up :option:`gammu backup` can be restored (when made backup to "
"Gammu text\n"
"    file).\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1089
#, no-wrap
msgid ""
"    Please note that this adds all content of backup file to phone and\n"
"    does not care about current data in the phone (no duplicates are \n"
"    detected).\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1092
#, no-wrap
msgid ""
"    Use -yes parameter to answer yes to all questions (you want to "
"automatically \n"
"    restore all data).\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1095
#, no-wrap
msgid ""
"    Use -memory parameter to force usage of defined memory type for storing "
"entries \n"
"    regardless what backu format says.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1097
msgid ".. option:: addsms folder file [-yes]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1100
#, no-wrap
msgid ""
"    Adds SMSes from file (format like :option:`gammu backupsms` uses) to\n"
"    selected folder in phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1102
msgid ".. option:: backup file [-yes]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1104
#, no-wrap
msgid ""
"    Backup your phone to file. It's possible to backup (depends on phone and "
"backup format):\n"
msgstr ""

#. type: Bullet: '    * '
#: docs/manual/gammu/index.rst:1114
msgid "phonebook from SIM and phone memory"
msgstr ""

#. type: Bullet: '    * '
#: docs/manual/gammu/index.rst:1114
msgid "calendar notes"
msgstr ""

#. type: Bullet: '    * '
#: docs/manual/gammu/index.rst:1114
msgid "SMSC settings"
msgstr ""

#. type: Bullet: '    * '
#: docs/manual/gammu/index.rst:1114
msgid "operator logo"
msgstr ""

#. type: Bullet: '    * '
#: docs/manual/gammu/index.rst:1114
msgid "startup (static) logo or startup text"
msgstr ""

#. type: Bullet: '    * '
#: docs/manual/gammu/index.rst:1114
msgid "WAP bookmarks"
msgstr ""

#. type: Bullet: '    * '
#: docs/manual/gammu/index.rst:1114
msgid "WAP settings"
msgstr ""

#. type: Bullet: '    * '
#: docs/manual/gammu/index.rst:1114
msgid "caller logos and groups"
msgstr ""

#. type: Bullet: '    * '
#: docs/manual/gammu/index.rst:1114
msgid "user ringtones"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1117
#, no-wrap
msgid ""
"    There are various backup formats supported and the backup format is "
"guessed\n"
"    based on file extension:\n"
msgstr ""

#. type: Bullet: '    * '
#: docs/manual/gammu/index.rst:1124
msgid "``.lmb`` - Nokia backup, supports contacts, caller logos and startup logo."
msgstr ""

#. type: Bullet: '    * '
#: docs/manual/gammu/index.rst:1124
msgid "``.vcs`` - vCalendar, supports calendar and todo."
msgstr ""

#. type: Bullet: '    * '
#: docs/manual/gammu/index.rst:1124
msgid "``.vcf`` - vCard, supports contacts."
msgstr ""

#. type: Bullet: '    * '
#: docs/manual/gammu/index.rst:1124
msgid "``.ldif`` - LDAP import, supports contacts."
msgstr ""

#. type: Bullet: '    * '
#: docs/manual/gammu/index.rst:1124
msgid "``.ics`` - iCalendar, supports calendar and todo."
msgstr ""

#. type: Bullet: '    * '
#: docs/manual/gammu/index.rst:1124
msgid ""
"Any other extension is Gammu backup file and it supports all data mentioned "
"above, see :ref:`gammu-backup` for more details."
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1126
msgid ".. option:: backupsms file [-yes|-all]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1128
#, no-wrap
msgid "    Stores all SMSes from phone to file into :ref:`gammu-smsbackup`. \n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1132
#, no-wrap
msgid ""
"    Use -yes for answering yes to all questions (backup all messages and \n"
"    delete them from phone), or -all to just backup all folders while "
"keeping\n"
"    messages in phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1134
msgid ".. option:: restore file [-yes]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1136 docs/manual/gammu/index.rst:1149 docs/manual/gammu/index.rst:1606
#, no-wrap
msgid "    .. warning:: \n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1139
#, no-wrap
msgid ""
"        Please note that restoring deletes all current content in phone. If "
"you\n"
"        want only to add entries to phone, use :option:`gammu addnew`.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1141
#, no-wrap
msgid ""
"    Restore settings written in file created using :option:`gammu backup` "
"command. \n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1145
#, no-wrap
msgid ""
"    In some phones restoring calendar notes will not show error, but won't\n"
"    be done, when phone doesn't have set clock inside.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1147
msgid ".. option:: restoresms file [-yes]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1151
#, no-wrap
msgid ""
"       Please note that this overwrites existing messages in phone (if it "
"supports it).\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1154
#, no-wrap
msgid ""
"    Restores SMSes from file (format like :option:`gammu backupsms` uses) "
"to\n"
"    selected folder in phone. \n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1156
msgid ".. option:: savefile TYPE [type options]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1159
#, no-wrap
msgid ""
"    Converts between various file formats supported by Gammu, following "
"types\n"
"    are supported:\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1161
#, no-wrap
msgid "    .. option:: BOOKMARK target.url file location\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1164
#, no-wrap
msgid ""
"        Converts backup format supported by\n"
"        Gammu to vBookmark file.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1166
#, no-wrap
msgid "    .. option:: CALENDAR target.vcs file location\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1171
#, no-wrap
msgid ""
"        Allows to convert between various backup formats which gammu\n"
"        supports for calendar events. The file type is guessed (for input "
"file\n"
"        guess is based on extension and file content, for output solely on "
"\n"
"        extension).\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1173
#, no-wrap
msgid "    .. option:: TODO target.vcs file location\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1178
#, no-wrap
msgid ""
"        Allows to convert between various backup formats which gammu\n"
"        supports for todo events. The file type is guessed (for input file\n"
"        guess is based on extension and file content, for output solely on "
"\n"
"        extension).\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1180
#, no-wrap
msgid "    .. option:: VCARD10|VCARD21 target.vcf file SM|ME location\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1185
#, no-wrap
msgid ""
"        Allows to convert between various backup formats which gammu\n"
"        supports for phonebook events. The file type is guessed (for input "
"file\n"
"        guess is based on extension and file content, for output solely on "
"\n"
"        extension).\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1187
#, no-wrap
msgid "    .. seealso:: :option:`gammu convertbackup`\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1189
msgid ".. option:: convertbackup source.file output.file"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1191
#, no-wrap
msgid "    .. versionadded:: 1.28.94\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1195
#, no-wrap
msgid ""
"    Converts backup between formats supported by Gammu. Unlike \n"
"    :option:`gammu savefile`, this does not give you any options what to\n"
"    convert, it simply takes converts all what can be saved into output "
"file.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1197
#, no-wrap
msgid "    .. seealso:: :option:`gammu savefile`\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1200
#, no-wrap
msgid ""
"Nokia specific commands\n"
"-----------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1203
msgid ".. option:: nokiaaddfile TYPE [type options]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1205
#, no-wrap
msgid "    Uploads file to phone to specific location for the type:\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1207
#, no-wrap
msgid ""
"    .. option:: APPLICATION|GAME file [-readonly] [-overwrite] "
"[-overwriteall]\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1211
#, no-wrap
msgid ""
"        Install the ``*.jar/*.jad`` file pair of a midlet in the application "
"or\n"
"        game menu of the phone. You need to specify filename without the "
"jar/jad\n"
"        suffix, both will be added automatically.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1213
#, no-wrap
msgid "        .. option:: -overwrite\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1216
#, no-wrap
msgid ""
"            Delete the application's .jad and .jar files before installing, "
"but\n"
"            doesn't delete the application data.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1218
#, no-wrap
msgid "        .. option:: -overwriteall\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1221
#, no-wrap
msgid ""
"            Delete the application (same as :option:`-overwrite`) and all "
"it's\n"
"            data.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1223
#, no-wrap
msgid ""
"        You can use :ref:`jadmaker` to generate a .jad file from a .jar "
"file.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1225
#, no-wrap
msgid ""
"    .. option:: "
"GALLERY|GALLERY2|CAMERA|TONES|TONES2|RECORDS|VIDEO|PLAYLIST|MEMORYCARD file "
"[-name name] [-protected] [-readonly] [-system] [-hidden] [-newtime]\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1227
msgid ".. option:: nokiaaddplaylists"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1229
#, no-wrap
msgid ""
"    Goes through phone memory and generated playlist for all music files "
"found.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1231
#, no-wrap
msgid "    To manually manage playlists:\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1235
#, no-wrap
msgid "        gammu addfile a:\\\\predefplaylist filename.m3u\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1237
#, no-wrap
msgid "    Will add playlist filename.m3u\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1241
#, no-wrap
msgid "        gammu getfilesystem\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1243
#, no-wrap
msgid "    Will get list of all files (including names of files with playlists)\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1247
#, no-wrap
msgid "        gammu deletefiles a:\\\\predefplaylist\\\\filename.m3u\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1249
#, no-wrap
msgid "    Will delete playlist filename.m3u\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1251
#, no-wrap
msgid "    Format of m3u playlist is easy (standard mp3 playlist):\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1255
#, no-wrap
msgid ""
"    First line is ``#EXTM3U``, next lines contain  names of files "
"(``b:\\file1.mp3``,\n"
"    ``b:\\folder1\\file2.mp3``, etc.). File needs t have ``\\r\\n`` "
"terminated lines. So\n"
"    just run :program:`unix2dos` on the resulting file before uploading it "
"your your phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1258
msgid ".. option:: nokiacomposer file"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1261
#, no-wrap
msgid ""
"    Show, how to enter RTTL ringtone in composer existing in many Nokia "
"phones\n"
"    (and how should it look like).\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1263
msgid ".. option:: nokiadebug filename [[v11-22] [,v33-44]...]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1265
msgid ".. option:: nokiadisplayoutput"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1267
msgid ".. option:: nokiadisplaytest number"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1269
msgid ".. option:: nokiagetadc"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1271
msgid ".. option:: nokiagetoperatorname"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1275
#, no-wrap
msgid ""
"    6110.c phones have place for name for one GSM network (of course, with "
"flashing it's\n"
"    possible to change all names, but Gammu is not flasher ;-)). You can get "
"this\n"
"    name using this option.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1277
msgid ".. option:: nokiagetpbkfeatures memorytype"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1279
msgid ".. option:: nokiagetscreendump"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1281
msgid ".. option:: nokiagett9"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1284
#, no-wrap
msgid ""
"    This option should display T9 dictionary content from\n"
"    DCT4 phones.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1286
msgid ".. option:: nokiagetvoicerecord location"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1290
#, no-wrap
msgid ""
"    Get voice record from location and save to WAV file. File is\n"
"    coded using GSM 6.10 codec (available for example in win32). Name\n"
"    of file is like name of voice record in phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1294
#, no-wrap
msgid ""
"    Created WAV files require GSM 6.10 codec to be played. In Win XP it's "
"included\n"
"    by Microsoft. If you deleted it by accident in this operating system, "
"make such\n"
"    steps:\n"
msgstr ""

#. type: Bullet: '    1. '
#: docs/manual/gammu/index.rst:1306
msgid "Control Panel"
msgstr ""

#. type: Bullet: '    2. '
#: docs/manual/gammu/index.rst:1306
msgid "Add hardware"
msgstr ""

#. type: Bullet: '    3. '
#: docs/manual/gammu/index.rst:1306
msgid "click Next"
msgstr ""

#. type: Bullet: '    4. '
#: docs/manual/gammu/index.rst:1306
msgid "select \"Yes. I have already connected the hardware"
msgstr ""

#. type: Bullet: '    5. '
#: docs/manual/gammu/index.rst:1306
msgid "select \"Add a new hardware device"
msgstr ""

#. type: Bullet: '    6. '
#: docs/manual/gammu/index.rst:1306
msgid "select \"Install the hardware that I manually select from a list"
msgstr ""

#. type: Bullet: '    7. '
#: docs/manual/gammu/index.rst:1306
msgid "select \"Sound, video and game controllers"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1306
#, no-wrap
msgid ""
"    8. select \"Audio codecs\n"
"    9.  select \"windows\\\\system32\" directory and file \"mmdriver.inf\n"
"    10. if You will be asked for file msgsm32.acm, it should unpacked from "
"Windows CD\n"
"    11. now You can be asked if want to install unsigned driver (YES), about "
"select codec configuration (select what you want) and rebotting PC (make "
"it)\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1308
msgid ".. option:: nokiamakecamerashoot"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1310
msgid ".. option:: nokianetmonitor test"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1312
#, no-wrap
msgid "    Takes output or set netmonitor for Nokia DCT3 phones.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1314 docs/manual/gammu/index.rst:1330
#, no-wrap
msgid "    .. seealso::\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1318 docs/manual/gammu/index.rst:1334
#, no-wrap
msgid ""
"        For more info about this option, please visit \n"
"        `Marcin's page <http://www.mwiacek.com/>`_ and read netmonitor "
"manual\n"
"        there.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1324
#, no-wrap
msgid ""
"       test ``243`` enables all tests (after using command \n"
"       :command:`gammu nokianetmonitor 243` in some phones like 6210 or 9210 "
"have to reboot\n"
"       them to see netmonitor menu)\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1326
msgid ".. option:: nokianetmonitor36"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1328
#, no-wrap
msgid "    Reset counters from netmonitor test 36 in Nokia DCT3 phones.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1336
msgid ".. option:: nokiasecuritycode"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1338
#, no-wrap
msgid "    Get/reset to \"12345\" security code\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1340
msgid ".. option:: nokiaselftests"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1342
#, no-wrap
msgid "    Perform tests for Nokia DCT3 phones.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1348
#, no-wrap
msgid ""
"       EEPROM test can show an error when your phone has an EEPROM in "
"flash\n"
"       (like 82xx/7110/62xx/33xx). The clock test will show an error when "
"the\n"
"       phone doesn?t have an internal battery for the clock (like 3xxx).\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1350
msgid ".. option:: nokiasetlights keypad|display|torch on|off"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1352
msgid ".. option:: nokiasetoperatorname [networkcode name]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1354
msgid ".. option:: nokiasetphonemenus"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1356
#, no-wrap
msgid "    Enable all (?) possible menus for DCT3 Nokia phones:\n"
msgstr ""

#. type: Bullet: '    1. '
#: docs/manual/gammu/index.rst:1363 docs/manual/gammu/index.rst:1370
msgid "ALS (Alternative Line Service) option menu"
msgstr ""

#. type: Bullet: '    2. '
#: docs/manual/gammu/index.rst:1363
msgid "vibra menu for 3210"
msgstr ""

#. type: Bullet: '    3. '
#: docs/manual/gammu/index.rst:1363
msgid "3315 features in 3310 5.45 and higher"
msgstr ""

#. type: Bullet: '    4. '
#: docs/manual/gammu/index.rst:1363
msgid "two additional games (React and Logic) for 3210 5.31 and higher"
msgstr ""

#. type: Bullet: '    5. '
#: docs/manual/gammu/index.rst:1363
msgid "WellMate menu for 6150"
msgstr ""

#. type: Bullet: '    6. '
#: docs/manual/gammu/index.rst:1363
msgid "NetMonitor"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1365
#, no-wrap
msgid "    and for DCT4:\n"
msgstr ""

#. type: Bullet: '    2. '
#: docs/manual/gammu/index.rst:1370
msgid "Bluetooth, WAP bookmarks and settings menu, ... (6310i)"
msgstr ""

#. type: Bullet: '    3. '
#: docs/manual/gammu/index.rst:1370
msgid "GPRS Always Online"
msgstr ""

#. type: Bullet: '    4. '
#: docs/manual/gammu/index.rst:1370
msgid "and others..."
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1372
msgid ".. option:: nokiasetvibralevel level"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1374
#, no-wrap
msgid "    Set vibra power to \"level\" (given in percent)\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1376
msgid ".. option:: nokiatuneradio"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1378
msgid ".. option:: nokiavibratest"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1381
#, no-wrap
msgid ""
"Siemens specific commands\n"
"-------------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1384
msgid ".. option:: siemensnetmonact netmon_type"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1387
#, no-wrap
msgid ""
"    Enables network monitor in Siemens phone. Currently known values for "
"type\n"
"    are 1 for full and 2 for simple mode.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1389
msgid ".. option:: siemensnetmonitor test"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1391
msgid ".. option:: siemenssatnetmon"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1393
#, no-wrap
msgid ""
"Network commands\n"
"----------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1396
msgid ".. option:: getgprspoint start [stop]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1398
msgid ".. option:: listnetworks [country]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1400
#, no-wrap
msgid "    Show names/codes of GSM networks known for Gammu\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1402
msgid ".. option:: networkinfo"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1404
#, no-wrap
msgid "    Show information about network status from the phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1406
msgid ".. option:: setautonetworklogin"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1408
#, no-wrap
msgid ""
"WAP settings and bookmarks commands\n"
"-----------------------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1411
msgid ".. option:: deletewapbookmark start [stop]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1413
#, no-wrap
msgid "    Delete WAP bookmarks from phone. \n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1417
msgid ".. option:: getchatsettings start [stop]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1419
msgid ".. option:: getsyncmlsettings start [stop]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1421
msgid ".. option:: getwapbookmark start [stop]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1423
#, no-wrap
msgid "    Get WAP bookmarks from phone. \n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1427
msgid ".. option:: getwapsettings start [stop]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1429
#, no-wrap
msgid "    Get WAP settings from phone. \n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1433
#, no-wrap
msgid ""
"MMS and MMS settings commands\n"
"-----------------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1436
msgid ".. option:: getallmms [-save]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1438
msgid ".. option:: geteachmms [-save]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1440
msgid ".. option:: getmmsfolders"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1442
msgid ".. option:: getmmssettings start [stop]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1444
msgid ".. option:: readmmsfile file [-save]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1447
#, no-wrap
msgid ""
"FM radio commands\n"
"-----------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1450
msgid ".. option:: getfmstation start [stop]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1452
#, no-wrap
msgid "    Show info about FM stations in phone\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1454
#, no-wrap
msgid ""
"Phone information commands\n"
"--------------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1457
msgid ".. option:: battery"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1459
#, no-wrap
msgid "    Displays information about battery and power source.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1461
msgid ".. option:: getdisplaystatus"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1463
msgid ".. option:: getlocation"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1467
#, no-wrap
msgid ""
"    Gets network information from phone (same as networkinfo)\n"
"    and prints location (latitude and longitude) based on information from "
"\n"
"    `OpenCellID <http://opencellid.org>`_.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1469
msgid ".. option:: getsecuritystatus"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1471
#, no-wrap
msgid "    Show, if phone wait for security code (like PIN, PUK, etc.) or not\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1473
msgid ".. option:: identify"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1475
#, no-wrap
msgid "    Show the most important phone data.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1477
msgid ".. option:: monitor [times]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1480
#, no-wrap
msgid ""
"    Get phone status and writes continuously to standard output. Press "
":kbd:`Ctrl+C`\n"
"    to break this state.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1483
#, no-wrap
msgid ""
"Phone settings commands\n"
"-----------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1486
msgid ".. option:: getcalendarsettings"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1489
#, no-wrap
msgid ""
"    Displays calendar settings like first day of\n"
"    week or automatic deleting of old entries.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1491
msgid ".. option:: getprofile start [stop]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1493
msgid ".. option:: resetphonesettings PHONE|DEV|UIF|ALL|FACTORY"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1495
#, no-wrap
msgid "    .. warning:: This will delete user data, be careful.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1497
#, no-wrap
msgid "    Reset phone settings.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1500
#, no-wrap
msgid ""
"    ``PHONE``\n"
"        Clear phone settings.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1503
#, no-wrap
msgid ""
"    ``DEV``\n"
"        Clear device settings.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1506
#, no-wrap
msgid ""
"    ``ALL``\n"
"        Clear user settings.\n"
msgstr ""

#. type: Bullet: '        * '
#: docs/manual/gammu/index.rst:1513
msgid "removes or set logos to default"
msgstr ""

#. type: Bullet: '        * '
#: docs/manual/gammu/index.rst:1513
msgid "set default phonebook and other menu settings"
msgstr ""

#. type: Bullet: '        * '
#: docs/manual/gammu/index.rst:1513
msgid "clear T9 words,"
msgstr ""

#. type: Bullet: '        * '
#: docs/manual/gammu/index.rst:1513
msgid "clear call register info"
msgstr ""

#. type: Bullet: '        * '
#: docs/manual/gammu/index.rst:1513
msgid "set default profiles settings"
msgstr ""

#. type: Bullet: '        * '
#: docs/manual/gammu/index.rst:1513
msgid "clear user ringtones"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1516
#, no-wrap
msgid ""
"    ``UIF``\n"
"        Clear user settings and disables hidden menus.\n"
msgstr ""

#. type: Bullet: '        * '
#: docs/manual/gammu/index.rst:1519
msgid "changes like after ``ALL``"
msgstr ""

#. type: Bullet: '        * '
#: docs/manual/gammu/index.rst:1519
msgid "disables netmon and PPS (all \"hidden\" menus)"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1522
#, no-wrap
msgid ""
"    ``FACTORY``\n"
"        Reset to factory defaults.\n"
msgstr ""

#. type: Bullet: '        * '
#: docs/manual/gammu/index.rst:1525
msgid "changes like after ``UIF``"
msgstr ""

#. type: Bullet: '        * '
#: docs/manual/gammu/index.rst:1525
msgid "clear date/time"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1528
#, no-wrap
msgid ""
"Dumps decoding commands\n"
"-----------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1531
msgid ""
".. note:: These commands are available only if Gammu was compiled with "
"debugging options."
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1533
msgid ".. option:: decodebinarydump file [phonemodel]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1536
#, no-wrap
msgid ""
"    Decodes a dump made by Gammu with \n"
"    :config:option:`LogFormat` set to ``binary``.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1538
msgid ".. option:: decodesniff MBUS2|IRDA file [phonemodel]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1540
#, no-wrap
msgid ""
"    Allows to decode sniffs. See :ref:`Discovering protocol` for more "
"details.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1542
#, no-wrap
msgid ""
"Other commands\n"
"--------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1545
msgid ""
".. option:: entersecuritycode PIN|PUK|PIN2|PUK2|PHONE|NETWORK code|- "
"[newpin|-]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1547
#, no-wrap
msgid ""
"    Allow to enter security code from PC. When code is ``-``, it is read "
"from stdin.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1549
#, no-wrap
msgid "    In case entering PUK, some phones require you to set new PIN as well.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1551
msgid ".. option:: presskeysequence mMnNpPuUdD+-123456789*0#gGrR<>[]hHcCjJfFoOmMdD@"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1553
#, no-wrap
msgid "    Press specified key sequence on phone keyboard\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1572
#, no-wrap
msgid ""
"    ``mM``\n"
"        Menu\n"
"    ``nN``\n"
"        Names key\n"
"    ``pP``\n"
"        Power\n"
"    ``uU``\n"
"        Up\n"
"    ``dD``\n"
"        Down\n"
"    ``+-``\n"
"        +-\n"
"    ``gG``\n"
"        Green\n"
"    ``rR``\n"
"        Red\n"
"    ``123456789*0#``\n"
"        numeric keyboard\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1574
msgid ".. option:: reset SOFT|HARD"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1576
#, no-wrap
msgid "    Make phone reset: \n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1581
#, no-wrap
msgid ""
"    ``SOFT``\n"
"        without asking for PIN\n"
"    ``HARD``\n"
"        with asking for PIN\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1584
#, no-wrap
msgid ""
"    .. note:: Some phones will ask for PIN even with ``SOFT`` option.\n"
"    .. warning:: Some phones will reset user data on ``HARD`` reset.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1586
#, no-wrap
msgid ""
"Batch mode commands\n"
"-------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1589
msgid ".. option:: batch [file]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1593
#, no-wrap
msgid ""
"    Starts Gammu in a batch mode. In this mode you can issue\n"
"    several commands each on one line. Lines starting with # are treated as "
"a\n"
"    comments.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1597
#, no-wrap
msgid ""
"    By default, commands are read from standard input, but you can "
"optionally\n"
"    specify a file from where they would be read (special case ``-`` means "
"standard\n"
"    input).\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1599
#, no-wrap
msgid ""
"Configuration commands\n"
"----------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1602
msgid ".. option:: searchphone [-debug]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1604
#, no-wrap
msgid "    Attempts to search for a connected phone. \n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1610
#, no-wrap
msgid ""
"       Please note that this can take a very long time, but in case you "
"have\n"
"       no clue how to configure phone connection, this is a convenient way "
"to\n"
"       find working setup for Gammu.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1612
#, no-wrap
msgid ""
"Gammu information commands\n"
"--------------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1615
msgid ".. option:: checkversion [STABLE]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1619
#, no-wrap
msgid ""
"    Checks whether there is newer Gammu version\n"
"    available online (if Gammu has been compiled with CURL). If you pass\n"
"    additional parameter ``STABLE``, only stable versions will be checked.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1621
msgid ".. option:: features"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1623
#, no-wrap
msgid "    Print information about compiled in features.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1625
msgid ".. option:: help [topic]"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1628
#, no-wrap
msgid ""
"    Print help. By default general help is printed, but you can\n"
"    also specify a help category to get more detailed help on some topic.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1630
msgid ".. option:: version"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1632
#, no-wrap
msgid "    Print version information and license.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1636
msgid "Return values +++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1639
msgid "gammu returns 0 on success. In case of failure non zero code is returned."
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1652
#, no-wrap
msgid ""
"1\n"
"    Out of memory or other critical error.\n"
"2\n"
"    Invalid command line parameters.\n"
"3\n"
"    Failed to open file specified on command line.\n"
"4\n"
"    Program was interrupted.\n"
"98\n"
"    Gammu library version mismatch.\n"
"99\n"
"    Functionality has been moved. For example to :ref:`gammu-smsd`.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1655
msgid "Errors codes greater than 100 map to the GSM_Error values increased by 100:"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1794
#, no-wrap
msgid ""
"101\n"
"    No error.\n"
"102\n"
"    Error opening device. Unknown, busy or no permissions.\n"
"103\n"
"    Error opening device, it is locked.\n"
"104\n"
"    Error opening device, it doesn't exist.\n"
"105\n"
"    Error opening device, it is already opened by other application.\n"
"106\n"
"    Error opening device, you don't have permissions.\n"
"107\n"
"    Error opening device. No required driver in operating system.\n"
"108\n"
"    Error opening device. Some hardware not connected/wrongly configured.\n"
"109\n"
"    Error setting device DTR or RTS.\n"
"110\n"
"    Error setting device speed. Maybe speed not supported.\n"
"111\n"
"    Error writing to the device.\n"
"112\n"
"    Error during reading from the device.\n"
"113\n"
"    Can't set parity on the device.\n"
"114\n"
"    No response in specified timeout. Probably phone not connected.\n"
"115\n"
"    Frame not requested right now. See <http://wammu.eu/support/bugs/> for "
"information how to report it.\n"
"116\n"
"    Unknown response from phone. See <http://wammu.eu/support/bugs/> for "
"information how to report it.\n"
"117\n"
"    Unknown frame. See <http://wammu.eu/support/bugs/> for information how "
"to report it.\n"
"118\n"
"    Unknown connection type string. Check config file.\n"
"119\n"
"    Unknown model type string. Check config file.\n"
"120\n"
"    Some functions not available for your system (disabled in config or not "
"implemented).\n"
"121\n"
"    Function not supported by phone.\n"
"122\n"
"    Entry is empty.\n"
"123\n"
"    Security error. Maybe no PIN?\n"
"124\n"
"    Invalid location. Maybe too high?\n"
"125\n"
"    Functionality not implemented. You are welcome to help authors with "
"it.\n"
"126\n"
"    Memory full.\n"
"127\n"
"    Unknown error.\n"
"128\n"
"    Can not open specified file.\n"
"129\n"
"    More memory required...\n"
"130\n"
"    Operation not allowed by phone.\n"
"131\n"
"    No SMSC number given. Provide it manually or use the one configured in "
"phone.\n"
"132\n"
"    You're inside phone menu (maybe editing?). Leave it and try again.\n"
"133\n"
"    Phone is not connected.\n"
"134\n"
"    Function is currently being implemented. If you want to help, please "
"contact authors.\n"
"135\n"
"    Phone is disabled and connected to charger.\n"
"136\n"
"    File format not supported by Gammu.\n"
"137\n"
"    Nobody is perfect, some bug appeared in protocol implementation. Please "
"contact authors.\n"
"138\n"
"    Transfer was canceled by phone, maybe you pressed cancel on phone.\n"
"139\n"
"    Phone module need to send another answer frame.\n"
"140\n"
"    Current connection type doesn't support called function.\n"
"141\n"
"    CRC error.\n"
"142\n"
"    Invalid date or time specified.\n"
"143\n"
"    Phone memory error, maybe it is read only.\n"
"144\n"
"    Invalid data given to phone.\n"
"145\n"
"    File with specified name already exists.\n"
"146\n"
"    File with specified name doesn't exist.\n"
"147\n"
"    You have to give folder name and not file name.\n"
"148\n"
"    You have to give file name and not folder name.\n"
"149\n"
"    Can not access SIM card.\n"
"150\n"
"    Wrong GNAPPLET version in phone. Use version from currently used "
"Gammu.\n"
"151\n"
"    Only part of folder has been listed.\n"
"152\n"
"    Folder must be empty.\n"
"153\n"
"    Data were converted.\n"
"154\n"
"    Gammu is not configured.\n"
"155\n"
"    Wrong folder used.\n"
"156\n"
"    Internal phone error.\n"
"157\n"
"    Error writing file to disk.\n"
"158\n"
"    No such section exists.\n"
"159\n"
"    Using default values.\n"
"160\n"
"    Corrupted data returned by phone.\n"
"161\n"
"    Bad feature string in configuration.\n"
"162\n"
"    Desired functionality has been disabled on compile time.\n"
"163\n"
"    Bluetooth configuration requires channel option.\n"
"164\n"
"    Service is not running.\n"
"165\n"
"    Service configuration is missing.\n"
"166\n"
"    Command rejected because device was busy. Wait and restart.\n"
"167\n"
"    Could not connect to the server.\n"
"168\n"
"    Could not resolve the host name.\n"
"169\n"
"    Failed to get SMSC number from phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1798
msgid "Examples ++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1800
#, no-wrap
msgid ""
"Configuration\n"
"-------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1804
msgid ""
"To check it out, you need to have configuration file for gammu, see "
":ref:`gammurc` for more details about it."
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1806
#, no-wrap
msgid ""
"Sending messages\n"
"----------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1809
msgid "Save text message up to standard 160 chars:"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1813
#, no-wrap
msgid "    echo \"All your base are belong to us\" | gammu savesms TEXT\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1819
#, no-wrap
msgid "    gammu savesms TEXT -text \"All your base are belong to us\"\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1821
msgid "Save long text message:"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1825
#, no-wrap
msgid "    echo \"All your base are belong to us\" | gammu savesms TEXT -len 400\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1831
#, no-wrap
msgid "    gammu savesms TEXT -len 400 -text \"All your base are belong to us\"\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1837
#, no-wrap
msgid "    gammu savesms EMS -text \"All your base are belong to us\"\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1839
msgid "Save some funky message with predefined sound and animation from 2 bitmaps:"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1843
#, no-wrap
msgid ""
"    gammu savesms EMS -text \"Greetings\" -defsound 1 -text \"from Gammu "
"-tone10 axelf.txt -animation 2 file1.bmp file2.bmp\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1845
msgid "Save protected message with ringtone:"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1849
#, no-wrap
msgid ""
"    gammu savesms EMS -protected 2 -variablebitmaplong ala.bmp -toneSElong "
"axelf.txt -toneSE ring.txt\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1851
#, no-wrap
msgid ""
"Uploading files to Nokia\n"
"------------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1854
msgid ""
"Add Alien to applications in your phone (you need to have files Alien.JAD "
"and Alien.JAR in current directory):"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1858
#, no-wrap
msgid "    gammu nokiaaddfile APPLICATION Alien\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1860
msgid "Add file.mid to ringtones folder:"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1864
#, no-wrap
msgid "    gammu nokiaaddfile TONES file.mid\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1866
#, no-wrap
msgid ""
"Setting operator logo\n"
"---------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1869
msgid "Set logo for network ``230 03`` (Vodafone CZ):"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1873
#, no-wrap
msgid "    gammu setbitmap OPERATOR ala.bmp \"230 03\"\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1875
msgid ".. _converting-formats:"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1877
#, no-wrap
msgid ""
"Converting file formats\n"
"-----------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1881
msgid ""
"The formats conversion can done using :option:`gammu savefile` or "
":option:`gammu convertbackup` commands."
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1883
msgid ""
"Convert single entry (at position 260) from :ref:`gammu-backup` to "
"vCalendar:"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1887
#, no-wrap
msgid "    gammu savefile CALENDAR output.vcs myCalendar.backup 260\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1889
msgid "Convert first phonebook entry from :ref:`gammu-backup` to vCard:"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1893
#, no-wrap
msgid "    gammu savefile VCARD21 output.vcf phone.backup ME 1\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1895
msgid "Convert all contacts from backup to vCard:"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1899
#, no-wrap
msgid "    gammu convertbackup phone.backup output.vcf\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1902
#, no-wrap
msgid ""
"Reporting bugs\n"
"--------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1907
msgid ""
"There are definitely many bugs, reporting to author is welcome. Please "
"include some useful information when sending bug reports (especially debug "
"logs, operating system, it's version and phone information are needed)."
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1909
msgid "To generate debug log, enable it in :ref:`gammurc`:"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1916
#, no-wrap
msgid ""
"    [gammu]\n"
"    YOUR CONNECTION SETTINGS\n"
"    logfile = /tmp/gammu.log\n"
"    logformat = textall\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1918
msgid "Alternatively you can specify logging on command line:"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1922
#, no-wrap
msgid "   gammu -d textall -f /tmp/gammu.log ...\n"
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1926
msgid ""
"With this settings, Gammu generates /tmp/gammu.log on each connection to "
"phone and stores dump of communication there. You can also find some hints "
"for improving support for your phone in this log."
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1928
msgid "See <http://wammu.eu/support/bugs/> for more information on reporting bugs."
msgstr ""

#. type: Plain text
#: docs/manual/gammu/index.rst:1929
msgid "Please report bugs to `Gammu bug tracker <http://bugs.cihar.com/>`_."
msgstr ""

#. type: Plain text
#: docs/manual/project/documentation.rst:2
#, no-wrap
msgid ""
"Project Documentation\n"
"=====================\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/documentation.rst:7
msgid ""
"The documentation for Gammu consists of two major parts - The Gammu Manual, "
"which you are currently reading and comments in the sources, which are "
"partly included in this manual as well."
msgstr ""

#. type: Plain text
#: docs/manual/project/documentation.rst:9
#, no-wrap
msgid ""
"The Gammu Manual\n"
"----------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/documentation.rst:17
msgid ""
"This manual is in written in rst format and built using `Sphinx "
"<http://sphinx.pocoo.org/>`_ with `breathe "
"<https://github.com/michaeljones/breathe>`_ extension. As Gammu uses latest "
"version of this extension, it is shipped within Gammu sources, but if you "
"use git, you need to check out it separately as git submodule (you should "
"update it as well any time you update Gammu git):"
msgstr ""

#. type: Plain text
#: docs/manual/project/documentation.rst:21
#, no-wrap
msgid "    git submodule update --init\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/documentation.rst:24
msgid ""
"To generate the documentation there are various ``manual-*`` targets for "
"make.  You can build HTML, PDF, PS, HTMLHELP and Latex versions of it:"
msgstr ""

#. type: Plain text
#: docs/manual/project/documentation.rst:29
#, no-wrap
msgid ""
"    # Generates HTML version of manual in docs/manual/html\n"
"    make manual-html \n"
msgstr ""

#. type: Plain text
#: docs/manual/project/documentation.rst:32
#, no-wrap
msgid ""
"    # Generates PS version of manual in docs/manual/latex/gammu.ps\n"
"    make manual-ps      \n"
msgstr ""

#. type: Plain text
#: docs/manual/project/documentation.rst:35
#, no-wrap
msgid ""
"    # Generates PDF version of manual in docs/manual/latex/gammu.pdf\n"
"    make manual-pdf      \n"
msgstr ""

#. type: Plain text
#: docs/manual/project/documentation.rst:38
#, no-wrap
msgid ""
"    # Generates HTML version of manual in docs/manual/htmlhelp\n"
"    make manual-htmlhelp \n"
msgstr ""

#. type: Plain text
#: docs/manual/project/documentation.rst:41
#, no-wrap
msgid ""
"    # Generates HTML version of manual in docs/manual/latex\n"
"    make manual-latex    \n"
msgstr ""

#. type: Plain text
#: docs/manual/project/documentation.rst:43
#, no-wrap
msgid ""
"Man pages\n"
"---------\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/documentation.rst:46
msgid "The man pages for all commands are generated using Sphinx as well:"
msgstr ""

#. type: Plain text
#: docs/manual/project/documentation.rst:51
#, no-wrap
msgid ""
"    # Generates HTML version of manual in docs/manual/man\n"
"    make manual-man\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/documentation.rst:54
msgid ""
"However man pages are stored in Git as well, so you should update generated "
"copy on each change:"
msgstr ""

#. type: Plain text
#: docs/manual/project/documentation.rst:59
#, no-wrap
msgid ""
"    # Updates generated man pages in Git\n"
"    make update-man\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/documentation.rst:61
#, no-wrap
msgid ""
"Code comments\n"
"-------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/documentation.rst:64
msgid ""
"The code comments in C code should be parseable by Doxygen, what is more or "
"less standard way to document C code."
msgstr ""

#. type: Plain text
#: docs/manual/project/versioning.rst:2
#, no-wrap
msgid ""
"Versioning\n"
"==========\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/versioning.rst:7
msgid ""
"There are two types of releases - testing and stable, both having version "
"x.y.z. Stable releases have usually z = 0 or some small number, while "
"testing ones have z >= 90. Testing releases usually provide latest features, "
"but everything does not have to be stabilized yet."
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:2
#, no-wrap
msgid ""
"Directory structure\n"
"===================\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:5
#, no-wrap
msgid ""
"libgammu directory\n"
"------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:9
msgid ""
"This directory contains sources of Gammu library. You can find all phone "
"communication and data encoding functionality here."
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:11
msgid "There are following subdirectories:"
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:30
#, no-wrap
msgid ""
"``device``\n"
"  drivers for devices such serial ports or irda\n"
"``device/serial``\n"
"  drivers for serial ports\n"
"``device/irda``\n"
"  drivers for infrared over sockets\n"
"``protocol``\n"
"  protocol drivers\n"
"``protocol/nokia``\n"
"  Nokia specific protocols\n"
"``phone``\n"
"  phone modules\n"
"``phone/nokia``\n"
"  modules for different Nokia phones\n"
"``misc``\n"
"  different services. They can be used for any project\n"
"``service``\n"
"  different gsm services for logos, ringtones, etc.\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:32
#, no-wrap
msgid ""
"gammu directory\n"
"---------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:36
msgid ""
"Sources of Gammu command line utility. It contains interface to libGammu and "
"some additional functionality as well."
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:38
#, no-wrap
msgid ""
"smsd directory\n"
"--------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:41
msgid "Sources of SMS Daemon as well as all it's service backends."
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:43
msgid "The ``services`` subdirectory contains source code for :ref:`smsd_services`."
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:45
#, no-wrap
msgid ""
"python directory\n"
"----------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:48
msgid "Sources of python-gammu module and some examples."
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:50
#, no-wrap
msgid ""
"helper directory\n"
"----------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:56
msgid ""
"These are some helper functions used either as replacement for functionality "
"missing on some platforms (eg. strptime) or used in more places (message "
"command line processing which is shared between SMSD and Gammu utility)."
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:58
#, no-wrap
msgid ""
"docs directory\n"
"--------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:62
msgid ""
"Documentation for both end users and developers as well as SQL scripts for "
"creating SMSD database."
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:73
#, no-wrap
msgid ""
"``config``\n"
"    configuration file samples\n"
"``examples``\n"
"    examples using libGammu\n"
"``manual``\n"
"    sources of The Gammu Manual which you are reading\n"
"``sql``\n"
"    SQL scripts to create table structures for :ref:`smsd`\n"
"``user``\n"
"    user documentation like man pages\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:75
#, no-wrap
msgid ""
"admin directory\n"
"---------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:78
msgid "Administrative scripts for updating locales, making release etc."
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:80
#, no-wrap
msgid ""
"cmake directory\n"
"---------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:83
msgid "CMake include files and templates for generated files."
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:85
#, no-wrap
msgid ""
"include directory\n"
"-----------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:88
msgid "Public headers for libGammu."
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:90
#, no-wrap
msgid ""
"locale directory\n"
"----------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:94
msgid ""
"Gettext po files for translating Gammu, libGammu and user documentation.  "
"See :doc:`localization` for more information."
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:96
#, no-wrap
msgid ""
"tests directory\n"
"---------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:100
msgid ""
"CTest based test suite for libGammu.  See :doc:`testing` for more "
"information."
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:102
#, no-wrap
msgid ""
"utils directory\n"
"---------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:105
msgid "Various utilities usable with Gammu."
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:107
#, no-wrap
msgid ""
"contrib directory\n"
"-----------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:112
msgid ""
"This directory contains various things which might be useful with Gammu.  "
"Please note that that code here might have different license terms than "
"Gammu itself."
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:115
msgid "bash-completion ***************"
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:117
msgid "Completion script for bash."
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:120
msgid "conversion **********"
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:122
msgid "Various scripts for converting data."
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:125
msgid "init ****"
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:127
msgid "Init scripts for Gammu SMSD."
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:130
msgid "linux-driver ************"
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:133
msgid ""
"DKU-2 driver for Linux. This will be removed in future, please use fbususb "
"connection type instead."
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:136
msgid "media *****"
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:138
msgid "Sample media files which can be used with Gammu."
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:141
msgid "other *****"
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:144
msgid ""
"Some scripts not related directly to Gammu, but more to modems and GSM "
"phones in general."
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:147
msgid "packaging *********"
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:151
msgid ""
"Support for creating packages on various distributions. Please note that "
"support for RPM (gammu.spec) and Slackware (description-pak) is included in "
"top level directory."
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:154
msgid "perl ****"
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:156
msgid "Various perl scripts which interface to Gammu or SMSD."
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:159
msgid "php ***"
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:161
msgid "Various PHP frontends to SMSD or Gammu directly."
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:164
msgid "smscgi ******"
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:167
msgid ""
"Simple cgi application gor handling SMS messages (a bit lighter version of "
"SMSD)."
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:170
msgid "sql ***"
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:172
msgid "Various SQL snippets and triggers useful with SMSD."
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:175
msgid "testing *******"
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:177
msgid "Helper scripts for automatic testing or git bisect."
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:180
msgid "sqlreply ********"
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:182
msgid "System for automatic replying to SMS messages."
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:185
msgid "symbian *******"
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:188
msgid ""
"GNapplet sources and binaries. This comes from Gnokii project, but Gammu "
"includes slightly modified version."
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:191
msgid "win32 *****"
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:193
msgid "Unsupported applications built on top of libGammu.dll on Windows."
msgstr ""

#. type: Plain text
#: docs/manual/project/directories.rst:194
msgid "# vim: et ts=4 sw=4 sts=4 tw=72 spell spelllang=en_us"
msgstr ""

#. type: Plain text
#: docs/manual/project/about.rst:2
#, no-wrap
msgid ""
"About Gammu\n"
"===========\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/about.rst:6
msgid ""
"Gammu is library and command line utility for mobile phones. It is released "
"under GNU GPL version 2."
msgstr ""

#. type: Plain text
#: docs/manual/project/about.rst:10
msgid ""
"It has been initiated by Marcin Wiacek and other people. Originally the code "
"was based on `Gnokii`_ and later `MyGnokii`_ projects. Gammu was former (up "
"to version 0.58) called MyGnokii2."
msgstr ""

#. type: Plain text
#: docs/manual/project/about.rst:13
msgid ""
"Currently the project is lead by `Michal Čihař`_ with help of many "
"contributors."
msgstr ""

#. type: Plain text
#: docs/manual/project/about.rst:17
msgid ""
".. _Gnokii: http://www.gnokii.org .. _MyGnokii: http://www.mwiacek.com "
".. _Michal Čihař: mailto:michal@cihar.com"
msgstr ""

#. type: Plain text
#: docs/manual/project/about.rst:21
#, no-wrap
msgid "    motivation\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/index.rst:2
msgid ".. _project:"
msgstr ""

#. type: Plain text
#: docs/manual/project/index.rst:4
#, no-wrap
msgid ""
"Gammu project\n"
"=============\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/index.rst:17
#, no-wrap
msgid ""
"    about\n"
"    install\n"
"    contributing\n"
"    localization\n"
"    testing\n"
"    coding-style\n"
"    versioning\n"
"    documentation\n"
"    directories\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/contributing.rst:2
#, no-wrap
msgid ""
"Contributing\n"
"============\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/contributing.rst:10
msgid ""
"We welcome contribution in any area, if you don't have developer skills, you "
"can always contribute to :doc:`localization`. In case you are interested in "
"fixing some code, please read :doc:`../internal/index` to understand "
"structure of Gammu code. We also maintain list of `wanted skills "
"<http://wammu.eu/contribute/wanted/>`_ where you can find in which areas we "
"currently mostly lack manpower."
msgstr ""

#. type: Plain text
#: docs/manual/project/contributing.rst:12
#, no-wrap
msgid ""
"Sending patches\n"
"---------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/contributing.rst:17
msgid ""
"As we use `Git <http://git-scm.com/>`_ for development, the preferred way to "
"get patches is in form which can be directly applied to Git. So start with "
"cloning our Git repository::"
msgstr ""

#. type: Plain text
#: docs/manual/project/contributing.rst:19
#, no-wrap
msgid "    git clone git://gitorious.org/gammu/mainline.git gammu\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/contributing.rst:24
msgid ""
"Once you have done that, do some fixes and commit them (see `Git tutorial "
"<http://www.kernel.org/pub/software/scm/git/docs/gittutorial.html>`_ for "
"information how to work with Git). Once you're satisfied with your results, "
"you can send the patches (all changes you've made so far) to us::"
msgstr ""

#. type: Plain text
#: docs/manual/project/contributing.rst:26
#, no-wrap
msgid "    git send-email --to=gammu-users@lists.sourceforge.net origin\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/contributing.rst:31
msgid ""
"Please note that `mailing list "
"<https://lists.sourceforge.net/lists/listinfo/gammu-users>`_ requires you to "
"subscribe before posting. This is anyway good idea in case you want to "
"contribute. However if you don't want to do that, just send the mails "
"directly to one of authors::"
msgstr ""

#. type: Plain text
#: docs/manual/project/contributing.rst:33
#, no-wrap
msgid "    git send-email --to=michal@cihar.com origin\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/contributing.rst:36
#, no-wrap
msgid ""
"Creating patches\n"
"----------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/contributing.rst:41
msgid ""
"If for whatever reason you don't want to use Git, you can also manually "
"create patches using :program:`diff`. Also we can handle if you send us just "
"the file you have changed with reference where did you take it."
msgstr ""

#. type: Plain text
#: docs/manual/project/contributing.rst:43
msgid "To manually create patch you can use following steps:"
msgstr ""

#. type: Bullet: '1. '
#: docs/manual/project/contributing.rst:50
msgid "Copy source with Gammu, you start from, into ``gammu`` directory."
msgstr ""

#. type: Bullet: '2. '
#: docs/manual/project/contributing.rst:50
msgid "Copy source with Gammu, you want to modify, into ``work`` directory."
msgstr ""

#. type: Bullet: '3. '
#: docs/manual/project/contributing.rst:50
msgid "Make your changes in ``work`` directory."
msgstr ""

#. type: Bullet: '4. '
#: docs/manual/project/contributing.rst:50
msgid ""
"Go into parent directory, where ``gammu`` and ``work`` directories are "
"placed."
msgstr ""

#. type: Bullet: '5. '
#: docs/manual/project/contributing.rst:50
msgid "Call ``diff -rup -X .git gammu work > patchfile``."
msgstr ""

#. type: Bullet: '6. '
#: docs/manual/project/contributing.rst:50
msgid "Send ``patchfile`` to us (you can use bug tracker or mailing list)."
msgstr ""

#. type: Plain text
#: docs/manual/project/testing.rst:2
#, no-wrap
msgid ""
"Testing\n"
"=======\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/testing.rst:7 docs/manual/testing/testsuite.rst:7
msgid ""
"Gammu comes with quite big test suite. It covers some basic low level "
"functions, handling replies from the phone and also does testing of command "
"line utilities and SMSD."
msgstr ""

#. type: Plain text
#: docs/manual/project/testing.rst:8
msgid "See :ref:`testing` for more details."
msgstr ""

#. type: Plain text
#: docs/manual/project/coding-style.rst:2
#, no-wrap
msgid ""
"Coding Style\n"
"============\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/coding-style.rst:7
msgid ""
"Please follow coding style when touching Gammu code. We know that there are "
"still some parts which really do not follow it and fixes to that are also "
"welcome."
msgstr ""

#. type: Plain text
#: docs/manual/project/coding-style.rst:10
msgid ""
"The coding style is quite similar to what Linux kernel uses, the only major "
"differences are requested block braces and switch indentation."
msgstr ""

#. type: Bullet: '1. '
#: docs/manual/project/coding-style.rst:16
msgid "Use indentation, tab is tab and is 8 chars wide."
msgstr ""

#. type: Bullet: '2. '
#: docs/manual/project/coding-style.rst:16
msgid ""
"Try to avoid long lines (though there is currently no hard limit on line "
"length)."
msgstr ""

#. type: Plain text
#: docs/manual/project/coding-style.rst:16
#, no-wrap
msgid ""
"3. Braces are placed according to K&R:\n"
"    .. code-block:: c\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/coding-style.rst:21
#, no-wrap
msgid ""
"        int function(int x)\n"
"        {\n"
"            body of function\n"
"        }\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/coding-style.rst:25
#, no-wrap
msgid ""
"        do {\n"
"            body of do-loop\n"
"        } while (condition);\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/coding-style.rst:35
#, no-wrap
msgid ""
"        if (x == y) {\n"
"            ..\n"
"        } else if (x > y) {\n"
"            ...\n"
"        } else {\n"
"            ...\n"
"        }\n"
"4. All blocks should have braces, even if the statements are one liners:\n"
"    .. code-block:: c\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/coding-style.rst:41
#, no-wrap
msgid ""
"        if (a == 2) {\n"
"            foo();\n"
"        }\n"
"5. There should be no spaces after function names, but there should be space "
"after do/while/if/... statements:\n"
"    .. code-block:: c\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/coding-style.rst:47
#, no-wrap
msgid ""
"        while (TRUE) {\n"
"            do_something(work, FALSE);\n"
"        }\n"
"6. Each operand should have spaces around, no spaces after opening "
"parenthesis or before closing parenthesis:\n"
"    .. code-block:: c\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/coding-style.rst:52
#, no-wrap
msgid ""
"        if ((i + 1) == ((j + 2) / 5)) {\n"
"            return *bar;\n"
"        }\n"
"7. Generally all enums start from 1, not from 0. 0 is used for not set "
"value.\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/coding-style.rst:54
msgid ""
"You can use :program:`admin/Gindent` to adjust coding style of your file to "
"match our coding style."
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:3
msgid "Compiling Gammu +++++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:5
#, no-wrap
msgid ""
"Compliling python-gammu\n"
"=======================\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:10
msgid ""
"Currently python-gammu is distributed together with Gammu, so all you need "
"to get it is to build Gammu with Python support (it should be automatically "
"detected if you have development environment installed for Python)."
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:15
msgid ""
"Gammu uses CMake_ to generate build environment (for example Makefiles for "
"UNIX, Visual Studio projects, Eclipse projects, etc.) which you can later "
"use for building. You can use ``-DBUILD_PYTHON=/path/to/python`` to define "
"path to another Python interpreter to use than default one available in the "
"system."
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:18
msgid ""
"Alternatively you can use standard distutils, for which :file:`setup.py` is "
"placed in `python` subdirectory."
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:21
#, no-wrap
msgid ""
"Binaries - Linux\n"
"================\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:27
msgid ""
"Many distributions come with prebuilt Gammu binaries, if you can use them, "
"it is definitely the easiest thing. There are also binary packages of latest "
"release built for many distributions available on Gammu home page "
"<http://wammu.eu/gammu/>."
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:30
#, no-wrap
msgid ""
"Binaries - Windows\n"
"==================\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:35
msgid ""
"You can download Windows binaries from <http://wammu.eu/gammu/>. For Windows "
"95, 98 and NT 4.0 you will also need ShFolder DLL, which can be downloaded "
"from Microsoft:"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:37
msgid "http://www.microsoft.com/downloads/details.aspx?displaylang=en&FamilyID=6AE02498-07E9-48F1-A5D6-DBFA18D37E0F"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:40
#, no-wrap
msgid ""
"From Sources - Requirements\n"
"===========================\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:44
msgid ""
"Gammu does not require anything at all to build, but you might miss some "
"features. Optional dependencies include:"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:48
#, no-wrap
msgid ""
"Bluez-libs \n"
"    - http://www.bluez.org/\n"
"    - Bluetooth support on Linux.\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:52
#, no-wrap
msgid ""
"libusb-1.0\n"
"    - http://libusb.sourceforge.net/\n"
"    - fbususb connection support\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:56
#, no-wrap
msgid ""
"libCURL\n"
"    - http://curl.haxx.se/libcurl/\n"
"    - New versions notification and phonedb access.\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:60
#, no-wrap
msgid ""
"libiconv\n"
"    - http://www.gnu.org/software/libiconv/\n"
"    - Support for more charsets in AT engine.\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:64
#, no-wrap
msgid ""
"Gettext\n"
"    - http://www.gnu.org/software/gettext/\n"
"    - Localization of strings.\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:68
#, no-wrap
msgid ""
"MySQL\n"
"    - http://mysql.com/\n"
"    - MySQL support in SMSD.\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:72
#, no-wrap
msgid ""
"PostgreSQL\n"
"    - http://www.postgresql.org/\n"
"    - PostgreSQL support in SMSD.\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:77
#, no-wrap
msgid ""
"libdbi\n"
"    - http://libdbi.sourceforge.net/\n"
"    - required at least version 0.8.2\n"
"    - DBI support in SMSD.\n"
msgstr ""

#. type: Bullet: '        - '
#: docs/manual/project/install.rst:79
msgid "For testing, please install libdbd-sqlite3"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:83
#, no-wrap
msgid ""
"Python\n"
"    - http://www.python.org/\n"
"    - Gammu has a Python bindings\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:87
#, no-wrap
msgid ""
"SQLite + libdbi-drivers with SQLite\n"
"    - http://www.sqlite.org/\n"
"    - needed for testing of SMSD using libdbi driver\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:90
#, no-wrap
msgid ""
"From Sources - Linux\n"
"====================\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:93
msgid "You need CMake from <http://www.cmake.org> for configuring Gammu."
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:100
msgid ""
"For compatibility reasons, configure like wrapper is provided, if you don't "
"need much specific tuning, you can use general \"./configure; make; sudo "
"make install\" set of commands. The configure wrapper will create directory "
"build-configure and build all binaries there (nothing is changed in source "
"tree), for example gammu binary is in build-configure/gammu directory."
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:104
msgid ""
"If you need/want to tweak build a bit more than configure wrapper provides, "
"you have to use CMake directly. For now, only out of source build is "
"supported, so you have to create separate directory for build:"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:109
#, no-wrap
msgid ""
"    mkdir build\n"
"    cd build\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:111
msgid "Then just configure project:"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:115
#, no-wrap
msgid "    cmake ..\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:117
msgid "Build it:"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:121
#, no-wrap
msgid "    make\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:123
msgid "Test that everything is okay:"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:127
#, no-wrap
msgid "    make test\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:129
msgid "And finally install it:"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:133
#, no-wrap
msgid "    sudo make install\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:136
msgid ""
"You can configure build parameters either by command line (see parameters "
"bellow), or using TUI - ccmake."
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:138
msgid "Useful cmake parameters:"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/project/install.rst:147
msgid "-DBUILD_SHARED_LIBS=ON enables shared library"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/project/install.rst:147
msgid "-DCMAKE_BUILD_TYPE=\"Debug\" enables debug build"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/project/install.rst:147
msgid "-DCMAKE_INSTALL_PREFIX=\"/usr\" change installation prefix"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/project/install.rst:147
msgid ""
"-DENABLE_PROTECTION=OFF disables various compile time protections against "
"buffer overflows and similar attacks"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/project/install.rst:147
msgid ""
"-DBUILD_PYTHON=/usr/bin/python2.6 changes Python used for build Python "
"module"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/project/install.rst:147
msgid "-DWITH_PYTHON=OFF disables build of python-gammu"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:149
msgid "You can also disable support for whole set of phones, e.g.:"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/project/install.rst:153
msgid "-DWITH_NOKIA_SUPPORT=OFF disables Nokia phones support"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/project/install.rst:153
msgid "-DWITH_BLUETOOTH=OFF disables Bluetooth support"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/project/install.rst:153
msgid "-DWITH_IRDA=OFF disables IrDA support"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:155
#, no-wrap
msgid ""
"Limiting set of installed data\n"
"==============================\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:159
msgid ""
"By setting following flags you can control which additional parts will be "
"installed:"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/project/install.rst:167
msgid "INSTALL_GNAPPLET - Install Gnapplet binaries"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/project/install.rst:167
msgid "INSTALL_MEDIA - Install sample media files"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/project/install.rst:167
msgid "INSTALL_PHP_EXAMPLES - Install PHP example scripts"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/project/install.rst:167
msgid "INSTALL_BASH_COMPLETION - Install bash completion script for Gammu"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/project/install.rst:167
msgid "INSTALL_LSB_INIT - Install LSB compatible init script for Gammu"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/project/install.rst:167
msgid "INSTALL_DOC - Install documentation"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/project/install.rst:167
msgid "INSTALL_LOC - Install locales data"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:169
msgid "For example:"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:173
#, no-wrap
msgid "    cmake -DINSTALL_DOC=OFF\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:176
#, no-wrap
msgid ""
"From Sources - Windows\n"
"======================\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:185
msgid ""
"You need CMake from <http://www.cmake.org> for configuring Gammu. CMake is "
"able to generate projects for various tools including Microsoft Visual "
"Studio, Borland toolchains, Cygwin or Mingw32. Just click on CMakeLists.txt "
"in project sources and configure CMake to be able to find optional libraries "
"(see cross compilation section for more information about getting "
"those). The result should be project for your compiler where you should be "
"able to work with it as with any other project."
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:187
#, no-wrap
msgid ""
"Compiling using MS Visual C++\n"
"-----------------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:190
msgid "You will probably need additional SDKs:"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/project/install.rst:206
msgid ""
"Microsoft Windows Platform SDK (required especially for Bluetooth).  It's "
"given for free. Below are links to different releases (if you have problems "
"with latest one, use older). They work for various Windows versions, even "
"though Microsoft named them Windows Server 2003 Platform SDK."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/project/install.rst:206
msgid ""
"For free Visual C++ Express 2005 you need to set compiler to work with "
"Platform SDK (see description)."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/project/install.rst:206
msgid ""
"MySQL include/library files from MySQL install package (for MySQL support in "
"SMSD)."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/project/install.rst:206
msgid ""
"PostgreSQL include/library files from PostgreSQL install package (for "
"PostgreSQL support in SMSD)."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/project/install.rst:206
msgid ""
"For gettext (internationalization) support, you will need gettext packages "
"from GnuWin32 project."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/project/install.rst:206
msgid ""
"As build is now based on CMake, you will need to get it from "
"http://cmake.org/."
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:208
msgid "After downloading and installing them into your system:"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/project/install.rst:212
msgid ""
"Now you should be able to execute cmake by clicking on CMakeLists.txt file "
"in Gammu sources, this should pop up dialog with configuration options."
msgstr ""

#. type: Bullet: '  * '
#: docs/manual/project/install.rst:218
msgid ""
"You can also start CMakeSetup from start menu and select source directory "
"(just point to it to Gammu sources)."
msgstr ""

#. type: Bullet: '  * '
#: docs/manual/project/install.rst:218
msgid ""
"Select directory where binaries will be stored, I suggest this is different "
"than source one, eg. append subdirectory build."
msgstr ""

#. type: Bullet: '  * '
#: docs/manual/project/install.rst:218
msgid "Select compiler you want to use in Build for select."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/project/install.rst:225
msgid ""
"In list bellow, you can tweak paths to some optional libraries and project "
"configuration."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/project/install.rst:225
msgid ""
"Then just press Configure button, which will do the hard job. After this, "
"just click OK button to generate Visual Studio project."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/project/install.rst:225
msgid ""
"Project files for Visual Studio should be now generated in directory you "
"selected, just open it in Visual Studio and compile :-)."
msgstr ""

#. type: Bullet: '  * '
#: docs/manual/project/install.rst:230
msgid ""
"Project file should be named Gammu.dsw or Gammu.sln depending on what MSVC "
"version you choose."
msgstr ""

#. type: Bullet: '  * '
#: docs/manual/project/install.rst:230
msgid ""
"You should see ALL_BUILD target, which builds everything needed, simmilar to "
"make all on Linux."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/project/install.rst:235
msgid ""
"I know this guide is incomplete, I don't have environment to test, you're "
"welcome to improve it!. Some more information can be found in howtos for "
"other projects using CMake, eg. Blender, SIM, KDE, VTK, ISGTK. ITK, "
"[wxWidgets http://www.wxwidgets.org/wiki/index.php/CMake]."
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:237
#, no-wrap
msgid ""
"Compiling using Borland C++\n"
"---------------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:245
msgid ""
"Borland toolchain - you can download compiler at "
"<http://www.codegear.com/downloads/free/cppbuilder>. You need to add "
"c:/Borland/BCC55/Bin to system path (or manually set it when running CMake) "
"and add -Lc:/Borland/BCC55/Lib -Ic:/Borland/BCC55/Include "
"-Lc:/Borland/BCC55/Lib/PSDK to CMAKE_C_FLAGS in CMake (otherwise compilation "
"fails)."
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:247
#, no-wrap
msgid ""
"Compiling using Cygwin\n"
"----------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:250
msgid "This should work pretty much same as on Linux."
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:252
#, no-wrap
msgid ""
"From Sources - Mac OS X\n"
"=======================\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:258
msgid ""
"Gammu should be compilable on Mac OS X, you need to have installed Developer "
"Tols (version 2.4.1 was tested) and CMake (there is a Mac OS X \"Darwin\" "
"DMG download). For database support in SMSD, install wanted database, "
"eg. MySQL."
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:261
msgid ""
"The rest of the compilation should be pretty same as on Linux, see Linux "
"section for more details about compile time options."
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:265
msgid ""
"If you get some errors while linking with iconv, it is caused by two "
"incompatible iconv libraries available on the system. You can override the "
"library name:"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:269
#, no-wrap
msgid "   cmake -D ICONV_LIBRARIES=\"/opt/local/lib/libiconv.dylib\" ..\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:271
msgid "Or completely disable iconv support:"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:275
#, no-wrap
msgid "   cmake -DWITH_Iconv=OFF ..\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:278
#, no-wrap
msgid ""
"Cross compilation for Windows on Linux\n"
"======================================\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:283
msgid ""
"Only cross compilation using CMake has been tested. You need to install "
"MinGW cross tool chain and run time. On Debian you can do it by apt-get "
"install mingw32. Build is then quite simple:"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:290
#, no-wrap
msgid ""
"    mkdir build-win32\n"
"    cd build-win32\n"
"    cmake .. -DCMAKE_TOOLCHAIN_FILE=../cmake/Toolchain-mingw32.cmake\n"
"    make\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:293
msgid ""
"If your MinGW cross compiler binaries are not found automatically, you can "
"specify their different names in cmake/Toolchain-mingw32.cmake."
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:295
msgid "To build just bare static library without any dependencies, use:"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:305
#, no-wrap
msgid ""
"    cmake .. -DCMAKE_TOOLCHAIN_FILE=../cmake/Toolchain-mingw32.cmake \\\n"
"        -DBUILD_SHARED_LIBS=OFF \\\n"
"        -DWITH_MySQL=OFF \\\n"
"        -DWITH_Postgres=OFF \\\n"
"        -DWITH_GettextLibs=OFF \\\n"
"        -DWITH_Iconv=OFF \\\n"
"        -DWITH_CURL=OFF\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:312
msgid ""
"To be compatible with current Python on Windows, we need to build against "
"matching Microsoft C Runtime library. For Python 2.4 and 2.5 MSVCR71 was "
"used, for Python 2.6 the right one is MSVCR90. To achieve building against "
"different MSVCRT, you need to adjust compiler specifications, example is "
"shown in cmake/mingw.spec, which is used by CMakeLists.txt. You might need "
"to tune it for your environment."
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:314
#, no-wrap
msgid ""
"Third party libraries\n"
"---------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:319
msgid ""
"The easies way to link with third party libraries is to add path to their "
"installation to cmake/Toolchain-mingw32.cmake or to list these paths in "
"CMAKE_FIND_ROOT_PATH when invoking cmake."
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:322
#, no-wrap
msgid ""
"MySQL\n"
"-----\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:326
msgid ""
"You can download MySQL binaries from <http://dev.mysql.com/>, but then need "
"some tweaks:"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:333
#, no-wrap
msgid ""
"    cd mysql/lib/opt\n"
"    reimp.exe -d libmysql.lib\n"
"    i586-mingw32msvc-dlltool --kill-at --input-def libmysql.def \\\n"
"        --dllname libmysql.dll --output-lib libmysql.a\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:336
msgid ""
"reimp.exe is part of mingw-utils and can be run through wine, I didn't try "
"to compile native binary from it."
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:339
#, no-wrap
msgid ""
"PostgreSQL\n"
"----------\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:343
msgid ""
"You can download PostgreSQL binaries from <http://www.postgresql.org/>, but "
"then you need to add wldap32.dll library to bin."
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:346
#, no-wrap
msgid ""
"Gettext\n"
"-------\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:351
msgid ""
"For Gettext (internationalization support), you need gettext-0.14.4-bin.zip, "
"gettext-0.14.4-dep.zip, gettext-0.14.4-lib.zip from "
"<http://gnuwin32.sourceforge.net/>. Unpack these to same directory."
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:354
#, no-wrap
msgid ""
"CURL\n"
"----\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:358
msgid ""
"For CURL support, you need curl-7.19.0-devel-mingw32.zip from "
"<http://curl.haxx.se/>."
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:360
msgid ".. _CMake: http://www.cmake.org/"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:362
#, no-wrap
msgid ""
"Debugging build failures\n"
"========================\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:369
msgid ""
"If there is some build failure (eg. some dependencies are not correctly "
"detected), please attach :file:`CMakeCache.txt`, "
":file:`CMakeFiles/CMakeError.log` and :file:`CMakeFiles/CMakeOutput.log` "
"files to the report. It will help diagnose what was detected on the system "
"and possibly fix these errors."
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:371
#, no-wrap
msgid ""
"Debugging crashes\n"
"=================\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/install.rst:375
msgid ""
"To debug program crashes, you might want to build Gammu with "
"``-DENABLE_PROTECTION=OFF``, otherwise debugging tools are somehow confused "
"with protections GCC makes and produce bogus back traces."
msgstr ""

#. type: Plain text
#: docs/manual/project/motivation.rst:2
#, no-wrap
msgid ""
"Motivation to fork Gnokii\n"
"=========================\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/motivation.rst:9
#, no-wrap
msgid ""
"    Please note that this is original list of differences written by \n"
"    Marcin when forking Gnokii, so it represents state of the code in \n"
"    that time.\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/motivation.rst:34
#, no-wrap
msgid ""
"1. Unicode used almost everywhere. In MyGnokii and Gnokii with modern\n"
"    phones (they return everything in Unicode) things are converted from\n"
"    Unicode and again to Unicode in other places. No more unnecessary\n"
"    conversions.\n"
"2. Almost everything is structural. In Gnokii some things are declared\n"
"    in files, not in \"main\" phone structure. It can make some problems, "
"when\n"
"    will try to support two phones on two serial ports in one application.\n"
"3. in Gammu you can make support for some things without adding source\n"
"    to \"main\" phone modules. Very good idea for things, which are "
"available\n"
"    only for few models and for all other will be UNIMPLEMENTED. It "
"includes\n"
"    also some obsolete functions - why should we compile RLP source, when\n"
"    all new better phones have modems built in ?\n"
"4. Gnokii/MyGnokii has to have some compatibility with previously written "
"source. In Gammu some solutions are reimplemented and done easier.\n"
"5. no more reimplementing C libraries in source - see snprintf in gnokii.\n"
"6. more OS supported.\n"
"7. better sharing source. Less source = smaller application easier to "
"debug.\n"
"8. better user friendly interface\n"
"9. no more 2 years rewriting source...\n"
"10. it's easier to see, what frames are implemented, what not (in phone "
"modules they're put line after line).\n"
"11. better compatiblity with ANSI C = no warnings in MS VC 6\n"
"12. all locations for user start from 0 (in Gnokii some from 0, some from "
"1)\n"
"13. some things like SMS can be accessed few ways\n"
"14. when possible, there are used \"constant\" locations. I will explain\n"
"    on the example:\n"
msgstr ""

#. type: Bullet: '    1. '
#: docs/manual/project/motivation.rst:43
msgid ""
"save two calendar notes in any Nokia 61xx phone. Call them \"reminder\" and "
"\"call\" notes. Reminder will be returned by phone of 1'st location, Call on "
"2'nd."
msgstr ""

#. type: Bullet: '    2. '
#: docs/manual/project/motivation.rst:43
msgid ""
"Now Reminder will be deleted (for example, from phone keypad).  Call will be "
"moved from 2'nd to 1'st."
msgstr ""

#. type: Bullet: '    3. '
#: docs/manual/project/motivation.rst:43
msgid ""
"When will read calendar notes again, have to read all notes again because of "
"changed locations (let's say, we won't read Call note again. It will have "
"location 2 in PC. Now you will write new note into phone (for keypad) and it "
"will save in under location 2. When will try to save Call not with location "
"2, it will overwrite new saved note !)."
msgstr ""

#. type: Plain text
#: docs/manual/project/motivation.rst:46
#, no-wrap
msgid ""
"    This is not good. When for example delete one entry from phonebook,\n"
"    other locations \"stays\" on their places. These are \"constant\" "
"locations.\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/motivation.rst:49
#, no-wrap
msgid ""
"    With \"constans\" locations, when delete one location from PC, don't "
"have\n"
"    to read full memory from phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/motivation.rst:51
msgid "etc. etc."
msgstr ""

#. type: Plain text
#: docs/manual/project/motivation.rst:52
msgid "Of course, some of these things can be in the future in gnokii too..."
msgstr ""

#. type: Plain text
#: docs/manual/project/localization.rst:2
#, no-wrap
msgid ""
"Localization\n"
"============\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/localization.rst:7
msgid ""
"Localization uses Gettext. You can set locales you want to use by specifying "
"LANG or LC_* environment variables (on Linux you usually don't care about "
"this, on Windows just export e.g. ``LANG=cs_CZ``)."
msgstr ""

#. type: Plain text
#: docs/manual/project/localization.rst:12
msgid ""
"If you want to improve existing translation, please visit `translation "
"server`_. For adding new one, you need to contact `Michal Čihař`_ and then "
"you will be able to edit it on former mentioned URL."
msgstr ""

#. type: Plain text
#: docs/manual/project/localization.rst:15
msgid ""
"You can also go ahead with traditional way of creating/updating po files in "
"locale/ folder and then sending updated ones to bug tracker."
msgstr ""

#. type: Plain text
#: docs/manual/project/localization.rst:17
#, no-wrap
msgid ""
"Translation areas\n"
"-----------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/localization.rst:20
msgid "There are several po files to translate:"
msgstr ""

#. type: Plain text
#: docs/manual/project/localization.rst:30
#, no-wrap
msgid ""
"``libgammu.po``\n"
"    Messages used in the Gammu library (see :ref:`libgammu`).\n"
"``gammu.po``\n"
"    Message used by command line utilities (mostly :ref:`gammu`).\n"
"``docs.po``\n"
"    Basic documentation shipped withing package (eg. :file:`README` and\n"
"    :file:`INSTALL` files).\n"
"``manual.po``\n"
"    The Gammu Manual translation (this manual).\n"
msgstr ""

#. type: Plain text
#: docs/manual/project/localization.rst:33
msgid ""
".. _translation server: http://l10n.cihar.com/projects/gammu/ .. _Michal "
"Čihař: mailto:michal@cihar.com"
msgstr ""

#. type: Plain text
#: docs/manual/glossary.rst:2
#, no-wrap
msgid ""
"Glossary\n"
"========\n"
msgstr ""

#. type: Plain text
#: docs/manual/glossary.rst:6
#, no-wrap
msgid ""
".. glossary::\n"
"   :sorted:\n"
msgstr ""

#. type: Plain text
#: docs/manual/glossary.rst:8
#, no-wrap
msgid ""
"   TPMR\n"
"        Message reference as generated by GSM network.\n"
msgstr ""

#. type: Plain text
#: docs/manual/index.rst:2
#, no-wrap
msgid ""
"The Gammu Manual\n"
"================\n"
msgstr ""

#. type: Plain text
#: docs/manual/index.rst:7
msgid ""
"Gammu is a project providing abstraction layer for cell phones access. It "
"covers wide range of phones, mostly focusing on AT compatible phones and "
"Nokia phones."
msgstr ""

#. type: Plain text
#: docs/manual/index.rst:11
msgid ""
"This manual describes all parts of Gammu, starting with information about "
":ref:`project`, going through API documentation for both :ref:`python` and "
":ref:`libgammu` and covering :ref:`smsd` as well."
msgstr ""

#. type: Plain text
#: docs/manual/index.rst:14
#, no-wrap
msgid ""
"Continue reading\n"
"----------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/index.rst:18
#, no-wrap
msgid ""
".. hlist::\n"
"    :columns: 2\n"
msgstr ""

#. type: Bullet: '    * '
#: docs/manual/index.rst:27
msgid ":ref:`project` -- learn about Gammu project"
msgstr ""

#. type: Bullet: '    * '
#: docs/manual/index.rst:27
msgid ":ref:`smsd` -- comprehensive SMSD documentation"
msgstr ""

#. type: Bullet: '    * '
#: docs/manual/index.rst:27
msgid ":ref:`gammu` -- the Gammu utility"
msgstr ""

#. type: Bullet: '    * '
#: docs/manual/index.rst:27
msgid ":ref:`gammurc` -- the Gammu configuration file"
msgstr ""

#. type: Bullet: '    * '
#: docs/manual/index.rst:27
msgid ":ref:`python` -- use Gammu functionality from Python"
msgstr ""

#. type: Bullet: '    * '
#: docs/manual/index.rst:27
msgid ":ref:`libgammu` -- use Gammu functionality from C"
msgstr ""

#. type: Bullet: '    * '
#: docs/manual/index.rst:27
msgid ":ref:`internal` -- learn about Gammu internals"
msgstr ""

#. type: Bullet: '    * '
#: docs/manual/index.rst:27
msgid ":ref:`protocols` -- learn about phone protocols"
msgstr ""

#. type: Plain text
#: docs/manual/index.rst:29
#, no-wrap
msgid ""
"Full content\n"
"------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/index.rst:33 docs/manual/python/index.rst:36 docs/manual/python/index.rst:44 docs/manual/c/index.rst:23 docs/manual/c/api.rst:12
#, no-wrap
msgid ""
".. toctree::\n"
"    :maxdepth: 3\n"
msgstr ""

#. type: Plain text
#: docs/manual/index.rst:34
#, no-wrap
msgid "    contents\n"
msgstr ""

#. type: Plain text
#: docs/manual/testing/index.rst:2
msgid ".. _testing:"
msgstr ""

#. type: Plain text
#: docs/manual/testing/index.rst:4
#, no-wrap
msgid ""
"Testing Gammu\n"
"=============\n"
msgstr ""

#. type: Plain text
#: docs/manual/testing/index.rst:11
#, no-wrap
msgid ""
"    testsuite\n"
"    dummy-driver\n"
msgstr ""

#. type: Plain text
#: docs/manual/testing/dummy-driver.rst:2
msgid ".. _dummy-driver:"
msgstr ""

#. type: Plain text
#: docs/manual/testing/dummy-driver.rst:4
#, no-wrap
msgid ""
"Dummy Driver\n"
"============\n"
msgstr ""

#. type: Plain text
#: docs/manual/testing/dummy-driver.rst:7
msgid ".. versionadded:: 1.22.93"
msgstr ""

#. type: Plain text
#: docs/manual/testing/dummy-driver.rst:12
msgid ""
"The ``dummy`` driver in Gammu emulates all operations on filesystem. It is "
"used by :doc:`testsuite`, but it is also very helpful for application "
"developers, because they can test the functionality without using real phone "
"and avoiding risk of corrupting data in the phone."
msgstr ""

#. type: Plain text
#: docs/manual/testing/dummy-driver.rst:14
#, no-wrap
msgid ""
"Filesystem structure\n"
"--------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/testing/dummy-driver.rst:19
msgid ""
"The dummy driver emulates all phone functionality on filesystem. The "
":config:option:`Device` configuration directive sets top level directory, "
"where all data are stored."
msgstr ""

#. type: Plain text
#: docs/manual/testing/dummy-driver.rst:23
msgid ""
"This directory contains file :file:`operations.log`, where are logged "
"operations which do not modify any data in the dummy phone (eg. sending "
"message)."
msgstr ""

#. type: Plain text
#: docs/manual/testing/dummy-driver.rst:26
msgid "Messages ++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/testing/dummy-driver.rst:29
msgid ""
"Messages are stored in :file:`sms/<FOLDER>` directories (``<FOLDER>`` is in "
"range 1-5) in Gammu native smsbackup format."
msgstr ""

#. type: Plain text
#: docs/manual/testing/dummy-driver.rst:32
msgid "Phonebook +++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/testing/dummy-driver.rst:35
msgid ""
"Phonebook (and calls registers) are stored in :file:`pbk/<MEMORY>` "
"(``<MEMORY>`` is type of memory like ``ME`` or ``SM``) directories in vCard "
"format."
msgstr ""

#. type: Plain text
#: docs/manual/testing/dummy-driver.rst:40
msgid "Notes are stored in :file:`note` directory in vNote format."
msgstr ""

#. type: Plain text
#: docs/manual/testing/dummy-driver.rst:43
msgid "Calendar ++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/testing/dummy-driver.rst:45
msgid ""
"Calendar entries are stored in :file:`calendar` directory in vCalendar "
"format."
msgstr ""

#. type: Plain text
#: docs/manual/testing/dummy-driver.rst:48
msgid "Todo ++++"
msgstr ""

#. type: Plain text
#: docs/manual/testing/dummy-driver.rst:50
msgid "Todo entries are stored in :file:`todo` directory in vCalendar format."
msgstr ""

#. type: Plain text
#: docs/manual/testing/dummy-driver.rst:53
msgid "Filesystem ++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/testing/dummy-driver.rst:56
msgid ""
"Filesystem is stored in :file:`fs` directory. You can create another "
"subdirectories there."
msgstr ""

#. type: Plain text
#: docs/manual/testing/dummy-driver.rst:58
#, no-wrap
msgid ""
"Other features\n"
"--------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/testing/dummy-driver.rst:61
msgid ""
"By specifying :config:option:`Features` you can configure some specific "
"behavior:"
msgstr ""

#. type: Plain text
#: docs/manual/testing/dummy-driver.rst:67
#, no-wrap
msgid ""
"``DISABLE_GETNEXT``\n"
"    Makes the dummy driver fail all GetNext* calls as not supported (with\n"
"    exception of GetNextSMS* and GetNextFile*).\n"
"``DISABLE_GETNEXTSMS``\n"
"    Makes the dummy driver fail all GetNextSMS* calls as not supported.\n"
msgstr ""

#. type: Plain text
#: docs/manual/testing/dummy-driver.rst:72
msgid ""
"To use dummy driver, you need something like following in "
":file:`~/.gammurc`:"
msgstr ""

#. type: Plain text
#: docs/manual/testing/dummy-driver.rst:79
#, no-wrap
msgid ""
"    [gammu]\n"
"    model = dummy\n"
"    connection = none\n"
"    device = /path/to/directory/\n"
msgstr ""

#. type: Plain text
#: docs/manual/testing/dummy-driver.rst:81
msgid ""
"For disabling GetNext* functions within dummy driver, you need something "
"like following in :file:`~/.gammurc`:"
msgstr ""

#. type: Plain text
#: docs/manual/testing/dummy-driver.rst:88
#, no-wrap
msgid ""
"    [gammu]\n"
"    model = dummy\n"
"    connection = none\n"
"    features = DISABLE_GETNEXT\n"
"    device = /path/to/directory/\n"
msgstr ""

#. type: Plain text
#: docs/manual/testing/testsuite.rst:2
#, no-wrap
msgid ""
"Gammu Testsuite\n"
"===============\n"
msgstr ""

#. type: Plain text
#: docs/manual/testing/testsuite.rst:10
#, no-wrap
msgid ""
"Running the tests\n"
"-----------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/testing/testsuite.rst:17
msgid ""
"You can run the test suite this using ``make test``. CMake build system uses "
"for testing CTest, which also includes option to connect to dashboard and "
"submit test results there, so that they can be reviewed and fixed by "
"others. To participate in this testing, you need just to run ``make "
"Experimental`` which also does submission to the dashboard."
msgstr ""

#. type: Plain text
#: docs/manual/testing/testsuite.rst:19
msgid "There are some more options for testing:"
msgstr ""

#. type: Plain text
#: docs/manual/testing/testsuite.rst:21
msgid "``make test``"
msgstr ""

#. type: Plain text
#: docs/manual/testing/testsuite.rst:23
#, no-wrap
msgid "    Runs testsuite with no uploading of results.\n"
msgstr ""

#. type: Plain text
#: docs/manual/testing/testsuite.rst:25
msgid "``make Experimental``"
msgstr ""

#. type: Plain text
#: docs/manual/testing/testsuite.rst:27
#, no-wrap
msgid "    Runs testsuite and uploads results to the dashboard.\n"
msgstr ""

#. type: Plain text
#: docs/manual/testing/testsuite.rst:29
msgid "``make ExperimentalMemCheck``"
msgstr ""

#. type: Plain text
#: docs/manual/testing/testsuite.rst:33
#, no-wrap
msgid ""
"    This checks memory accesses using valgrind during tests and submits\n"
"    report. You need to do this after ``make Experimental`` and you can\n"
"    submit results using ``make ExperimentalSubmit``.\n"
msgstr ""

#. type: Plain text
#: docs/manual/testing/testsuite.rst:35
msgid "Coverage reports"
msgstr ""

#. type: Plain text
#: docs/manual/testing/testsuite.rst:38
#, no-wrap
msgid ""
"    To get test coverage reports, you need to configure project using \n"
"    ``cmake -DCOVERAGE=ON``\n"
msgstr ""

#. type: Plain text
#: docs/manual/testing/testsuite.rst:40
msgid "Nightly testing"
msgstr ""

#. type: Plain text
#: docs/manual/testing/testsuite.rst:47
#, no-wrap
msgid ""
"    Currently several machines do compile and test Gammu every night. If\n"
"    you want to tak part of this, just ensure that your machine executes\n"
"    test suite every night (preferably after 3:00 CET). You can select\n"
"    either ``make Nightly`` to do regullar testing or \n"
"    ``make NightlyMemoryCheck`` to test with valgrind. Also you can enable\n"
"    coverage tests as described above.\n"
msgstr ""

#. type: Plain text
#: docs/manual/testing/testsuite.rst:49
#, no-wrap
msgid ""
"Collecting results\n"
"------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/testing/testsuite.rst:53
msgid ""
"The tests are ran daily on several platforms and you can find the results on "
"`dashboard <https://cdash.cihar.com/index.php?project=Gammu>`_."
msgstr ""

#. type: Plain text
#: docs/manual/testing/testsuite.rst:57
msgid ""
"You are welcome to join this effort, all you need is to setup job to pull "
"current Gammu sources and execute the test suite every day (the preferred "
"time it 3:00 CET)::"
msgstr ""

#. type: Plain text
#: docs/manual/testing/testsuite.rst:60
#, no-wrap
msgid ""
"    git pull\n"
"    make -C build-configure Nightly\n"
msgstr ""

#. type: Plain text
#: docs/manual/testing/testsuite.rst:62
msgid "or also with checking for memory leaks::"
msgstr ""

#. type: Plain text
#: docs/manual/testing/testsuite.rst:65
#, no-wrap
msgid ""
"    git pull\n"
"    make -C build-configure NightlyMemCheck\n"
msgstr ""

#. type: Plain text
#: docs/manual/testing/testsuite.rst:67
#, no-wrap
msgid ""
"Testing of SMSD\n"
"---------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/testing/testsuite.rst:73
msgid ""
"SMSD tests are performed using :ref:`dummy-driver` and uses file backend and "
"sqlite database by default. For this you nee Gammu compiled with libdbi, "
"have installed sqlite driver for libdbi and have :program:`sqlite3` binary "
"available on the syste,."
msgstr ""

#. type: Plain text
#: docs/manual/testing/testsuite.rst:75
msgid "Testing of additional database backends must be enabled separately:"
msgstr ""

#. type: Plain text
#: docs/manual/testing/testsuite.rst:78
#, no-wrap
msgid ""
"``MYSQL_TESTING``:\n"
"    you need to have setup MySQL server with database where SMSD can play.\n"
msgstr ""

#. type: Plain text
#: docs/manual/testing/testsuite.rst:81
#, no-wrap
msgid ""
"``PSQL_TESTING``\n"
"    you need to have setup PostgreSQL server with database where SMSD can "
"play.\n"
msgstr ""

#. type: Plain text
#: docs/manual/testing/testsuite.rst:83
#, no-wrap
msgid ""
"Testing of command line utility\n"
"-------------------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/testing/testsuite.rst:88
msgid ""
"Gammu command line tests are performed using :ref:`dummy-driver` where "
"required. It covers most of command line interface, but some parts need to "
"be explicitly enabled:"
msgstr ""

#. type: Plain text
#: docs/manual/testing/testsuite.rst:91
#, no-wrap
msgid ""
"``ONLINE_TESTING``:\n"
"    enable testing of features which require internet access\n"
msgstr ""

#. type: Plain text
#: docs/manual/testing/testsuite.rst:93
#, no-wrap
msgid ""
"Testing of Python interface\n"
"---------------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/testing/testsuite.rst:98
msgid ""
"Python module tests are performed using :ref:`dummy-driver` where "
"required. It does also cover testing of SMSD interface, which is done using "
"libdbi(sqlite)  driver."
msgstr ""

#. type: Plain text
#: docs/manual/testing/testsuite.rst:100
#, no-wrap
msgid ""
"Testing of reply functions\n"
"--------------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/testing/testsuite.rst:104
msgid ""
"The :file:`tests` directory contains various tests which do inject data into "
"reply functions and check their response."
msgstr ""

#. type: Plain text
#: docs/manual/testing/testsuite.rst:106
#, no-wrap
msgid ""
"Testing of data parsing\n"
"-----------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/testing/testsuite.rst:110
msgid ""
"The :file:`tests` directory contains various tests which just try to parse "
"various file formats supported by libGammu."
msgstr ""

#. type: Plain text
#: docs/manual/testing/testsuite.rst:112
#, no-wrap
msgid ""
"Configuration of the test suite\n"
"-------------------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/testing/testsuite.rst:115
msgid "You can pass various parameters to configure the test suite:"
msgstr ""

#. type: Plain text
#: docs/manual/testing/testsuite.rst:118
msgid "Programs used for testing +++++++++++++++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/testing/testsuite.rst:131
#, no-wrap
msgid ""
"``SH_BIN``\n"
"    Path to the :program:`sh` program\n"
"``BASH_BIN``\n"
"    Path to the :program:`bash` program\n"
"``SQLITE_BIN``\n"
"    Path to the :program:`sqlite3` program\n"
"``SED_BIN``\n"
"    Path to the :program:`sed` program\n"
"``MYSQL_BIN``\n"
"    Path to the :program:`mysql` program\n"
"``PSQL_BIN``\n"
"    Path to the :program:`psql` program\n"
msgstr ""

#. type: Plain text
#: docs/manual/testing/testsuite.rst:134
msgid "Limiting testsuite ++++++++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/testing/testsuite.rst:141
#, no-wrap
msgid ""
"``ONLINE_TESTING``\n"
"    Enable testing of parts which use remote servers, requires connection to "
"interned\n"
"``PSQL_TESTING``\n"
"    Enable testing of PostgreSQL SMSD backend, requires configured "
"PostgreSQL database\n"
"``MYSQL_TESTING``\n"
"    Enable testing of MySQL SMSD backend, requires configured MySQL "
"database\n"
msgstr ""

#. type: Plain text
#: docs/manual/testing/testsuite.rst:144
msgid "Database backends configuration +++++++++++++++++++++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/testing/testsuite.rst:160
#, no-wrap
msgid ""
"``PSQL_HOST``\n"
"    Host to use for PostgreSQL tests (default: ``127.0.0.1``)\n"
"``PSQL_DATABASE``\n"
"    Database to use for PostgreSQL tests (default: ``smsd``)\n"
"``PSQL_USER``\n"
"    User to use for PostgreSQL tests (default: ``smsd``)\n"
"``PSQL_PASSWORD``\n"
"    Password to use for PostgreSQL tests (default: ``smsd``)\n"
"``MYSQL_HOST``\n"
"    Host to use for MySQL tests (default: ``127.0.0.1``)\n"
"``MYSQL_DATABASE``\n"
"    Database to use for MySQL tests (default: ``smsd``)\n"
"``MYSQL_USER``\n"
"    User to use for MySQL tests (default: ``smsd``)\n"
"``MYSQL_PASSWORD``\n"
"    Password to use for MySQL tests (default: ``smsd``)\n"
msgstr ""

#. type: Plain text
#: docs/manual/contents.rst:2
msgid ".. _contents:"
msgstr ""

#. type: Plain text
#: docs/manual/contents.rst:4
#, no-wrap
msgid ""
"Gammu Documentation Contents\n"
"----------------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/contents.rst:21
#, no-wrap
msgid ""
"    project/index\n"
"    python/index\n"
"    c/index\n"
"    internal/index\n"
"    formats/index\n"
"    config/index\n"
"    gammu/index\n"
"    smsd/index\n"
"    utils/index\n"
"    testing/index\n"
"    protocol/index\n"
"    glossary\n"
msgstr ""

#. type: Plain text
#: docs/manual/contents.rst:23
#, no-wrap
msgid ""
"Indices and tables\n"
"------------------\n"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/contents.rst:27
msgid ":ref:`genindex`"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/contents.rst:27
msgid ":ref:`modindex`"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/contents.rst:27
msgid ":ref:`search`"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:2
#, no-wrap
msgid ""
"Objects\n"
"=======\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:7
msgid ""
"For various (mostly historical) reasons, all objects you get from Gammu are "
"not real objects but rather a dictionaries. This has quite a big impact of "
"usability and will most likely change in the future."
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:10
msgid ""
"All the objects basically map to C structures, so you might also refer to "
":ref:`libgammu` chapter."
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:12
msgid ".. _sms_obj:"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:14
#, no-wrap
msgid ""
"SMS Object\n"
"----------\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:19
msgid ""
"Object describing single SMS message in a way GSM network handles is (140 "
"bytes of data). You can construct it from :ref:`sms_info_obj` using "
":meth:`gammu.EncodeSMS`."
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:21
msgid "Message dictionary can consist of following fields:"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:23
msgid ".. attribute:: SMSC"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:25
#, no-wrap
msgid "   SMSC information, see :ref:`smsc_obj`.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:27 docs/manual/python/objects.rst:214 docs/manual/python/objects.rst:391
msgid ".. attribute:: Number"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:29
#, no-wrap
msgid "   Recipient number, needs to be set for sending.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:31 docs/manual/python/objects.rst:218 docs/manual/python/objects.rst:734
msgid ".. attribute:: Name"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:34
#, no-wrap
msgid ""
"   Name of the message, does not make any effect on sending, some phones "
"might\n"
"   store it.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:36
msgid ".. attribute:: UDH"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:38
#, no-wrap
msgid "   User defined headers for SMS, see :ref:`udh_obj`.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:40 docs/manual/python/objects.rst:190
msgid ".. attribute:: Text"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:42
#, no-wrap
msgid "   Message text\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:44 docs/manual/python/objects.rst:738
msgid ".. attribute:: Folder"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:46
#, no-wrap
msgid "   Folder where the message is stored\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:48 docs/manual/python/objects.rst:210 docs/manual/python/objects.rst:442 docs/manual/python/objects.rst:537 docs/manual/python/objects.rst:632
msgid ".. attribute:: Location"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:50
#, no-wrap
msgid "   Location where the message is stored\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:52
msgid ".. attribute:: InboxFolder"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:54
#, no-wrap
msgid "   Indication whether folder is an inbox\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:56
msgid ".. attribute:: DeliveryStatus"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:58
#, no-wrap
msgid "   Message delivery status, used only for received messages\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:60
msgid ".. attribute:: ReplyViaSameSMSC"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:62
#, no-wrap
msgid "   Flag indicating whether reply using same SMSC is requested\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:64 docs/manual/python/objects.rst:272
msgid ".. attribute:: Class"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:66 docs/manual/python/objects.rst:274
#, no-wrap
msgid "   Message class\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:68
msgid ".. attribute:: MessageReference"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:70
#, no-wrap
msgid "   Message reference number, used mostly to identify delivery reports\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:72 docs/manual/python/objects.rst:264
msgid ".. attribute:: ReplaceMessage"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:74 docs/manual/python/objects.rst:266
#, no-wrap
msgid "   Id of message which this message is supposed to replace\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:76
msgid ".. attribute:: RejectDuplicates"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:78
#, no-wrap
msgid "   Whether to reject duplicates\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:80
msgid ".. attribute:: Memory"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:82 docs/manual/python/objects.rst:638
#, no-wrap
msgid "   Memory where the message is stored\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:84 docs/manual/python/objects.rst:165 docs/manual/python/objects.rst:446 docs/manual/python/objects.rst:507 docs/manual/python/objects.rst:541 docs/manual/python/objects.rst:595 docs/manual/python/objects.rst:660 docs/manual/python/objects.rst:746
msgid ".. attribute:: Type"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:86
#, no-wrap
msgid "   Message type, one of:\n"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:91
msgid "``Submit`` - message to be send"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:91
msgid "``Deliver`` - delivered message"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:91
msgid ""
"``Status_Report`` - when creating new message this will create submit "
"message with request for delivery report"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:93
msgid ".. attribute:: Coding"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:95
#, no-wrap
msgid "   Message encoding, one of:\n"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:103
msgid ""
"``Unicode_No_Compression`` - unicode message which can contain any chars, "
"but can be only 70 chars long"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:103
msgid "``Unicode_Compression`` - not supported by Gammu and most phones"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:103
msgid ""
"``Default_No_Compression`` - message with GSM alphabet only, up to 160 chars "
"long"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:103
msgid "``Default_Compression`` - not supported by Gammu and most phones"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:103
msgid "``8bit`` - for binary messages"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:105
msgid ".. attribute:: DateTime"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:107
#, no-wrap
msgid "   Timestamp when the message was received or sent.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:109
#, no-wrap
msgid "   Please note that most phones do no record timestamp of sent messages.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:111
msgid ".. attribute:: SMSCDateTime"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:113
#, no-wrap
msgid "   Timestamp when the message was at SMSC.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:115
msgid ".. attribute:: State"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:117
#, no-wrap
msgid "   Message state, one of:\n"
msgstr ""

#. type: Bullet: '    * '
#: docs/manual/python/objects.rst:122 docs/manual/formats/smsbackup.rst:91
msgid "``Sent``"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:122
msgid "``UnSent``"
msgstr ""

#. type: Bullet: '    * '
#: docs/manual/python/objects.rst:122 docs/manual/formats/smsbackup.rst:91
msgid "``Read``"
msgstr ""

#. type: Bullet: '    * '
#: docs/manual/python/objects.rst:122 docs/manual/formats/smsbackup.rst:91
msgid "``UnRead``"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:124
msgid "Examples::"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:131
#, no-wrap
msgid ""
"    # Simple message to send, using SMSC from phone\n"
"    SMS_1 = {\n"
"        'Number': '123465',\n"
"        'SMSC': {'Location': 1},\n"
"        'Text': 'Hello world!',\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:139
#, no-wrap
msgid ""
"    # Class 0 (on display) message using custom SMSC number\n"
"    SMS_2 = {\n"
"        'Number': '123465',\n"
"        'SMSC': {'Number': '+420987654321'},\n"
"        'Text': 'Hello world!',\n"
"        'Class': 0,\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:142
msgid ".. _udh_obj:"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:144
#, no-wrap
msgid ""
"UDH Object\n"
"----------\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:147
msgid "UDH dictionary can consist of following fields:"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:149
msgid ".. attribute:: ID8bit"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:151
#, no-wrap
msgid "   8-bit ID of the message, not required\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:153
msgid ".. attribute:: ID16bit"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:155
#, no-wrap
msgid "   16-bit ID of the message, not required\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:157
msgid ".. attribute:: PartNumber"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:159
#, no-wrap
msgid "   Number of current part\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:161
msgid ".. attribute:: AllParts"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:163
#, no-wrap
msgid "   Count of all message parts\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:167
#, no-wrap
msgid "   UDH type, one of predefined strings:\n"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:188
msgid "``NoUDH``"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:188
msgid "``ConcatenatedMessages``"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:188
msgid "``ConcatenatedMessages16bit``"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:188 docs/manual/python/objects.rst:349
msgid "``DisableVoice``"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:188 docs/manual/python/objects.rst:349
msgid "``DisableFax``"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:188 docs/manual/python/objects.rst:349
msgid "``DisableEmail``"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:188 docs/manual/python/objects.rst:349
msgid "``EnableVoice``"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:188 docs/manual/python/objects.rst:349
msgid "``EnableFax``"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:188 docs/manual/python/objects.rst:349
msgid "``EnableEmail``"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:188 docs/manual/python/objects.rst:349
msgid "``VoidSMS``"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:188
msgid "``NokiaRingtone``"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:188
msgid "``NokiaRingtoneLong``"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:188
msgid "``NokiaOperatorLogoLong``"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:188
msgid "``NokiaCallerLogo``"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:188
msgid "``NokiaWAP``"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:188
msgid "``NokiaWAPLong``"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:188
msgid "``NokiaCalendarLong``"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:188
msgid "``NokiaProfileLong``"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:188
msgid "``NokiaPhonebookLong``"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:188
msgid "``UserUDH``"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:192
#, no-wrap
msgid "   UDH content\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:201
#, no-wrap
msgid ""
"    UDH = {\n"
"        'ID8bit': 0xcd,\n"
"        'PartNumber': 1,\n"
"        'AllParts': 2,\n"
"        'Type': 'ConcatenatedMessages',\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:203
msgid ".. _smsc_obj:"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:205
#, no-wrap
msgid ""
"SMSC Object\n"
"-----------\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:208
msgid "SMSC dictionary can consist of following fields:"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:212
#, no-wrap
msgid "   Location where the SMSC is stored\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:216
#, no-wrap
msgid "   SMSC number\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:220
#, no-wrap
msgid "   Name of the SMSC configuration\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:222
msgid ".. attribute:: DefaultNumber"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:224
#, no-wrap
msgid "   Default recipient number, ignored on most phones\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:226
msgid ".. attribute:: Format"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:228
#, no-wrap
msgid "   Default message format, one of:\n"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:233 docs/manual/python/objects.rst:349
msgid "``Text``"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:233
msgid "``Pager``"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:233
msgid "``Fax``"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:233
msgid "``Email``"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:235
msgid ".. attribute:: Validity"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:237
#, no-wrap
msgid "   Default message validity as a string\n"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:242
msgid "``NA`` - validity not available"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:242
msgid "``Max`` - maximal validity allowed by network"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:242
msgid ""
"``nM``, ``nH``, ``nD``, ``nW`` - period defined in minutes, hours, days or "
"weeks, eg. ``3W``"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:251
#, no-wrap
msgid ""
"    SMSC = {\n"
"        'Location': 1,\n"
"        'Number': '+420987654321',\n"
"        'Format': 'Text',\n"
"        'Validity': 'Max',\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:253
msgid ".. _sms_info_obj:"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:255
#, no-wrap
msgid ""
"SMS Info Object\n"
"---------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:258
msgid "Message info dictionary can consist of following fields:"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:260
msgid ".. attribute:: Unicode"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:262
#, no-wrap
msgid "   Whether to use Unicode for the message.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:268
msgid ".. attribute:: Unknown"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:270
#, no-wrap
msgid ""
"   Boolean flag indicating there was some part which Gammu could not "
"decode.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:276 docs/manual/python/objects.rst:488 docs/manual/python/objects.rst:574 docs/manual/python/objects.rst:640
msgid ".. attribute:: Entries"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:278
#, no-wrap
msgid "   Actual message data, see :ref:`sms_info_part_obj`.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:290
#, no-wrap
msgid ""
"    SMSINFO = {\n"
"        'Class': 1,\n"
"        'Entries': [\n"
"            {'ID': 'Text', 'Buffer': 'This is a '},\n"
"            {'ID': 'Text', 'Buffer': 'message', 'Italic': True},\n"
"            {'ID': 'Text', 'Buffer': ' from '},\n"
"            {'ID': 'Text', 'Buffer': 'Gammu', 'Bold': True},\n"
"            ],\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:292
msgid ".. _sms_info_part_obj:"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:294
#, no-wrap
msgid ""
"SMS Info Part Object\n"
"--------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:297
msgid "Message component can consist of following fields:"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:299
msgid ".. attribute:: ID"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:301
#, no-wrap
msgid "   Identification of the part type:\n"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:349
msgid "``ConcatenatedTextLong`` - Contacenated SMS, when longer than 1 SMS."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:349
msgid ""
"``ConcatenatedAutoTextLong`` - Contacenated SMS, auto Default/Unicode "
"coding."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:349
msgid "``ConcatenatedTextLong16bit``"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:349
msgid "``ConcatenatedAutoTextLong16bit``"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:349
msgid "``NokiaProfileLong`` - Nokia profile = Name`` Ringtone`` ScreenSaver"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:349
msgid "``NokiaPictureImageLong`` - Nokia Picture Image + (text)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:349
msgid "``NokiaScreenSaverLong`` - Nokia screen saver + (text)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:349
msgid "``NokiaRingtone`` - Nokia ringtone - old SM2.0 format`` 1 SMS"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:349
msgid "``NokiaRingtoneLong`` - Nokia ringtone contacenated`` when very long"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:349
msgid "``NokiaOperatorLogo`` - Nokia 72x14 operator logo`` 1 SMS"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:349
msgid "``NokiaOperatorLogoLong`` - Nokia 72x14 op logo or 78x21 in 2 SMS"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:349
msgid "``NokiaCallerLogo`` - Nokia 72x14 caller logo`` 1 SMS"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:349
msgid "``NokiaWAPBookmarkLong`` - Nokia WAP bookmark in 1 or 2 SMS"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:349
msgid "``NokiaWAPSettingsLong`` - Nokia WAP settings in 2 SMS"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:349
msgid "``NokiaMMSSettingsLong`` - Nokia MMS settings in 2 SMS"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:349
msgid "``NokiaVCARD10Long`` - Nokia VCARD 1.0 - only name and default number"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:349
msgid "``NokiaVCARD21Long`` - Nokia VCARD 2.1 - all numbers + text"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:349
msgid "``NokiaVCALENDAR10Long`` - Nokia VCALENDAR 1.0 - can be in few sms"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:349
msgid "``NokiaVTODOLong``"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:349
msgid "``VCARD10Long``"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:349
msgid "``VCARD21Long``"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:349
msgid "``EMSSound10`` - IMelody 1.0"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:349
msgid "``EMSSound12`` - IMelody 1.2"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:349
msgid "``EMSSonyEricssonSound`` - IMelody without header - SonyEricsson extension"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:349
msgid "``EMSSound10Long`` - IMelody 1.0 with UPI."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:349
msgid "``EMSSound12Long`` - IMelody 1.2 with UPI."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:349
msgid "``EMSSonyEricssonSoundLong`` - IMelody without header with UPI."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:349
msgid "``EMSPredefinedSound``"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:349
msgid "``EMSPredefinedAnimation``"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:349
msgid "``EMSAnimation``"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:349
msgid "``EMSFixedBitmap`` - Fixed bitmap of size 16x16 or 32x32."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:349
msgid "``EMSVariableBitmap``"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:349
msgid "``EMSVariableBitmapLong``"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:349
msgid "``MMSIndicatorLong`` - MMS message indicator."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:349
msgid "``WAPIndicatorLong``"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:349
msgid "``AlcatelMonoBitmapLong`` - Variable bitmap with black and white colors"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:349
msgid ""
"``AlcatelMonoAnimationLong`` - Variable animation with black and white "
"colors"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:349
msgid "``AlcatelSMSTemplateName``"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:349
msgid "``SiemensFile`` - Siemens OTA"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:351
msgid ".. attribute:: Left"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:353 docs/manual/python/objects.rst:357 docs/manual/python/objects.rst:361 docs/manual/python/objects.rst:365 docs/manual/python/objects.rst:369 docs/manual/python/objects.rst:373 docs/manual/python/objects.rst:377 docs/manual/python/objects.rst:381 docs/manual/python/objects.rst:385
#, no-wrap
msgid "   Text formatting\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:355
msgid ".. attribute:: Right"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:359
msgid ".. attribute:: Center"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:363
msgid ".. attribute:: Large"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:367
msgid ".. attribute:: Small"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:371
msgid ".. attribute:: Bold"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:375
msgid ".. attribute:: Italic"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:379
msgid ".. attribute:: Underlined"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:383
msgid ".. attribute:: Strikethrough"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:387 docs/manual/python/objects.rst:775
msgid ".. attribute:: Protected"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:389
#, no-wrap
msgid "   Whether message part should be protected (DRM)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:393
#, no-wrap
msgid "   Number to encode in message.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:395
msgid ".. attribute:: Ringtone"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:397
#, no-wrap
msgid "   Ringtone to encode in message.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:399
msgid ".. attribute:: Bitmap"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:401
#, no-wrap
msgid "   Bitmap to encode in message.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:403
msgid ".. attribute:: Bookmark"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:405
#, no-wrap
msgid "   Bookmark to encode in message.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:407
msgid ".. attribute:: Settings"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:409
#, no-wrap
msgid "   Settings to encode in message.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:411
msgid ".. attribute:: MMSIndicator"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:413
#, no-wrap
msgid "   MMS indication to encode in message.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:415
msgid ".. attribute:: Phonebook"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:417
#, no-wrap
msgid "   Phonebook entry to encode in message, see :ref:`pbk_obj`.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:419
msgid ".. attribute:: Calendar"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:421
#, no-wrap
msgid "   Calendar entry to encode in message, see :ref:`cal_obj`.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:423
msgid ".. attribute:: ToDo"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:425
#, no-wrap
msgid "   Todo entry to encode in message, see :ref:`todo_obj`.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:427
msgid ".. attribute:: File"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:429
#, no-wrap
msgid "   File to encode in message, see :ref:`file_obj`.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:431 docs/manual/python/objects.rst:767
msgid ".. attribute:: Buffer"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:433
#, no-wrap
msgid "   String to encode in message.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:435
msgid ".. _todo_obj:"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:437
#, no-wrap
msgid ""
"Todo Object\n"
"-----------\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:440
msgid "Todo entry is a dictionary consisting of following fields:"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:444 docs/manual/python/objects.rst:539 docs/manual/python/objects.rst:634
#, no-wrap
msgid "   Location where the entry is stored\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:448 docs/manual/python/objects.rst:509 docs/manual/python/objects.rst:543 docs/manual/python/objects.rst:597 docs/manual/python/objects.rst:662
#, no-wrap
msgid "   Type of entry, one of:\n"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:477 docs/manual/python/objects.rst:572
msgid "``REMINDER`` - Reminder or Date"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:477 docs/manual/python/objects.rst:572
msgid "``CALL`` - Call"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:477 docs/manual/python/objects.rst:572
msgid "``MEETING`` - Meeting"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:477 docs/manual/python/objects.rst:572
msgid "``BIRTHDAY`` - Birthday or Anniversary or Special Occasion"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:477 docs/manual/python/objects.rst:572
msgid "``MEMO`` - Memo or Miscellaneous"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:477 docs/manual/python/objects.rst:572
msgid "``TRAVEL`` - Travel"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:477 docs/manual/python/objects.rst:572
msgid "``VACATION`` - Vacation"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:477 docs/manual/python/objects.rst:572
msgid "``T_ATHL`` - Training - Athletism"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:477 docs/manual/python/objects.rst:572
msgid "``T_BALL`` - Training - Ball Games"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:477 docs/manual/python/objects.rst:572
msgid "``T_CYCL`` - Training - Cycling"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:477 docs/manual/python/objects.rst:572
msgid "``T_BUDO`` - Training - Budo"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:477 docs/manual/python/objects.rst:572
msgid "``T_DANC`` - Training - Dance"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:477 docs/manual/python/objects.rst:572
msgid "``T_EXTR`` - Training - Extreme Sports"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:477 docs/manual/python/objects.rst:572
msgid "``T_FOOT`` - Training - Football"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:477 docs/manual/python/objects.rst:572
msgid "``T_GOLF`` - Training - Golf"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:477 docs/manual/python/objects.rst:572
msgid "``T_GYM`` - Training - Gym"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:477 docs/manual/python/objects.rst:572
msgid "``T_HORS`` - Training - Horse Race"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:477 docs/manual/python/objects.rst:572
msgid "``T_HOCK`` - Training - Hockey"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:477 docs/manual/python/objects.rst:572
msgid "``T_RACE`` - Training - Races"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:477 docs/manual/python/objects.rst:572
msgid "``T_RUGB`` - Training - Rugby"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:477 docs/manual/python/objects.rst:572
msgid "``T_SAIL`` - Training - Sailing"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:477 docs/manual/python/objects.rst:572
msgid "``T_STRE`` - Training - Street Games"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:477 docs/manual/python/objects.rst:572
msgid "``T_SWIM`` - Training - Swimming"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:477 docs/manual/python/objects.rst:572
msgid "``T_TENN`` - Training - Tennis"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:477 docs/manual/python/objects.rst:572
msgid "``T_TRAV`` - Training - Travels"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:477 docs/manual/python/objects.rst:572
msgid "``T_WINT`` - Training - Winter Games"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:477 docs/manual/python/objects.rst:572
msgid "``ALARM`` - Alarm"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:477 docs/manual/python/objects.rst:572
msgid "``DAILY_ALARM`` - Alarm repeating each day."
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:479
msgid ".. attribute:: Priority"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:481
#, no-wrap
msgid "   Entry priority, one of:\n"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:486
msgid "``High``"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:486
msgid "``Medium``"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:486
msgid "``Low``"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:486
msgid "``None``"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:490
#, no-wrap
msgid "   Actual entries, see :ref:`todo_entry_obj`\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:500
#, no-wrap
msgid ""
"    TODO = {\n"
"        'Type': 'MEMO',\n"
"        'Entries': [\n"
"            {'Type': 'END_DATETIME', 'Value': datetime.datetime.now() + "
"datetime.timedelta(days = 1)},\n"
"            {'Type': 'TEXT', 'Value': 'Buy some milk'},\n"
"            ],\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:502
msgid ".. _todo_entry_obj:"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:504
#, no-wrap
msgid ""
"Todo Entries Object\n"
"-------------------\n"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:524
msgid "``END_DATETIME`` - Due date (Date)."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:524
msgid "``COMPLETED`` - Whether is completed (Number)."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:524
msgid "``ALARM_DATETIME`` - When should alarm be fired (Date)."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:524
msgid "``SILENT_ALARM_DATETIME`` - When should silent alarm be fired (Date)."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:524
msgid "``TEXT`` - Text of to do (Text)."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:524
msgid "``DESCRIPTION`` - Description of to do (Text)."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:524
msgid "``LOCATION`` - Location of to do (Text)."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:524
msgid "``PRIVATE`` - Whether entry is private (Number)."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:524
msgid "``CATEGORY`` - Category of entry (Number)."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:524
msgid "``CONTACTID`` - Related contact ID (Number)."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:524
msgid "``PHONE`` - Number to call (Text)."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:524
msgid "``LUID`` - IrMC LUID which can be used for synchronisation (Text)."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:524
msgid "``LAST_MODIFIED`` - Date and time of last modification (Date)."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:524
msgid "``START_DATETIME`` - Start date (Date)."
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:526 docs/manual/python/objects.rst:621 docs/manual/python/objects.rst:715
msgid ".. attribute:: Value"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:528 docs/manual/python/objects.rst:623 docs/manual/python/objects.rst:717
#, no-wrap
msgid "   Actual value, corresponding type to Type field.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:530
msgid ".. _cal_obj:"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:532
#, no-wrap
msgid ""
"Calendar Object\n"
"---------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:535
msgid "Calendar entry is a dictionary consisting of following fields:"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:576
#, no-wrap
msgid "   Actual entries, see :ref:`cal_entry_obj`\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:588
#, no-wrap
msgid ""
"    CAL = {\n"
"        'Type': 'MEMO',\n"
"        'Entries': [\n"
"            {'Type': 'START_DATETIME', 'Value': datetime.datetime.now()},\n"
"            {'Type': 'END_DATETIME', 'Value': datetime.datetime.now() + "
"datetime.timedelta(days = 1)},\n"
"            {'Type': 'LOCATION', 'Value': 'Home'},\n"
"            {'Type': 'TEXT', 'Value': 'Relax for one day'},\n"
"            ],\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:590
msgid ".. _cal_entry_obj:"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:592
#, no-wrap
msgid ""
"Calendar Entries Object\n"
"-----------------------\n"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:619
msgid "``START_DATETIME`` - Date and time of event start."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:619
msgid "``END_DATETIME`` - Date and time of event end."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:619
msgid "``TONE_ALARM_DATETIME`` - Alarm date and time."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:619
msgid "``SILENT_ALARM_DATETIME`` - Date and time of silent alarm."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:619
msgid "``TEXT`` - Text."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:619
msgid "``DESCRIPTION`` - Detailed description."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:619
msgid "``LOCATION`` - Location."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:619
msgid "``PHONE`` - Phone number."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:619
msgid "``PRIVATE`` - Whether this entry is private."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:619
msgid "``CONTACTID`` - Related contact id."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:619
msgid "``REPEAT_DAYOFWEEK`` - Repeat each x'th day of week."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:619
msgid "``REPEAT_DAY`` - Repeat each x'th day of month."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:619
msgid "``REPEAT_DAYOFYEAR`` - Repeat each x'th day of year."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:619
msgid "``REPEAT_WEEKOFMONTH`` - Repeat x'th week of month."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:619
msgid "``REPEAT_MONTH`` - Repeat x'th month."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:619
msgid "``REPEAT_FREQUENCY`` - Repeating frequency."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:619
msgid "``REPEAT_STARTDATE`` - Repeating start."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:619
msgid "``REPEAT_STOPDATE`` - Repeating end."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:619
msgid "``REPEAT_COUNT`` - Number of repetitions."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:619
msgid "``LUID`` - IrMC LUID which can be used for synchronisation."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:619
msgid "``LAST_MODIFIED`` - Date and time of last modification."
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:625
msgid ".. _pbk_obj:"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:627
#, no-wrap
msgid ""
"Phonebook Object\n"
"----------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:630
msgid "Phonebook entry is a dictionary consisting of following fields:"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:636
msgid ".. attribute:: MemoryType"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:642
#, no-wrap
msgid "   Actual entries, see :ref:`pbk_entry_obj`\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:653
#, no-wrap
msgid ""
"    PBK = {\n"
"        'Location': 1000,\n"
"        'MemoryType': 'ME',\n"
"        'Entries': [\n"
"            {'Type': 'Number_General', 'Value': '+420123456789'},\n"
"            {'Type': 'Text_Name', 'Value': 'Stojan Jakotyc'},\n"
"            ],\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:655
msgid ".. _pbk_entry_obj:"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:657
#, no-wrap
msgid ""
"Phonebook Entries Object\n"
"------------------------\n"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``Number_General`` - General number. (Text)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``Number_Mobile`` - Mobile number. (Text)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``Number_Work`` - Work number. (Text)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``Number_Fax`` - Fax number. (Text)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``Number_Home`` - Home number. (Text)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``Number_Pager`` - Pager number. (Text)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``Number_Other`` - Other number. (Text)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``Text_Note`` - Note. (Text)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``Text_Postal`` - Complete postal address. (Text)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``Text_Email`` - Email. (Text)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``Text_Email2`` - Second email. (Text)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``Text_URL`` - URL (Text)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``Date`` - Date and time of last call. (Date)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``Caller_Group`` - Caller group. (Number)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``Text_Name`` - Name (Text)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``Text_LastName`` - Last name. (Text)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``Text_FirstName`` - First name. (Text)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``Text_Company`` - Company. (Text)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``Text_JobTitle`` - Job title. (Text)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``Category`` - Category. (Number, if -1 then text)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``Private`` - Whether entry is private. (Number)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``Text_StreetAddress`` - Street address. (Text)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``Text_City`` - City. (Text)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``Text_State`` - State. (Text)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``Text_Zip`` - Zip code. (Text)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``Text_Country`` - Country. (Text)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``Text_Custom1`` - Custom information 1. (Text)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``Text_Custom2`` - Custom information 2. (Text)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``Text_Custom3`` - Custom information 3. (Text)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``Text_Custom4`` - Custom information 4. (Text)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``RingtoneID`` - Ringtone ID. (Number)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``PictureID`` - Picture ID. (Number)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``Text_UserID`` - User ID. (Text)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``CallLength`` - Length of call (Number)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``Text_LUID`` - LUID - Unique Identifier used for synchronisation (Text)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``LastModified`` - Date of last modification (Date)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``Text_NickName`` - Nick name (Text)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``Text_FormalName`` - Formal name (Text)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``Text_WorkStreetAddress`` - Work street address. (Text)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``Text_WorkCity`` - Work city. (Text)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``Text_WorkState`` - Work state. (Text)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``Text_WorkZip`` - Work zip code. (Text)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``Text_WorkCountry`` - Work country. (Text)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``Text_WorkPostal`` - Complete work postal address. (Text)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``Text_PictureName`` - Picture name (on phone filesystem). (Text)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``PushToTalkID`` - Push-to-talk ID (Text)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``Number_Messaging`` - Favorite messaging number. (Text)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``Photo`` - Photo (Picture)."
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``Number_Mobile_Home`` - Home mobile number. (Text)"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:713
msgid "``Number_Mobile_Work`` - Work mobile number. (Text)"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:719
msgid ".. attribute:: PictureType"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:721
#, no-wrap
msgid ""
"   Type of picture which is stored in Value field (only for Picture "
"fields).\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:723
msgid ".. _file_obj:"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:725
#, no-wrap
msgid ""
"File Object\n"
"-----------\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:728
msgid "File is a dictionary consisting of following fields:"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:730
msgid ".. attribute:: Used"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:732
#, no-wrap
msgid "   Number of bytes used by this file.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:736
#, no-wrap
msgid "   File name.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:740
#, no-wrap
msgid "   Boolean value indicating whether this is a folder.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:742
msgid ".. attribute:: Level"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:744
#, no-wrap
msgid "   Depth of file on the filesystem.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:748
#, no-wrap
msgid "   File type, one of:\n"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:761
msgid "``Other``"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:761
msgid "``Java_JAR``"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:761
msgid "``Image_JPG``"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:761
msgid "``Image_BMP``"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:761
msgid "``Image_GIF``"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:761
msgid "``Image_PNG``"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:761
msgid "``Image_WBMP``"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:761
msgid "``Video_3GP``"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:761
msgid "``Sound_AMR``"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:761
msgid "``Sound_NRT`` - DCT4 binary format"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:761
msgid "``Sound_MIDI``"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/python/objects.rst:761
msgid "``MMS``"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:763
msgid ".. attribute:: ID_FullName"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:765
#, no-wrap
msgid "   Full file name including path.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:769
#, no-wrap
msgid "   Content of the file.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:771
msgid ".. attribute:: Modified"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:773
#, no-wrap
msgid "   Timestamp of last change\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:777
#, no-wrap
msgid "   Boolean value indicating whether file is protected (DRM).\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:779
msgid ".. attribute:: ReadOnly"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:781
#, no-wrap
msgid "   Boolean value indicating whether file is read only.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:783
msgid ".. attribute:: Hidden"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:785
#, no-wrap
msgid "   Boolean value indicating whether file is hidden.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:787
msgid ".. attribute:: System"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:789
#, no-wrap
msgid "   Boolean value indicating whether file is system.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:791
msgid ".. attribute:: Pos"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:793
#, no-wrap
msgid "   Current poosition of file upload\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:795
msgid ".. attribute:: Finished"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:797
#, no-wrap
msgid "   Boolean value indicating completed file transfer.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/objects.rst:813
#, no-wrap
msgid ""
"    FILE = {\n"
"        'ID_FullName': PATH,\n"
"        'Name': os.path.basename(PATH)\n"
"        'Buffer': data,\n"
"        'Protected': 0,\n"
"        'ReadOnly': 0,\n"
"        'Hidden': 0,\n"
"        'System': 0,\n"
"        'Folder': 0,\n"
"        'Level': 0,\n"
"        'Type': 'Other',\n"
"        'Finished': 0,\n"
"        'Pos': 0,\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/examples.rst:2
#, no-wrap
msgid ""
"More Examples\n"
"=============\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/examples.rst:6
msgid ""
"All these (and some more) examples are also available in python/examples/ "
"directory in Gammu sources."
msgstr ""

#. type: Plain text
#: docs/manual/python/examples.rst:8
#, no-wrap
msgid ""
"Sending a message\n"
"-----------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/examples.rst:12
#, no-wrap
msgid ""
".. literalinclude:: ../../../python/examples/sendsms.py\n"
"   :language: python\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/examples.rst:14
#, no-wrap
msgid ""
"Sending a long message\n"
"----------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/examples.rst:18
#, no-wrap
msgid ""
".. literalinclude:: ../../../python/examples/sendlongsms.py\n"
"   :language: python\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/examples.rst:20
#, no-wrap
msgid ""
"Initiating a voice call\n"
"-----------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/examples.rst:24
#, no-wrap
msgid ""
".. literalinclude:: ../../../python/examples/dialvoice.py\n"
"   :language: python\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/examples.rst:26
#, no-wrap
msgid ""
"Reading calendar from phone\n"
"---------------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/examples.rst:30
#, no-wrap
msgid ""
".. literalinclude:: ../../../python/examples/getallcalendar.py\n"
"   :language: python\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/data.rst:2
#, no-wrap
msgid ""
":mod:`gammu.data` -- Generic data usable with Gammu\n"
"===================================================\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/data.rst:6
#, no-wrap
msgid ""
".. module:: gammu.data\n"
"    :synopsis: Provides various data, which can be useful with Gammu.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/data.rst:8
msgid ".. data:: Connections"
msgstr ""

#. type: Plain text
#: docs/manual/python/data.rst:11
#, no-wrap
msgid ""
"    Provides list of connection strings known to Gammu. They can be used "
"for\n"
"    example when giving user a choice of connection string.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/data.rst:13
msgid ".. data:: MemoryValueTypes"
msgstr ""

#. type: Plain text
#: docs/manual/python/data.rst:15
#, no-wrap
msgid "    Provides list of types of memory entry values.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/data.rst:17
msgid ".. data:: CalendarTypes"
msgstr ""

#. type: Plain text
#: docs/manual/python/data.rst:19
#, no-wrap
msgid "    Provides list of calendar envet types.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/data.rst:21
msgid ".. data:: CalendarValueTypes"
msgstr ""

#. type: Plain text
#: docs/manual/python/data.rst:23
#, no-wrap
msgid "    Provides list of types of calendar entry values.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/data.rst:25
msgid ".. data:: TodoPriorities"
msgstr ""

#. type: Plain text
#: docs/manual/python/data.rst:27
#, no-wrap
msgid "   Provides list of todo priorities.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/data.rst:29
msgid ".. data:: TodoValueTypes"
msgstr ""

#. type: Plain text
#: docs/manual/python/data.rst:31
#, no-wrap
msgid "    Provides list of types of todo entry values.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/data.rst:33
msgid ".. data:: InternationalPrefixes"
msgstr ""

#. type: Plain text
#: docs/manual/python/data.rst:35
#, no-wrap
msgid "    List of known internaltional prefixes.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/data.rst:37
msgid ".. data:: Errors"
msgstr ""

#. type: Plain text
#: docs/manual/python/data.rst:39
#, no-wrap
msgid ""
"    Mapping of text representation of errors to gammu error codes. Reverse "
"to :data:`ErrorNumbers`.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/data.rst:41
msgid ".. data:: ErrorNumbers"
msgstr ""

#. type: Plain text
#: docs/manual/python/data.rst:42
#, no-wrap
msgid ""
"    Mapping of gammu error codes to text representation. Reverse to "
":data:`Errors`.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/index.rst:2
msgid ".. _python:"
msgstr ""

#. type: Plain text
#: docs/manual/python/index.rst:4
#, no-wrap
msgid ""
"python-gammu API\n"
"================\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/index.rst:7
#, no-wrap
msgid ""
"A taste of python-gammu\n"
"-----------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/index.rst:12
msgid ""
"Python-gammu allows you to easily access the phone. Following code will "
"connect to phone based on your Gammu configuration (usually stored in "
":file:`~/.gammurc`) and gets network information from it::"
msgstr ""

#. type: Plain text
#: docs/manual/python/index.rst:15
#, no-wrap
msgid ""
"    import gammu\n"
"    import sys\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/index.rst:18
#, no-wrap
msgid ""
"    # Create state machine object\n"
"    sm = gammu.StateMachine()\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/index.rst:21
#, no-wrap
msgid ""
"    # Read ~/.gammurc\n"
"    sm.ReadConfig()\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/index.rst:24
#, no-wrap
msgid ""
"    # Connect to phone\n"
"    sm.Init()\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/index.rst:27
#, no-wrap
msgid ""
"    # Reads network information from phone\n"
"    netinfo = sm.GetNetworkInfo()\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/index.rst:33
#, no-wrap
msgid ""
"    # Print information\n"
"    print 'Network name: %s' % netinfo['NetworkName']\n"
"    print 'Network code: %s' % netinfo['NetworkCode']\n"
"    print 'LAC: %s' % netinfo['LAC']\n"
"    print 'CID: %s' % netinfo['CID']\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/index.rst:38
#, no-wrap
msgid "    examples\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/index.rst:40
#, no-wrap
msgid ""
"API documentation\n"
"-----------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/index.rst:51
#, no-wrap
msgid ""
"    gammu\n"
"    smsd\n"
"    data\n"
"    worker\n"
"    exceptions\n"
"    objects\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/exceptions.rst:2
#, no-wrap
msgid ""
":mod:`gammu.exception` -- Gammu exception handling\n"
"==================================================\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/exceptions.rst:6
#, no-wrap
msgid ""
".. module:: gammu.exception\n"
"    :synopsis: Defines all exceptions used in Gammu.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/exceptions.rst:8
msgid ".. exception:: gammu.GSMError"
msgstr ""

#. type: Plain text
#: docs/manual/python/exceptions.rst:11
#, no-wrap
msgid ""
"    Generic class as parent for all Gammu exceptions. This is never raised\n"
"    directly, but should be used to catch any Gammu related exception.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/exceptions.rst:149
#, no-wrap
msgid ""
".. autoexception:: gammu.ERR_NONE\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_DEVICEOPENERROR\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_DEVICELOCKED\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_DEVICENOTEXIST\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_DEVICEBUSY\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_DEVICENOPERMISSION\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_DEVICENODRIVER\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_DEVICENOTWORK\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_DEVICEDTRRTSERROR\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_DEVICECHANGESPEEDERROR\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_DEVICEWRITEERROR\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_DEVICEREADERROR\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_DEVICEPARITYERROR\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_TIMEOUT\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_FRAMENOTREQUESTED\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_UNKNOWNRESPONSE\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_UNKNOWNFRAME\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_UNKNOWNCONNECTIONTYPESTRING\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_UNKNOWNMODELSTRING\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_SOURCENOTAVAILABLE\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_NOTSUPPORTED\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_EMPTY\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_SECURITYERROR\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_INVALIDLOCATION\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_NOTIMPLEMENTED\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_FULL\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_UNKNOWN\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_CANTOPENFILE\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_MOREMEMORY\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_PERMISSION\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_EMPTYSMSC\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_INSIDEPHONEMENU\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_NOTCONNECTED\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_WORKINPROGRESS\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_PHONEOFF\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_FILENOTSUPPORTED\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_BUG\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_CANCELED\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_NEEDANOTHERANSWER\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_OTHERCONNECTIONREQUIRED\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_WRONGCRC\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_INVALIDDATETIME\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_MEMORY\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_INVALIDDATA\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_FILEALREADYEXIST\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_FILENOTEXIST\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_SHOULDBEFOLDER\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_SHOULDBEFILE\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_NOSIM\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_GNAPPLETWRONG\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_FOLDERPART\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_FOLDERNOTEMPTY\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_DATACONVERTED\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_UNCONFIGURED\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_WRONGFOLDER\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_PHONE_INTERNAL\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_WRITING_FILE\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_NONE_SECTION\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_USING_DEFAULTS\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_CORRUPTED\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_BADFEATURE\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_DISABLED\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_SPECIFYCHANNEL\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_NOTRUNNING\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_NOSERVICE\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_BUSY\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_COULDNT_CONNECT\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_COULDNT_RESOLVE\n"
"    :show-inheritance:\n"
".. autoexception:: gammu.ERR_GETTING_SMSC\n"
"    :show-inheritance:\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:2
#, no-wrap
msgid ""
":mod:`gammu.worker` - Asynchronous communication to phone.\n"
"==========================================================\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:6
#, no-wrap
msgid ""
".. module:: gammu.worker\n"
"    :synopsis: Asynchronous communication to phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:9
msgid ""
"Mostly you should use only :class:`GammuWorker` class, others are only "
"helpers which are used by this class."
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:13
#, no-wrap
msgid ""
".. class:: GammuCommand(command, params=None, percentage=100)\n"
"   :module: gammu.worker\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:15
#, no-wrap
msgid "   Storage of single command for gammu.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:19
#, no-wrap
msgid ""
"   .. method:: GammuCommand.get_command()\n"
"      :module: gammu.worker\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:21
#, no-wrap
msgid "      Returns command name.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:25
#, no-wrap
msgid ""
"   .. method:: GammuCommand.get_params()\n"
"      :module: gammu.worker\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:27
#, no-wrap
msgid "      Returns command params.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:31
#, no-wrap
msgid ""
"   .. method:: GammuCommand.get_percentage()\n"
"      :module: gammu.worker\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:33
#, no-wrap
msgid "      Returns percentage of current task.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:37
#, no-wrap
msgid ""
".. class:: GammuTask(name, commands)\n"
"   :module: gammu.worker\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:39
#, no-wrap
msgid "   Storage of taks for gammu.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:43
#, no-wrap
msgid ""
"   .. method:: GammuTask.get_name()\n"
"      :module: gammu.worker\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:45
#, no-wrap
msgid "      Returns task name.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:49
#, no-wrap
msgid ""
"   .. method:: GammuTask.get_next()\n"
"      :module: gammu.worker\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:51
#, no-wrap
msgid "      Returns next command to be executed as :class:`GammuCommand`.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:55
#, no-wrap
msgid ""
".. class:: GammuThread(queue, config, callback)\n"
"   :module: gammu.worker\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:57
#, no-wrap
msgid "   Thread for phone communication.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:61
#, no-wrap
msgid ""
"   .. method:: GammuThread.join(timeout=None)\n"
"      :module: gammu.worker\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:63
#, no-wrap
msgid "      Terminates thread and waits for it.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:67
#, no-wrap
msgid ""
"   .. method:: GammuThread.kill()\n"
"      :module: gammu.worker\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:69
#, no-wrap
msgid "      Forces thread end without emptying queue.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:73
#, no-wrap
msgid ""
"   .. method:: GammuThread.run()\n"
"      :module: gammu.worker\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:76
#, no-wrap
msgid ""
"      Thread body, which handles phone communication. This should not\n"
"      be used from outside.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:80
#, no-wrap
msgid ""
".. class:: GammuWorker(callback)\n"
"   :module: gammu.worker\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:84
#, no-wrap
msgid ""
"   Wrapper class for asynchronous communication with Gammu. It spaws\n"
"   own thread and then passes all commands to this thread. When task is\n"
"   done, caller is notified via callback.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:88
#, no-wrap
msgid ""
"   .. method:: GammuWorker.abort()\n"
"      :module: gammu.worker\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:90
#, no-wrap
msgid "      Aborts any remaining operations.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:94
#, no-wrap
msgid ""
"   .. method:: GammuWorker.configure(config)\n"
"      :module: gammu.worker\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:96
#, no-wrap
msgid "      Configures gammu instance according to config.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:99
#, no-wrap
msgid ""
"      :param config: Gammu configuration, same as "
":meth:`gammu.StateMachine.SetConfig` accepts.\n"
"      :type config: hash\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:103
#, no-wrap
msgid ""
"   .. method:: GammuWorker.enqueue(command, params=None, commands=None)\n"
"      :module: gammu.worker\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:105
#, no-wrap
msgid "      Enqueues command or task.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:112
#, no-wrap
msgid ""
"      :param command: Command(s) to execute. Each command is tuple "
"containing function name and it's parameters.\n"
"      :type command: tuple of list of tuples\n"
"      :param params: Parameters to command.\n"
"      :type params: tuple or string\n"
"      :param commands: List of commands to execute. When this is not none, "
"params are ignored and command is taken as task name.\n"
"      :type commands: list of tuples or strings\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:116
#, no-wrap
msgid ""
"   .. method:: GammuWorker.enqueue_command(command, params)\n"
"      :module: gammu.worker\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:118
#, no-wrap
msgid "      Enqueues command.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:123
#, no-wrap
msgid ""
"      :param command: Command(s) to execute. Each command is tuple "
"containing function name and it's parameters.\n"
"      :type command: tuple of list of tuples\n"
"      :param params: Parameters to command.\n"
"      :type params: tuple or string\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:127
#, no-wrap
msgid ""
"   .. method:: GammuWorker.enqueue_task(command, commands)\n"
"      :module: gammu.worker\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:129
#, no-wrap
msgid "      Enqueues task.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:134
#, no-wrap
msgid ""
"      :param command: Command(s) to execute. Each command is tuple "
"containing function name and it's parameters.\n"
"      :type command: tuple of list of tuples\n"
"      :param commands: List of commands to execute.\n"
"      :type commands: list of tuples or strings\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:138
#, no-wrap
msgid ""
"   .. method:: GammuWorker.initiate()\n"
"      :module: gammu.worker\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:140
#, no-wrap
msgid "      Connects to phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:144
#, no-wrap
msgid ""
"   .. method:: GammuWorker.terminate(timeout=None)\n"
"      :module: gammu.worker\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:146
#, no-wrap
msgid "      Terminates phone connection.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:150
#, no-wrap
msgid ""
".. exception:: InvalidCommand(value)\n"
"   :module: gammu.worker\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:152
#, no-wrap
msgid "   Exception indicating invalid command.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:156
#, no-wrap
msgid ""
".. function:: check_worker_command(command)\n"
"   :module: gammu.worker\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:158
#, no-wrap
msgid "   Checks whether command is valid.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/worker.rst:161
#, no-wrap
msgid ""
"   :param command: Name of command.\n"
"   :type command: string\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:2
#, no-wrap
msgid ""
":mod:`gammu` -- Mobile phone access\n"
"===================================\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:6
#, no-wrap
msgid ""
".. module:: gammu\n"
"    :synopsis: Provides access to mobile phones.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:8
msgid "This module wraps all python-gammu functionality."
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:10
#, no-wrap
msgid ""
":class:`gammu.StateMachine`\n"
"---------------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:13
msgid ".. class:: StateMachine(Locale)"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:15
#, no-wrap
msgid "   StateMachine object, that is used for communication with phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:18
#, no-wrap
msgid ""
"   :param Locale: What locales to use for gammu error messages, default is "
"``auto`` which does autodetection according to user locales\n"
"   :type Locale: string\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:21
#, no-wrap
msgid "   .. method:: AddCalendar(Value)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:23
#, no-wrap
msgid "      Adds calendar entry.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:28
#, no-wrap
msgid ""
"      :param Value: Calendar entry data, see :ref:`cal_obj`\n"
"      :type Value: dict\n"
"      :return: Location of newly created entry\n"
"      :rtype: int\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:31
#, no-wrap
msgid "   .. method:: AddCategory(Type, Name)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:33
#, no-wrap
msgid "      Adds category to phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:40
#, no-wrap
msgid ""
"      :param Type: Type of category to read, one of ``ToDo``, "
"``Phonebook``\n"
"      :type Type: string\n"
"      :param Name: Category name\n"
"      :type Name: string\n"
"      :return: Location of created category\n"
"      :rtype: int\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:43
#, no-wrap
msgid "   .. method:: AddFilePart(File)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:45
#, no-wrap
msgid "      Adds file part to filesystem.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:50
#, no-wrap
msgid ""
"      :param File: File data, see :ref:`file_obj`\n"
"      :type File: dict\n"
"      :return: File data for subsequent calls (Finished indicates transfer "
"has been completed)\n"
"      :rtype: dict\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:53
#, no-wrap
msgid "   .. method:: AddFolder(ParentFolderID, Name)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:55
#, no-wrap
msgid "      Adds folder to filesystem.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:62
#, no-wrap
msgid ""
"      :param ParentFolderID: Folder where to create subfolder\n"
"      :type ParentFolderID: string\n"
"      :param Name: New folder name\n"
"      :type Name: string\n"
"      :return: New folder ID.\n"
"      :rtype: string\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:65
#, no-wrap
msgid "   .. method:: AddMemory(Value)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:67
#, no-wrap
msgid "      Adds memory (phonebooks or calls) entry.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:72 docs/manual/python/gammu.rst:960
#, no-wrap
msgid ""
"      :param Value: Memory entry, see :ref:`pbk_obj`\n"
"      :type Value: dict\n"
"      :return: Location of created entry\n"
"      :rtype: int\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:75
#, no-wrap
msgid "   .. method:: AddSMS(Value)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:77
#, no-wrap
msgid "      Adds SMS to specified folder.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:82 docs/manual/python/gammu.rst:970
#, no-wrap
msgid ""
"      :param Value: SMS data, see :ref:`sms_obj`\n"
"      :type Value: dict\n"
"      :return: Tuple for location and folder.\n"
"      :rtype: tuple\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:85
#, no-wrap
msgid "   .. method:: AddSMSFolder(Name)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:87
#, no-wrap
msgid "      Creates SMS folder.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:92
#, no-wrap
msgid ""
"      :param Name: Name of new folder\n"
"      :type Name: string\n"
"      :return: None\n"
"      :rtype: None\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:95
#, no-wrap
msgid "   .. method:: AddToDo(Value)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:97
#, no-wrap
msgid "      Adds ToDo in phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:102 docs/manual/python/gammu.rst:1000
#, no-wrap
msgid ""
"      :param Value: ToDo data, see :ref:`todo_obj`\n"
"      :type Value: dict\n"
"      :return: Location of created entry\n"
"      :rtype: int\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:105
#, no-wrap
msgid "   .. method:: AnswerCall(ID, All)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:107
#, no-wrap
msgid "      Accept current incoming call.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:114
#, no-wrap
msgid ""
"      :param ID: ID of call\n"
"      :type ID: integer\n"
"      :param All: Answer all calls?\n"
"      :type All: boolean\n"
"      :return: None\n"
"      :rtype: None\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:117
#, no-wrap
msgid "   .. method:: CancelCall(ID, All)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:119
#, no-wrap
msgid "      Deny current incoming call.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:126
#, no-wrap
msgid ""
"      :param ID: ID of call\n"
"      :type ID: integer\n"
"      :param All: Cancel all calls?\n"
"      :type All: boolean\n"
"      :return: None\n"
"      :rtype: None\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:129
#, no-wrap
msgid "   .. method:: ConferenceCall(ID)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:131
#, no-wrap
msgid "      Initiates conference call.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:136 docs/manual/python/gammu.rst:672 docs/manual/python/gammu.rst:1010 docs/manual/python/gammu.rst:1020 docs/manual/python/gammu.rst:1038 docs/manual/python/gammu.rst:1048
#, no-wrap
msgid ""
"      :param ID: ID of call\n"
"      :type ID: integer\n"
"      :return: None\n"
"      :rtype: None\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:139
#, no-wrap
msgid "   .. method:: DeleteAllCalendar()\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:141
#, no-wrap
msgid "      Deletes all calendar entries.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:144 docs/manual/python/gammu.rst:162 docs/manual/python/gammu.rst:804 docs/manual/python/gammu.rst:1028
#, no-wrap
msgid ""
"      :return: None\n"
"      :rtype: None\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:147
#, no-wrap
msgid "   .. method:: DeleteAllMemory(Type)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:149
#, no-wrap
msgid "      Deletes all memory (phonebooks or calls) entries of specified type.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:154
#, no-wrap
msgid ""
"      :param Type: Memory type, one of ``ME``, ``SM``, ``ON``, ``DC``, "
"``RC``, ``MC``, ``MT``, ``FD``, ``VM``\n"
"      :type Type: string\n"
"      :return: None\n"
"      :rtype: None\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:157
#, no-wrap
msgid "   .. method:: DeleteAllToDo()\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:159
#, no-wrap
msgid "      Deletes all todo entries in phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:165
#, no-wrap
msgid "   .. method:: DeleteCalendar(Location)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:167
#, no-wrap
msgid "      Deletes calendar entry.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:172
#, no-wrap
msgid ""
"      :param Location: Calendar entry to delete\n"
"      :type Location: int\n"
"      :return: None\n"
"      :rtype: None\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:175
#, no-wrap
msgid "   .. method:: DeleteFile(FileID)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:177
#, no-wrap
msgid "      Deletes file from filesystem.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:182
#, no-wrap
msgid ""
"      :param FileID: File to delete\n"
"      :type FileID: string\n"
"      :return: None\n"
"      :rtype: None\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:185
#, no-wrap
msgid "   .. method:: DeleteFolder(FolderID)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:187
#, no-wrap
msgid "      Deletes folder on filesystem.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:192
#, no-wrap
msgid ""
"      :param FolderID: Folder to delete\n"
"      :type FolderID: string\n"
"      :return: None\n"
"      :rtype: None\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:195
#, no-wrap
msgid "   .. method:: DeleteMemory(Type, Location)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:197
#, no-wrap
msgid "      Deletes memory (phonebooks or calls) entry.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:204
#, no-wrap
msgid ""
"      :param Type: Memory type, one of ``ME``, ``SM``, ``ON``, ``DC``, "
"``RC``, ``MC``, ``MT``, ``FD``, ``VM``\n"
"      :type Type: string\n"
"      :param Location: Location of entry to delete\n"
"      :type Location: int\n"
"      :return: None\n"
"      :rtype: None\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:207
#, no-wrap
msgid "   .. method:: DeleteSMS(Folder, Location)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:209
#, no-wrap
msgid "      Deletes SMS.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:216
#, no-wrap
msgid ""
"      :param Folder: Folder where to read entry (0 is emulated flat "
"memory)\n"
"      :type Folder: int\n"
"      :param Location: Location of entry to delete\n"
"      :type Location: int\n"
"      :return: None\n"
"      :rtype: None\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:219
#, no-wrap
msgid "   .. method:: DeleteSMSFolder(ID)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:221
#, no-wrap
msgid "      Deletes SMS folder.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:226
#, no-wrap
msgid ""
"      :param ID: Index of folder to delete\n"
"      :type ID: int\n"
"      :return: None\n"
"      :rtype: None\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:229
#, no-wrap
msgid "   .. method:: DeleteToDo(Location)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:231
#, no-wrap
msgid "      Deletes ToDo entry in phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:236
#, no-wrap
msgid ""
"      :param Location: Location of entry to delete\n"
"      :type Location: int\n"
"      :return: None\n"
"      :rtype: None\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:239
#, no-wrap
msgid "   .. method:: DialService(Number)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:241 docs/manual/python/gammu.rst:251
#, no-wrap
msgid "      Dials number and starts voice call.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:246 docs/manual/python/gammu.rst:748
#, no-wrap
msgid ""
"      :param Number: Number to dial\n"
"      :type Number: string\n"
"      :return: None\n"
"      :rtype: None\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:249
#, no-wrap
msgid "   .. method:: DialVoice(Number, ShowNumber)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:258
#, no-wrap
msgid ""
"      :param Number: Number to dial\n"
"      :type Number: string\n"
"      :param ShowNumber: Identifies whether to enable CLIR (None = keep "
"default phone settings). Default is None\n"
"      :type ShowNumber: boolean or None\n"
"      :return: None\n"
"      :rtype: None\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:261
#, no-wrap
msgid "   .. method:: EnterSecurityCode(Type, Code, NewPIN)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:263
#, no-wrap
msgid "      Entres security code.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:272
#, no-wrap
msgid ""
"      :param Type: What code to enter, one of ``PIN``, ``PUK``, ``PIN2``, "
"``PUK2``, ``Phone``.\n"
"      :type Type: string\n"
"      :param Code: Code value\n"
"      :type Code: string\n"
"      :param NewPIN: New PIN value in case entering PUK\n"
"      :type NewPIN: string\n"
"      :return: None\n"
"      :rtype: None\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:275
#, no-wrap
msgid "   .. method:: GetAlarm(Location)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:277
#, no-wrap
msgid "      Reads alarm set in phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:282
#, no-wrap
msgid ""
"      :param Location: Which alarm to read. Many phone support only one "
"alarm. Default is 1.\n"
"      :type Location: int\n"
"      :return: Alarm dict\n"
"      :rtype: dict\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:285
#, no-wrap
msgid "   .. method:: GetBatteryCharge()\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:287
#, no-wrap
msgid "      Gets information about battery charge and phone charging state.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:290
#, no-wrap
msgid ""
"      :return: Dictionary containing information about battery state "
"(BatteryPercent and ChargeState)\n"
"      :rtype: dict\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:293
#, no-wrap
msgid "   .. method:: GetCalendar(Location)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:295
#, no-wrap
msgid "      Retrieves calendar entry.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:300
#, no-wrap
msgid ""
"      :param Location: Calendar entry to read\n"
"      :type Location: int\n"
"      :return: Dictionary with calendar values, see :ref:`cal_obj`\n"
"      :rtype: dict\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:303
#, no-wrap
msgid "   .. method:: GetCalendarStatus()\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:305
#, no-wrap
msgid "      Retrieves calendar status (number of used entries).\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:308
#, no-wrap
msgid ""
"      :return: Dictionary with calendar status (Used)\n"
"      :rtype: dict\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:311
#, no-wrap
msgid "   .. method:: GetCategory(Type, Location)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:313
#, no-wrap
msgid "      Reads category from phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:320
#, no-wrap
msgid ""
"      :param Type: Type of category to read, one of ``ToDo``, "
"``Phonebook``\n"
"      :type Type: string\n"
"      :param Location: Location of category to read\n"
"      :type Location: int\n"
"      :return: Category name as string\n"
"      :rtype: string\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:323
#, no-wrap
msgid "   .. method:: GetCategoryStatus(Type)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:325
#, no-wrap
msgid "      Reads category status (number of used entries) from phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:330
#, no-wrap
msgid ""
"      :param Type: Type of category to read, one of ``ToDo``, "
"``Phonebook``\n"
"      :type Type: string\n"
"      :return: Dictionary containing information about category status "
"(Used)\n"
"      :rtype: dict\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:333
#, no-wrap
msgid "   .. method:: GetConfig(Section)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:344
#, no-wrap
msgid ""
"      Gets specified config section. Configuration consists of all params "
"which can be defined in gammurc config file:\n"
"       - Model\n"
"       - DebugLevel\n"
"       - Device\n"
"       - Connection\n"
"       - SyncTime\n"
"       - LockDevice\n"
"       - DebugFile\n"
"       - StartInfo\n"
"       - UseGlobalDebugFile\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:349
#, no-wrap
msgid ""
"      :param Section: Index of config section to read. Defaults to 0.\n"
"      :type Section: int\n"
"      :return: Dictionary containing configuration\n"
"      :rtype: dict\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:352
#, no-wrap
msgid "   .. method:: GetDateTime()\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:354
#, no-wrap
msgid "      Reads date and time from phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:357
#, no-wrap
msgid ""
"      :return: Date and time from phone as datetime.datetime object.\n"
"      :rtype: datetime.datetime\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:360
#, no-wrap
msgid "   .. method:: GetDisplayStatus()\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:364
#, no-wrap
msgid ""
"      Acquired display status.\n"
"      :return: List of indicators displayed on display\n"
"      :rtype: list\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:367
#, no-wrap
msgid "   .. method:: GetFilePart(File)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:369
#, no-wrap
msgid "      Gets file part from filesystem.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:374 docs/manual/python/gammu.rst:758
#, no-wrap
msgid ""
"      :param File: File data, see :ref:`file_obj`\n"
"      :type File: dict\n"
"      :return: File data for subsequent calls (Finished indicates transfer "
"has been completed), see :ref:`file_obj`\n"
"      :rtype: dict\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:377
#, no-wrap
msgid "   .. method:: GetFileSystemStatus()\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:379
#, no-wrap
msgid "      Acquires filesystem status.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:382
#, no-wrap
msgid ""
"      :return: Dictionary containing filesystem status (Used and Free)\n"
"      :rtype: dict\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:385
#, no-wrap
msgid "   .. method:: GetFirmware()\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:387
#, no-wrap
msgid "      Reads firmware information from phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:390
#, no-wrap
msgid ""
"      :return: Tuple from version, date and numeric version.\n"
"      :rtype: tuple\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:393
#, no-wrap
msgid "   .. method:: GetFolderListing(Folder, Start)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:395
#, no-wrap
msgid "      Gets next filename from filesystem folder.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:402
#, no-wrap
msgid ""
"      :param Folder: Folder to list\n"
"      :type Folder: string\n"
"      :param Start: Whether we're starting listing. Defaults to False.\n"
"      :type Start: boolean\n"
"      :return: File data as dict, see :ref:`file_obj`\n"
"      :rtype: dict\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:405
#, no-wrap
msgid "   .. method:: GetHardware()\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:407
#, no-wrap
msgid "      Gets hardware information about device.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:410
#, no-wrap
msgid ""
"      :return: Hardware information as string.\n"
"      :rtype: string\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:413
#, no-wrap
msgid "   .. method:: GetIMEI()\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:415
#, no-wrap
msgid "      Reads IMEI/serial number from phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:418
#, no-wrap
msgid ""
"      :return: IMEI of phone as string.\n"
"      :rtype: string\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:421
#, no-wrap
msgid "   .. method:: GetLocale()\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:423
#, no-wrap
msgid "      Gets locale information from phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:426
#, no-wrap
msgid ""
"      :return: Dictionary of locale settings. :meth:`SetLocale` lists them "
"all.\n"
"      :rtype: dict\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:429
#, no-wrap
msgid "   .. method:: GetManufactureMonth()\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:431
#, no-wrap
msgid "      Gets month when device was manufactured.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:434
#, no-wrap
msgid ""
"      :return: Month of manufacture as string.\n"
"      :rtype: string\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:437
#, no-wrap
msgid "   .. method:: GetManufacturer()\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:439
#, no-wrap
msgid "      Reads manufacturer from phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:442
#, no-wrap
msgid ""
"      :return: String with manufacturer name\n"
"      :rtype: string\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:445
#, no-wrap
msgid "   .. method:: GetMemory(Type, Location)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:447
#, no-wrap
msgid ""
"      Reads entry from memory (phonebooks or calls). Which entry shouldbe "
"read is defined in entry.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:452
#, no-wrap
msgid ""
"      :param Type: Memory type, one of ``ME``, ``SM``, ``ON``, ``DC``, "
"``RC``, ``MC``, ``MT``, ``FD``, ``VM``\n"
"      :type Type: string\n"
"      :return: Memory entry as dict, see :ref:`pbk_obj`\n"
"      :rtype: dict\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:455
#, no-wrap
msgid "   .. method:: GetMemoryStatus(Type)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:457
#, no-wrap
msgid ""
"      Gets memory (phonebooks or calls) status (eg. number of used andfree "
"entries).\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:462
#, no-wrap
msgid ""
"      :param Type: Memory type, one of ``ME``, ``SM``, ``ON``, ``DC``, "
"``RC``, ``MC``, ``MT``, ``FD``, ``VM``\n"
"      :type Type: string\n"
"      :return: Dictionary with information about memory (Used and Free)\n"
"      :rtype: dict\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:465
#, no-wrap
msgid "   .. method:: GetModel()\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:467
#, no-wrap
msgid "      Reads model from phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:470
#, no-wrap
msgid ""
"      :return: Tuple containing gammu identification and real model returned "
"by phone.\n"
"      :rtype: tuple\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:473
#, no-wrap
msgid "   .. method:: GetNetworkInfo()\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:475
#, no-wrap
msgid "      Gets network information.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:478
#, no-wrap
msgid ""
"      :return: Dictionary with information about network (NetworkName, "
"State, NetworkCode, CID and LAC)\n"
"      :rtype: dict\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:481
#, no-wrap
msgid "   .. method:: GetNextCalendar(Start, Location)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:483
#, no-wrap
msgid ""
"      Retrieves calendar entry. This is useful for continuous reading of all "
"calendar entries.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:490
#, no-wrap
msgid ""
"      :param Start: Whether to start. This can not be used together with "
"Location\n"
"      :type Start: boolean\n"
"      :param Location: Last read location. This can not be used together "
"with Start\n"
"      :type Location: int\n"
"      :return: Dictionary with calendar values, see :ref:`cal_obj`\n"
"      :rtype: dict\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:493
#, no-wrap
msgid "   .. method:: GetNextFileFolder(Start)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:495
#, no-wrap
msgid "      Gets next filename from filesystem.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:500
#, no-wrap
msgid ""
"      :param Start: Whether we're starting listing. Defaults to False.\n"
"      :type Start: boolean\n"
"      :return: File data as dict, see :ref:`file_obj`\n"
"      :rtype: dict\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:503
#, no-wrap
msgid "   .. method:: GetNextMemory(Type, Start, Location)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:505
#, no-wrap
msgid ""
"      Reads entry from memory (phonebooks or calls). Which entry shouldbe "
"read is defined in entry. This can be easily used for reading all entries.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:514
#, no-wrap
msgid ""
"      :param Type: Memory type, one of ``ME``, ``SM``, ``ON``, ``DC``, "
"``RC``, ``MC``, ``MT``, ``FD``, ``VM``\n"
"      :type Type: string\n"
"      :param Start: Whether to start. This can not be used together with "
"Location\n"
"      :type Start: boolean\n"
"      :param Location: Last read location. This can not be used together "
"with Start\n"
"      :type Location: int\n"
"      :return: Memory entry as dict, see :ref:`pbk_obj`\n"
"      :rtype: dict\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:517
#, no-wrap
msgid "   .. method:: GetNextRootFolder(Folder)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:519
#, no-wrap
msgid "      Gets next root folder from filesystem. Start with empty folder name.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:523
#, no-wrap
msgid ""
"      :param Folder: Previous read fodlder. Start with empty folder name.\n"
"      :type Folder: string\n"
"      :return: Structure with folder information\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:526
#, no-wrap
msgid "   .. method:: GetNextSMS(Folder, Start, Location)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:528
#, no-wrap
msgid ""
"      Reads next (or first if start set) SMS message. This might befaster "
"for some phones than using :meth:`GetSMS` for each message.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:537
#, no-wrap
msgid ""
"      :param Folder: Folder where to read entry (0 is emulated flat "
"memory)\n"
"      :type Folder: int\n"
"      :param Start: Whether to start. This can not be used together with "
"Location\n"
"      :type Start: boolean\n"
"      :param Location: Location last read entry. This can not be used "
"together with Start\n"
"      :type Location: int\n"
"      :return: Dictionary with SMS data, see :ref:`sms_obj`\n"
"      :rtype: dict\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:540
#, no-wrap
msgid "   .. method:: GetNextToDo(Start, Location)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:542 docs/manual/python/gammu.rst:649
#, no-wrap
msgid "      Reads ToDo from phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:549
#, no-wrap
msgid ""
"      :param Start: Whether to start. This can not be used together with "
"Location\n"
"      :type Start: boolean\n"
"      :param Location: Last read location. This can not be used together "
"with Start\n"
"      :type Location: int\n"
"      :return: Dictionary with ToDo values, see :ref:`todo_obj`\n"
"      :rtype: dict\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:552
#, no-wrap
msgid "   .. method:: GetOriginalIMEI()\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:554
#, no-wrap
msgid "      Gets original IMEI from phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:557
#, no-wrap
msgid ""
"      :return: Original IMEI of phone as string.\n"
"      :rtype: string\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:560
#, no-wrap
msgid "   .. method:: GetPPM()\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:562
#, no-wrap
msgid "      Gets PPM (Post Programmable Memory) from phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:565
#, no-wrap
msgid ""
"      :return: PPM as string\n"
"      :rtype: string\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:568
#, no-wrap
msgid "   .. method:: GetProductCode()\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:572
#, no-wrap
msgid ""
"      Gets product code of device.\n"
"      :return: Product code as string.\n"
"      :rtype: string\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:575
#, no-wrap
msgid "   .. method:: GetSIMIMSI()\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:577
#, no-wrap
msgid "      Gets SIM IMSI from phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:580
#, no-wrap
msgid ""
"      :return: SIM IMSI as string\n"
"      :rtype: string\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:583
#, no-wrap
msgid "   .. method:: GetSMS(Folder, Location)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:585
#, no-wrap
msgid "      Reads SMS message.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:592
#, no-wrap
msgid ""
"      :param Folder: Folder where to read entry (0 is emulated flat "
"memory)\n"
"      :type Folder: int\n"
"      :param Location: Location of entry to read\n"
"      :type Location: int\n"
"      :return: Dictionary with SMS data, see :ref:`sms_obj`\n"
"      :rtype: dict\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:595
#, no-wrap
msgid "   .. method:: GetSMSC(Location)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:597
#, no-wrap
msgid "      Gets SMS Service Center number and SMS settings.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:602
#, no-wrap
msgid ""
"      :param Location: Location of entry to read. Defaults to 1\n"
"      :type Location: int\n"
"      :return: Dictionary with SMSC information, see :ref:`smsc_obj`\n"
"      :rtype: dict\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:605
#, no-wrap
msgid "   .. method:: GetSMSFolders()\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:607
#, no-wrap
msgid "      Returns SMS folders information.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:610
#, no-wrap
msgid ""
"      :return: List of SMS folders.\n"
"      :rtype: list\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:613
#, no-wrap
msgid "   .. method:: GetSMSStatus()\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:615
#, no-wrap
msgid ""
"      Gets information about SMS memory (read/unread/size of memory for both "
"SIM and phone).\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:618
#, no-wrap
msgid ""
"      :return: Dictionary with information about phone memory (SIMUnRead, "
"SIMUsed, SIMSize, PhoneUnRead, PhoneUsed, PhoneSize and TemplatesUsed)\n"
"      :rtype: dict\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:621
#, no-wrap
msgid "   .. method:: GetSecurityStatus()\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:623
#, no-wrap
msgid "      Queries whether some security code needs to be entered.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:626
#, no-wrap
msgid ""
"      :return: String indicating which code needs to be entered or None if "
"none is needed\n"
"      :rtype: string\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:629
#, no-wrap
msgid "   .. method:: GetSignalQuality()\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:631
#, no-wrap
msgid "      Reads signal quality (strength and error rate).\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:634
#, no-wrap
msgid ""
"      :return: Dictionary containing information about signal state "
"(SignalStrength, SignalPercent and BitErrorRate)\n"
"      :rtype: dict\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:637
#, no-wrap
msgid "   .. method:: GetSpeedDial(Location)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:639
#, no-wrap
msgid "      Gets speed dial.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:644
#, no-wrap
msgid ""
"      :param Location: Location of entry to read\n"
"      :type Location: int\n"
"      :return: Dictionary with speed dial (Location, MemoryLocation, "
"MemoryNumberID, MemoryType)\n"
"      :rtype: dict\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:647
#, no-wrap
msgid "   .. method:: GetToDo(Location)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:654
#, no-wrap
msgid ""
"      :param Location: Location of entry to read\n"
"      :type Location: int\n"
"      :return: Dictionary with ToDo values, see :ref:`todo_obj`\n"
"      :rtype: dict\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:657
#, no-wrap
msgid "   .. method:: GetToDoStatus()\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:659
#, no-wrap
msgid "      Gets status of ToDos (count of used entries).\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:662
#, no-wrap
msgid ""
"      :return: Dictionary of status (Used)\n"
"      :rtype: dict\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:665
#, no-wrap
msgid "   .. method:: HoldCall(ID)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:667
#, no-wrap
msgid "      Holds call.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:675
#, no-wrap
msgid "   .. method:: Init(Replies)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:677
#, no-wrap
msgid "      Initialises the connection with phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:682
#, no-wrap
msgid ""
"      :param Replies: Number of replies to wait for on each "
"request. Defaults to 1. Higher value makes sense only on unreliable links.\n"
"      :type Replies: int\n"
"      :return: None\n"
"      :rtype: None\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:685
#, no-wrap
msgid "   .. method:: PressKey(Key, Press)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:687
#, no-wrap
msgid "      Emulates key press.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:694
#, no-wrap
msgid ""
"      :param Key: What key to press\n"
"      :type Key: string\n"
"      :param Press: Whether to emulate press or release.\n"
"      :type Press: boolean\n"
"      :return: None\n"
"      :rtype: None\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:697
#, no-wrap
msgid "   .. method:: ReadConfig(Section, Configuration, Filename)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:699
#, no-wrap
msgid "      Reads specified section of gammurc\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:708
#, no-wrap
msgid ""
"      :param Section: Index of config section to read. Defaults to 0.\n"
"      :type Section: int\n"
"      :param Configuration: Index where config section will be "
"stored. Defaults to Section.\n"
"      :type Configuration: int\n"
"      :param Filename: Path to configuration file (otherwise it is "
"autodetected).\n"
"      :type Filename: string\n"
"      :return: None\n"
"      :rtype: None\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:711
#, no-wrap
msgid "   .. method:: ReadDevice(Wait)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:713
#, no-wrap
msgid "      Reads data from device.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:718
#, no-wrap
msgid ""
"      :param Wait: Whether to wait, default is not to wait.\n"
"      :type Wait: boolean\n"
"      :return: Number of bytes read\n"
"      :rtype: int\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:721
#, no-wrap
msgid "   .. method:: Reset(Hard)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:723
#, no-wrap
msgid "      Performs phone reset.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:728
#, no-wrap
msgid ""
"      :param Hard: Whether to make hard reset\n"
"      :type Hard: boolean\n"
"      :return: None\n"
"      :rtype: None\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:731
#, no-wrap
msgid "   .. method:: ResetPhoneSettings(Type)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:733
#, no-wrap
msgid "      Resets phone settings.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:738
#, no-wrap
msgid ""
"      :param Type: What to reset, one of ``PHONE``, ``UIF``, ``ALL``, "
"``DEV``, ``FACTORY``\n"
"      :type Type: string\n"
"      :return: None\n"
"      :rtype: None\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:741
#, no-wrap
msgid "   .. method:: SendDTMF(Number)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:743
#, no-wrap
msgid "      Sends DTMF (Dual Tone Multi Frequency) tone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:751
#, no-wrap
msgid "   .. method:: SendFilePart(File)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:753
#, no-wrap
msgid "      Sends file part to phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:761
#, no-wrap
msgid "   .. method:: SendSMS(Value)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:763
#, no-wrap
msgid "      Sends SMS.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:768
#, no-wrap
msgid ""
"      :param Value: SMS data, see :ref:`sms_obj`\n"
"      :type Value: dict\n"
"      :return: Message reference as integer\n"
"      :rtype: int\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:771
#, no-wrap
msgid "   .. method:: SendSavedSMS(Folder, Location)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:773
#, no-wrap
msgid "      Sends SMS saved in phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:780
#, no-wrap
msgid ""
"      :param Folder: Folder where to read entry (0 is emulated flat "
"memory)\n"
"      :type Folder: int\n"
"      :param Location: Location of entry to send\n"
"      :type Location: int\n"
"      :return: Message reference as integer\n"
"      :rtype: int\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:783
#, no-wrap
msgid "   .. method:: SetAlarm(DateTime, Location, Repeating, Text)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:785
#, no-wrap
msgid "      Sets alarm in phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:796
#, no-wrap
msgid ""
"      :param DateTime: When should alarm happen.\n"
"      :type DateTime: datetime.datetime\n"
"      :param Location: Location of alarm to set. Defaults to 1.\n"
"      :type Location: int\n"
"      :param Repeating: Whether alarm should be repeating. Defaults to "
"True.\n"
"      :type Repeating: boolean\n"
"      :param Text: Text to be displayed on alarm. Defaults to empty.\n"
"      :type Text: string\n"
"      :return: None\n"
"      :rtype: None\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:799
#, no-wrap
msgid "   .. method:: SetAutoNetworkLogin()\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:801
#, no-wrap
msgid "      Enables network auto login.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:807
#, no-wrap
msgid "   .. method:: SetCalendar(Value)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:809
#, no-wrap
msgid "      Sets calendar entry\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:814
#, no-wrap
msgid ""
"      :param Value: Calendar entry data, see :ref:`cal_obj`\n"
"      :type Value: dict\n"
"      :return: Location of set entry\n"
"      :rtype: int\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:817
#, no-wrap
msgid "   .. method:: SetConfig(Section, Values)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:819
#, no-wrap
msgid "      Sets specified config section.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:826
#, no-wrap
msgid ""
"      :param Section: Index of config section to modify\n"
"      :type Section: int\n"
"      :param Values: Config values, see :meth:`GetConfig` for description of "
"accepted\n"
"      :type Values: dict\n"
"      :return: None\n"
"      :rtype: None\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:829
#, no-wrap
msgid "   .. method:: SetDateTime(Date)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:831
#, no-wrap
msgid "      Sets date and time in phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:836
#, no-wrap
msgid ""
"      :param Date: Date to set\n"
"      :type Date: datetime.datetime\n"
"      :return: None\n"
"      :rtype: None\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:839
#, no-wrap
msgid "   .. method:: SetDebugFile(File, Global)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:841
#, no-wrap
msgid "      Sets state machine debug file.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:848
#, no-wrap
msgid ""
"      :param File: File where to write debug stuff (as configured by "
":meth:`SetDebugLevel`). Can be either None for no file, Python file object "
"or filename.\n"
"      :type File: mixed\n"
"      :param Global: Whether to use global debug structure (overrides "
"File)\n"
"      :type Global: boolean\n"
"      :return: None\n"
"      :rtype: None\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:851
#, no-wrap
msgid "   .. method:: SetDebugLevel(Level)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:853
#, no-wrap
msgid ""
"      Sets state machine debug level accorting to passed string. You need to "
"configure output file using :meth:`SetDebugFile` to activate it.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:866
#, no-wrap
msgid ""
"      :type Level: string\n"
"      :param Level: name of debug level to use, currently one of:\n"
"         - nothing\n"
"         - text\n"
"         - textall\n"
"         - binary\n"
"         - errors\n"
"         - textdate\n"
"         - textalldate\n"
"         - errorsdate\n"
"      :return: None\n"
"      :rtype: None\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:869
#, no-wrap
msgid ""
"   .. method:: SetFileAttributes(Filename, ReadOnly, Protected, System, "
"Hidden)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:871
#, no-wrap
msgid "      Sets file attributes.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:884
#, no-wrap
msgid ""
"      :param Filename: File to modify\n"
"      :type Filename: string\n"
"      :param ReadOnly: Whether file is read only. Default to False.\n"
"      :type ReadOnly: boolean\n"
"      :param Protected: Whether file is protected. Default to False.\n"
"      :type Protected: boolean\n"
"      :param System: Whether file is system. Default to False.\n"
"      :type System: boolean\n"
"      :param Hidden: Whether file is hidden. Default to False.\n"
"      :type Hidden: boolean\n"
"      :return: None\n"
"      :rtype: None\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:887
#, no-wrap
msgid "   .. method:: SetIncomingCB(Enable)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:889
#, no-wrap
msgid "      Gets network information from phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:894 docs/manual/python/gammu.rst:904 docs/manual/python/gammu.rst:926 docs/manual/python/gammu.rst:936
#, no-wrap
msgid ""
"      :type Enable: boolean\n"
"      :param Enable: Whether to enable notifications, default is True\n"
"      :return: None\n"
"      :rtype: None\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:897
#, no-wrap
msgid "   .. method:: SetIncomingCall(Enable)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:899
#, no-wrap
msgid "      Activates/deactivates noticing about incoming calls.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:907
#, no-wrap
msgid "   .. method:: SetIncomingCallback(Callback)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:909
#, no-wrap
msgid ""
"      Sets callback function which is called whenever any (enabled) incoming "
"event appears. Please note that you have to enable each event type by "
"calling SetIncoming* functions.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:911
#, no-wrap
msgid ""
"      The callback function needs to accept three parameters: StateMachine "
"object, event type and it's data in dictionary.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:916
#, no-wrap
msgid ""
"      :param Callback: callback function or None for disabling\n"
"      :type Callback: function\n"
"      :return: None\n"
"      :rtype: None\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:919
#, no-wrap
msgid "   .. method:: SetIncomingSMS(Enable)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:921
#, no-wrap
msgid "      Enable/disable notification on incoming SMS.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:929
#, no-wrap
msgid "   .. method:: SetIncomingUSSD(Enable)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:931
#, no-wrap
msgid ""
"      Activates/deactivates noticing about incoming USSDs (UnStructured "
"Supplementary Services).\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:939
#, no-wrap
msgid "   .. method:: SetLocale(DateSeparator, DateFormat, AMPMTime)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:941
#, no-wrap
msgid "      Sets locale of phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:950
#, no-wrap
msgid ""
"      :param DateSeparator: Date separator.\n"
"      :type DateSeparator: string\n"
"      :param DateFormat: Date format, one of ``DDMMYYYY``, ``MMDDYYYY``, "
"``YYYYMMDD``\n"
"      :type DateFormat: string\n"
"      :param AMPMTime: Whether to use AM/PM time.\n"
"      :type AMPMTime: boolean\n"
"      :return: None\n"
"      :rtype: None\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:953
#, no-wrap
msgid "   .. method:: SetMemory(Value)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:955
#, no-wrap
msgid "      Sets memory (phonebooks or calls) entry.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:963
#, no-wrap
msgid "   .. method:: SetSMS(Value)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:965
#, no-wrap
msgid "      Sets SMS.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:973
#, no-wrap
msgid "   .. method:: SetSMSC(Value)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:975
#, no-wrap
msgid "      Sets SMS Service Center number and SMS settings.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:980
#, no-wrap
msgid ""
"      :param Value: SMSC information, see :ref:`smsc_obj`\n"
"      :type Value: dict\n"
"      :return: None\n"
"      :rtype: None\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:983
#, no-wrap
msgid "   .. method:: SetSpeedDial(Value)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:985
#, no-wrap
msgid "      Sets speed dial.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:990
#, no-wrap
msgid ""
"      :param Value: Speed dial data, see :meth:`GetSpeedDial` for listing.\n"
"      :type Value: dict\n"
"      :return: None\n"
"      :rtype: None\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:993
#, no-wrap
msgid "   .. method:: SetToDo(Value)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:995
#, no-wrap
msgid "      Sets ToDo in phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1003
#, no-wrap
msgid "   .. method:: SplitCall(ID)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1005
#, no-wrap
msgid "      Splits call.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1013
#, no-wrap
msgid "   .. method:: SwitchCall(ID, Next)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1015
#, no-wrap
msgid "      Switches call.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1023
#, no-wrap
msgid "   .. method:: Terminate()\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1025
#, no-wrap
msgid "      Terminates the connection with phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1031
#, no-wrap
msgid "   .. method:: TransferCall(ID, Next)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1033
#, no-wrap
msgid "      Transfers call.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1041
#, no-wrap
msgid "   .. method:: UnholdCall(ID)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1043
#, no-wrap
msgid "      Unholds call.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1052
#, no-wrap
msgid ""
"Generic functions\n"
"-----------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1055
msgid ".. function:: Version()"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1057
#, no-wrap
msgid "    Get version information.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1060
#, no-wrap
msgid ""
"    :return: Tuple of version information - Gammu runtime version, "
"python-gammu version, build time Gammu version.\n"
"    :rtype: tuple\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1062
#, no-wrap
msgid ""
"Debugging configuration\n"
"-----------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1065
msgid ".. function:: SetDebugFile(File)"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1067
#, no-wrap
msgid "    Sets global debug file.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1072
#, no-wrap
msgid ""
"    :param File: File where to write debug stuff (as configured by "
":meth:`SetDebugLevel`). Can be either None for no file, Python file object "
"or filename.\n"
"    :type File: mixed\n"
"    :return: None\n"
"    :rtype: None\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1074
msgid ".. function:: SetDebugLevel(Level)"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1076
#, no-wrap
msgid ""
"    Sets global debug level accorting to passed string. You need to "
"configure output file using :meth:`SetDebugFile` to activate it.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1079
#, no-wrap
msgid ""
"    :type Level: string\n"
"    :param Level: name of debug level to use, currently one of:\n"
msgstr ""

#. type: Bullet: '       * '
#: docs/manual/python/gammu.rst:1090
msgid "nothing"
msgstr ""

#. type: Bullet: '       * '
#: docs/manual/python/gammu.rst:1090
msgid "text"
msgstr ""

#. type: Bullet: '       * '
#: docs/manual/python/gammu.rst:1090
msgid "textall"
msgstr ""

#. type: Bullet: '       * '
#: docs/manual/python/gammu.rst:1090
msgid "binary"
msgstr ""

#. type: Bullet: '       * '
#: docs/manual/python/gammu.rst:1090
msgid "errors"
msgstr ""

#. type: Bullet: '       * '
#: docs/manual/python/gammu.rst:1090
msgid "textdate"
msgstr ""

#. type: Bullet: '       * '
#: docs/manual/python/gammu.rst:1090
msgid "textalldate"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1090
#, no-wrap
msgid ""
"       * errorsdate\n"
"    :return: None\n"
"    :rtype: None\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1092
#, no-wrap
msgid ""
"Message processing\n"
"------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1095
msgid ".. function:: LinkSMS(Messages, EMS)"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1097
#, no-wrap
msgid "    Links multi part SMS messages.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1104
#, no-wrap
msgid ""
"    :type Messages: list\n"
"    :type EMS: boolean\n"
"    :param Messages: List of messages to link, see :ref:`sms_obj`\n"
"    :param EMS: Whether to detect ems, defauls to True\n"
"    :return: List of linked messages, see :ref:`sms_obj`\n"
"    :rtype: list\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1106
msgid ".. function:: DecodeSMS(Messages, EMS)"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1108
#, no-wrap
msgid "    Decodes multi part SMS message.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1115
#, no-wrap
msgid ""
"    :param Messages: Nessages to decode, see :ref:`sms_obj`\n"
"    :type Messages: list\n"
"    :param EMS: Whether to use EMS, defalt to True\n"
"    :type EMS: boolean\n"
"    :return: Multi part message information, see :ref:`sms_info_obj`\n"
"    :rtype: dict\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1117
msgid ".. function:: EncodeSMS(MessageInfo)"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1119
#, no-wrap
msgid "    Encodes multi part SMS message.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1124
#, no-wrap
msgid ""
"    :param MessageInfo: Description of message, see :ref:`sms_info_obj`\n"
"    :type MessageInfo: dict\n"
"    :return: List of dictionaries with raw message, see :ref:`sms_obj`\n"
"    :rtype: dict\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1126
msgid ".. function:: DecodePDU(Data, SMSC = False)"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1128
#, no-wrap
msgid "    Parses PDU packet.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1135
#, no-wrap
msgid ""
"    :param Data: PDU data, need to be binary not hex encoded\n"
"    :type Data: string\n"
"    :param SMSC: Whether PDU includes SMSC.\n"
"    :type SMSC: boolean\n"
"    :return: Message data, see :ref:`sms_obj`\n"
"    :rtype: dict\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1137
msgid ".. function:: EncodePDU(SMS, Layout = Submit)"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1139
#, no-wrap
msgid "    Creates PDU packet.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1146
#, no-wrap
msgid ""
"    :param SMS: SMS dictionary, see :ref:`sms_obj`\n"
"    :type SMS: dict\n"
"    :param Layout: Layout (one of Submit, Deliver, StatusReport), Submit is "
"default\n"
"    :type Layout: string\n"
"    :return: Message data\n"
"    :rtype: string\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1148
#, no-wrap
msgid "    .. versionadded:: 1.27.93\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1150
#, no-wrap
msgid ""
"Encoding and decoding entries\n"
"-----------------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1153
msgid ".. function:: DecodeVCARD(Text)"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1155
#, no-wrap
msgid "    Decodes memory entry v from a string.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1160
#, no-wrap
msgid ""
"    :param Text: String to decode\n"
"    :type Text: string\n"
"    :return: Memory entry, see :ref:`pbk_obj`\n"
"    :rtype: dict\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1162
msgid ".. function:: EncodeVCARD(Entry)"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1164
#, no-wrap
msgid "    Encodes memory entry to a vCard.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1169
#, no-wrap
msgid ""
"    :param Entry: Memory entry, see :ref:`pbk_obj`\n"
"    :type Entry: dict\n"
"    :return: String with vCard\n"
"    :rtype: string\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1171
msgid ".. function:: DecodeVCS(Text)"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1173 docs/manual/python/gammu.rst:1182
#, no-wrap
msgid "    Decodes todo/calendar entry v from a string.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1178 docs/manual/python/gammu.rst:1187
#, no-wrap
msgid ""
"    :param Text: String to decode\n"
"    :type Text: string\n"
"    :return: Calendar or todo entry (whatever one was included in string), "
"see :ref:`cal_obj`, :ref:`todo_obj`\n"
"    :rtype: dict\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1180
msgid ".. function:: DecodeICS(Text)"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1189
msgid ".. function:: EncodeVCALENDAR(Entry)"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1191
#, no-wrap
msgid "    Encodes calendar entry to a vCalendar.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1196
#, no-wrap
msgid ""
"    :param Entry: Calendar entry, see :ref:`cal_obj`\n"
"    :type Entry: dict\n"
"    :return: String with vCalendar\n"
"    :rtype: string\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1198
msgid ".. function:: EncodeICALENDAR(Entry)"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1200
#, no-wrap
msgid "    Encodes calendar entry to a iCalendar.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1205
#, no-wrap
msgid ""
"    :param Entry: Calendar entry, see :ref:`cal_obj`\n"
"    :type Entry: dict\n"
"    :return: String with iCalendar\n"
"    :rtype: string\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1207
msgid ".. function:: EncodeVTODO(Entry)"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1209
#, no-wrap
msgid "    Encodes todo entry to a vTodo.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1214
#, no-wrap
msgid ""
"    :param Entry: Todo entry, see :ref:`todo_obj`\n"
"    :type Entry: dict\n"
"    :return: String with vTodo\n"
"    :rtype: string\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1216
msgid ".. function:: EncodeITODO(Entry)"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1218
#, no-wrap
msgid "    Encodes todo entry to a iTodo.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1223
#, no-wrap
msgid ""
"    :param Entry: Todo entry, see :ref:`todo_obj`\n"
"    :type Entry: dict\n"
"    :return: String with vCard\n"
"    :rtype: string\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1225
#, no-wrap
msgid ""
"Backup reading and writing\n"
"--------------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1228
msgid ".. function:: SaveRingtone(Filename, Ringtone, Format)"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1230
#, no-wrap
msgid "    Saves ringtone into file.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1239
#, no-wrap
msgid ""
"    :param Filename: Name of file where ringote will be saved\n"
"    :type Filename: string\n"
"    :param Ringtone: Ringtone to save\n"
"    :type Ringtone: dict\n"
"    :param Format: One of ``ott``, ``mid``, ``rng``, ``imy``, ``wav``, "
"``rttl``\n"
"    :type Format: string\n"
"    :return: None\n"
"    :rtype: None\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1241
msgid ".. function:: SaveBackup(Filename, Backup, Format)"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1243
#, no-wrap
msgid "    Saves backup into file.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1252
#, no-wrap
msgid ""
"    :param Filename: Name of file to read backup from\n"
"    :type Filename: string\n"
"    :param Backup: Backup data, see :func:`ReadBackup` for description\n"
"    :type Backup: dict\n"
"    :param Format: File format to use (``Auto``, ``AutoUnicode``, ``LMB``, "
"``VCalendar``, ``VCard``, ``LDIF``, ``ICS``, ``Gammu``, ``GammuUnicode``, "
"the default is ``AutoUnicode``)\n"
"    :type Format: string\n"
"    :return: None\n"
"    :rtype: None\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1254
msgid ".. function:: ReadBackup(Filename, Format)"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1256
#, no-wrap
msgid "    Reads backup into file.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1262
#, no-wrap
msgid ""
"    :param Filename: Name of file where backup is stored\n"
"    :type Filename: string\n"
"    :param Format: File format to use (``Auto``, ``AutoUnicode``, ``LMB``, "
"``VCalendar``, ``VCard``, ``LDIF``, ``ICS``, ``Gammu``, ``GammuUnicode``, "
"the default is ``AutoUnicode``)\n"
"    :type Format: string\n"
"    :return: Dictionary of read entries, it contains following keys, each "
"might be empty:\n"
msgstr ""

#. type: Bullet: '         * '
#: docs/manual/python/gammu.rst:1272
msgid "IMEI"
msgstr ""

#. type: Bullet: '         * '
#: docs/manual/python/gammu.rst:1272
msgid "Model"
msgstr ""

#. type: Bullet: '         * '
#: docs/manual/python/gammu.rst:1272
msgid "Creator"
msgstr ""

#. type: Bullet: '         * '
#: docs/manual/python/gammu.rst:1272
msgid "PhonePhonebook"
msgstr ""

#. type: Bullet: '         * '
#: docs/manual/python/gammu.rst:1272
msgid "SIMPhonebook"
msgstr ""

#. type: Bullet: '         * '
#: docs/manual/python/gammu.rst:1272
msgid "Calendar"
msgstr ""

#. type: Bullet: '         * '
#: docs/manual/python/gammu.rst:1272
msgid "ToDo"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1272
#, no-wrap
msgid ""
"         * DateTime\n"
"    :rtype: dict\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1274
msgid ".. function:: SaveSMSBackup(Filename, Backup)"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1276
#, no-wrap
msgid "    Saves SMS backup into file.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1283
#, no-wrap
msgid ""
"    :param Filename: Name of file where to save SMS backup\n"
"    :type Filename: string\n"
"    :param Backup: List of messages to store\n"
"    :type Backup: list\n"
"    :return: None\n"
"    :rtype: None\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1285
msgid ".. function:: ReadSMSBackup(Filename)"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1287
#, no-wrap
msgid "    Reads SMS backup into file.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1292
#, no-wrap
msgid ""
"    :param Filename: Name of file where SMS backup is stored\n"
"    :type Filename: string\n"
"    :return: List of messages read from file\n"
"    :rtype: list\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1294
#, no-wrap
msgid ""
"Various data\n"
"------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1297
msgid ".. data:: GSMNetworks"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1299
#, no-wrap
msgid "   Dictionary with GSM network codes.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1301
msgid ".. data:: GSMCountries"
msgstr ""

#. type: Plain text
#: docs/manual/python/gammu.rst:1302
#, no-wrap
msgid "   Dictionary with GSM country codes.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/smsd.rst:2
#, no-wrap
msgid ""
":mod:`gammu.smsd` -- SMSD access\n"
"===================================\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/smsd.rst:6
#, no-wrap
msgid ""
".. module:: gammu.smsd\n"
"    :synopsis: Provides access to Gammu SMSD functions.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/smsd.rst:8
#, no-wrap
msgid ""
":class:`SMSD`\n"
"-------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/smsd.rst:11
msgid ".. class:: SMSD(Config)"
msgstr ""

#. type: Plain text
#: docs/manual/python/smsd.rst:13
#, no-wrap
msgid "    SMSD main class, that is used for communication with phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/smsd.rst:18
#, no-wrap
msgid ""
"    You don't need to run the SMS daemon itself to control or ask it for\n"
"    status, this can be also done on separately running instances. All you\n"
"    need to do for this is to give same configuration file as that instance "
"is\n"
"    using.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/smsd.rst:21
#, no-wrap
msgid ""
"    :param Config: Path to SMSD configuration file.\n"
"    :type Config: string\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/smsd.rst:23
#, no-wrap
msgid "    .. method:: MainLoop(MaxFailures)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/smsd.rst:25
#, no-wrap
msgid "        Runs SMS daemon main loop. \n"
msgstr ""

#. type: Plain text
#: docs/manual/python/smsd.rst:28
#, no-wrap
msgid ""
"        Please note that this will run until some serious error occurs or "
"until\n"
"        terminated by :meth:`Shutdown`.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/smsd.rst:33
#, no-wrap
msgid ""
"        :param MaxFailures: After how many init failures SMSD ends. Defaults "
"to 0, what means never.\n"
"        :type MaxFailures: int\n"
"        :return: None\n"
"        :rtype: None\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/smsd.rst:36
#, no-wrap
msgid "    .. method:: Shutdown()\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/smsd.rst:38
#, no-wrap
msgid "        Signals SMS daemon to stop.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/smsd.rst:41
#, no-wrap
msgid ""
"        :return: None\n"
"        :rtype: None\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/smsd.rst:43
#, no-wrap
msgid "    .. method:: GetStatus()\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/smsd.rst:45
#, no-wrap
msgid "        Returns SMSD status. \n"
msgstr ""

#. type: Plain text
#: docs/manual/python/smsd.rst:47
#, no-wrap
msgid "        The following values are set in resulting dictionary:\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/smsd.rst:49
#, no-wrap
msgid "        Client\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/smsd.rst:51
#, no-wrap
msgid "            Client software name.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/smsd.rst:53
#, no-wrap
msgid "        PhoneID\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/smsd.rst:55
#, no-wrap
msgid "            PhoneID which can be used for multiple SMSD setup.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/smsd.rst:57
#, no-wrap
msgid "        IMEI\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/smsd.rst:59
#, no-wrap
msgid "            IMEI of currently connected phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/smsd.rst:61
#, no-wrap
msgid "        Sent\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/smsd.rst:63
#, no-wrap
msgid "            Number of sent messages.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/smsd.rst:65
#, no-wrap
msgid "        Received\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/smsd.rst:67
#, no-wrap
msgid "            Number of received messages.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/smsd.rst:69
#, no-wrap
msgid "        Failed\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/smsd.rst:71
#, no-wrap
msgid "            Number of failed messages.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/smsd.rst:73
#, no-wrap
msgid "        BatterPercent\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/smsd.rst:75
#, no-wrap
msgid "            Last battery state as reported by connected phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/smsd.rst:77
#, no-wrap
msgid "        NetworkSignal\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/smsd.rst:79
#, no-wrap
msgid "            Last signal level as reported by connected phone.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/smsd.rst:82
#, no-wrap
msgid ""
"        :return: Dict with status values\n"
"        :rtype: dict\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/smsd.rst:84
#, no-wrap
msgid "    .. method:: InjectSMS(Message)\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/smsd.rst:86
#, no-wrap
msgid "        Injects SMS message into outgoing messages queue in SMSD.\n"
msgstr ""

#. type: Plain text
#: docs/manual/python/smsd.rst:90
#, no-wrap
msgid ""
"        :param Message: Message to inject (can be multipart)\n"
"        :type Message: list of :ref:`sms_obj`\n"
"        :return: ID of inserted message\n"
"        :rtype: string\n"
msgstr ""

#. type: Plain text
#: docs/manual/internal/reply.rst:2
#, no-wrap
msgid ""
"Reply functions\n"
"===============\n"
msgstr ""

#. type: Plain text
#: docs/manual/internal/reply.rst:8
msgid ""
"When phone gives answers, we check if we requested received info and we "
"redirect it to concrete reply function, which will decode it. Different "
"phone answers can go to one reply function let's say responsible for getting "
"sms status. There are 2 types of answer:"
msgstr ""

#. type: Plain text
#: docs/manual/internal/reply.rst:10
#, no-wrap
msgid ""
"Binary\n"
"------\n"
msgstr ""

#. type: Plain text
#: docs/manual/internal/reply.rst:13 docs/manual/internal/reply.rst:28 docs/manual/internal/reply.rst:43
msgid "Example:"
msgstr ""

#. type: Plain text
#: docs/manual/internal/reply.rst:15 docs/manual/internal/reply.rst:30 docs/manual/internal/reply.rst:45 docs/manual/c/hints.rst:14 docs/manual/c/hints.rst:30 docs/manual/c/hints.rst:37 docs/manual/c/hints.rst:52 docs/manual/c/hints.rst:58 docs/manual/c/hints.rst:65 docs/manual/c/hints.rst:86 docs/manual/c/hints.rst:94 docs/manual/c/hints.rst:101 docs/manual/c/hints.rst:151 docs/manual/c/hints.rst:157 docs/manual/c/hints.rst:174 docs/manual/c/hints.rst:182
msgid ".. code-block:: c"
msgstr ""

#. type: Plain text
#: docs/manual/internal/reply.rst:17
#, no-wrap
msgid "    {N6110_ReplySaveSMSMessage,\"\\x14\",0x03,0x05,ID_SaveSMSMessage},\n"
msgstr ""

#. type: Plain text
#: docs/manual/internal/reply.rst:23
msgid ""
"ID_SaveSMSMessage request function reply. Frame is type \"\\x14\", 0x03 char "
"of frame must be 0x05. If yes, we go to N6110_ReplySaveSMSMessage.  Of "
"course, things like frame type are found in protocol (here FBUS, MBUS, etc.) "
"funcitons. If don't need anything more than frame type, 0x03,0x05 should be "
"0x00, 0x00 - it means then, that we check only frame type."
msgstr ""

#. type: Plain text
#: docs/manual/internal/reply.rst:25
#, no-wrap
msgid ""
"Text\n"
"----\n"
msgstr ""

#. type: Plain text
#: docs/manual/internal/reply.rst:32
#, no-wrap
msgid "    {ATGEN_ReplyIncomingCallInfo,\"+CLIP\",0x00,0x00,ID_IncomingFrame},\n"
msgstr ""

#. type: Plain text
#: docs/manual/internal/reply.rst:36
msgid ""
"All incoming (not requested in the moment, sent by phone, who likes us - "
"ID_IncomingFrame) responses starting from \"+CLIP\" will go to the "
"ATGEN_ReplyIncomingCallInfo."
msgstr ""

#. type: Plain text
#: docs/manual/internal/reply.rst:38
#, no-wrap
msgid ""
"Requests\n"
"--------\n"
msgstr ""

#. type: Plain text
#: docs/manual/internal/reply.rst:41
msgid "This is how GSM_Reply_Function is filled. Now how to make phone requests ?"
msgstr ""

#. type: Plain text
#: docs/manual/internal/reply.rst:54
#, no-wrap
msgid ""
"    static GSM_Error N6110_GetMemory (GSM_StateMachine   *s,\n"
"                                     GSM_PhonebookEntry *entry)\n"
"    {\n"
"      unsigned char req[] = {\n"
"           N6110_FRAME_HEADER, 0x01,\n"
"           0x00,            /* memory type */\n"
"           0x00,            /* location */\n"
"           0x00};\n"
msgstr ""

#. type: Plain text
#: docs/manual/internal/reply.rst:57
#, no-wrap
msgid ""
"      req[4] = NOKIA_GetMemoryType(entry->MemoryType,N6110_MEMORY_TYPES);\n"
"      if (req[4]==0xff) return GE_NOTSUPPORTED;\n"
msgstr ""

#. type: Plain text
#: docs/manual/internal/reply.rst:59
#, no-wrap
msgid "      req[5] = entry->Location;\n"
msgstr ""

#. type: Plain text
#: docs/manual/internal/reply.rst:64
#, no-wrap
msgid ""
"      s->Phone.Data.Memory=entry;\n"
"      dprintf(\"Getting phonebook entry\\n\");\n"
"      return GSM_WaitFor (s, req, 7, 0x03, 4, ID_GetMemory);\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/manual/internal/reply.rst:76
msgid ""
"First we fill req according to values in \\*entry. Later set pointer in "
"s->Phone.Data (it's available for reply functions and they set responses "
"exactly to it) and use GSM_WaitFor. It uses s statemachine, sends req frame "
"with length 7, msg type is 0x03, we wait for answer during 4 seconds, "
"request id is ID_GetMemory. GSM_WaitFor internally checks incoming bytes "
"from phone and redirect them to protocol functions.  If they found full "
"frame, there is checked GSM_Reply_Function, where is called ReplyFunction or "
"showed debug info, that frame is unknown. If there is ReplyFunction, it has "
"access to s->Phone.Data and decodes answer.  Returns error or not (and this "
"is value for GSM_WaitFor). If there is no requested answer during time, "
"GSM_WaitFor returns GE_TIMEOUT."
msgstr ""

#. type: Plain text
#: docs/manual/internal/index.rst:2
msgid ".. _internal:"
msgstr ""

#. type: Plain text
#: docs/manual/internal/index.rst:4
#, no-wrap
msgid ""
"Gammu internals\n"
"===============\n"
msgstr ""

#. type: Plain text
#: docs/manual/internal/index.rst:9
msgid ""
"Gammu project internals are a bit more complicated than required, mostly for "
"historical reasons. Before digging into source code, you should look at "
":doc:`../project/directories` and :doc:`../project/coding-style`."
msgstr ""

#. type: Plain text
#: docs/manual/internal/index.rst:14
#, no-wrap
msgid ""
"    reply\n"
"    state-machine\n"
msgstr ""

#. type: Plain text
#: docs/manual/internal/state-machine.rst:2
#, no-wrap
msgid ""
"State Machine\n"
"=============\n"
msgstr ""

#. type: Plain text
#: docs/manual/internal/state-machine.rst:6
msgid ""
"The state machine is core of libGammu operations. It gets the data from the "
"phone and dispatches them through protocol layer to phone drivers."
msgstr ""

#. type: Plain text
#: docs/manual/internal/state-machine.rst:9
msgid ""
"To see how it operates, following figure shows example of what happens when "
":c:func:`GSM_GetModel` is called from the program:"
msgstr ""

#. type: Plain text
#: docs/manual/internal/state-machine.rst:29
#, no-wrap
msgid ""
"   digraph statemachine {\n"
"        \"GSM_GetModel\" -> \"Phone.Functions.GetModel\";\n"
"        \"Phone.Functions.GetModel\" -> \"GSM_WaitFor\";\n"
"        \"GSM_WaitFor\" -> \"Protocol.Functions.WriteMessage\";\n"
"        \"Protocol.Functions.WriteMessage\" -> \"GSM_WaitForOnce\";\n"
"        \"GSM_WaitForOnce\" -> \"GSM_WaitFor\" [label=\"Retries\"];\n"
"        \"GSM_WaitForOnce\" -> \"GSM_ReadDevice\";\n"
"        \"GSM_ReadDevice\" -> \"GSM_WaitForOnce\" [label=\"Wair for complete "
"request\"];\n"
"        \"GSM_ReadDevice\" -> \"Device.Functions.ReadDevice\";\n"
"        \"Device.Functions.ReadDevice\" -> \"GSM_ReadDevice\" [label=\"Wait "
"for data\"];\n"
"        \"Device.Functions.ReadDevice\" -> "
"\"Protocol.Functions.StateMachine\";\n"
"        \"Protocol.Functions.StateMachine\" -> "
"\"Phone.Functions.DispatchMessage\"\n"
"        \"Phone.Functions.DispatchMessage\" -> \"GSM_DispatchMessage\";\n"
"        \"GSM_DispatchMessage\" -> \"Phone.Functions.ReplyFunctions[]()\";\n"
"        \"Phone.Functions.ReplyFunctions[]()\" -> "
"\"Phone.Functions.GetModel\";\n"
"        \"Phone.Functions.GetModel\" -> \"GSM_GetModel\";\n"
"   }\n"
msgstr ""

#. type: Plain text
#: docs/manual/formats/smsbackup.rst:2
msgid ".. _gammu-smsbackup:"
msgstr ""

#. type: Plain text
#: docs/manual/formats/smsbackup.rst:4
#, no-wrap
msgid ""
"SMS Backup Format\n"
"=================\n"
msgstr ""

#. type: Plain text
#: docs/manual/formats/smsbackup.rst:8
msgid ""
"The SMS backup format is text file encoded in current encoding of platform "
"where Gammu is running."
msgstr ""

#. type: Plain text
#: docs/manual/formats/smsbackup.rst:12
#, no-wrap
msgid ""
"Sections\n"
"--------\n"
msgstr ""

#. type: Plain text
#: docs/manual/formats/smsbackup.rst:19
msgid ""
"The file consists of sections, whose name starts with ``SMSBackup``. When "
"creating the backup file, three digits are appended to this text defining "
"order. While reading the backup, any part after ``SMSBackup`` text is "
"ignored and everything which begins with this is processed. So you can as "
"well give the section name ``SMSBackupFoo`` and it will be processed."
msgstr ""

#. type: Plain text
#: docs/manual/formats/smsbackup.rst:22
msgid ""
"The number of messages in backup file is currently limited by "
":c:data:`GSM_BACKUP_MAX_SMS` (100000 at time of writing this document)."
msgstr ""

#. type: Plain text
#: docs/manual/formats/smsbackup.rst:25
msgid "``SMSBackup`` section +++++++++++++++++++++"
msgstr ""

#. type: Plain text
#: docs/manual/formats/smsbackup.rst:28
msgid ""
"Each section interprets one physical SMS message (eg. one message part in "
"case of multipart messages)."
msgstr ""

#. type: Plain text
#: docs/manual/formats/smsbackup.rst:31
msgid "Decoded text ~~~~~~~~~~~~"
msgstr ""

#. type: Plain text
#: docs/manual/formats/smsbackup.rst:34
msgid ""
"For SMS backups created by Gammu, there is a decoded text as a comment just "
"after the section name:"
msgstr ""

#. type: Plain text
#: docs/manual/formats/smsbackup.rst:39
#, no-wrap
msgid ""
"    [SMSBackup001]\n"
"    ; This is message text\n"
msgstr ""

#. type: Plain text
#: docs/manual/formats/smsbackup.rst:42
msgid ""
"The text can be split to more lines if it is too long or of original message "
"included new lines."
msgstr ""

#. type: Plain text
#: docs/manual/formats/smsbackup.rst:47
#, no-wrap
msgid ""
"    This is easiest way to get message text, however also the least "
"reliable\n"
"    one, because it is stored in the comments in the file.\n"
msgstr ""

#. type: Plain text
#: docs/manual/formats/smsbackup.rst:50
msgid "Variables ~~~~~~~~~"
msgstr ""

#. type: Plain text
#: docs/manual/formats/smsbackup.rst:52
msgid "The following variables can be defined for each SMS:"
msgstr ""

#. type: Plain text
#: docs/manual/formats/smsbackup.rst:64
#, no-wrap
msgid ""
"``SMSC``\n"
"    Text representation of SMSC number, not used by Gammu if "
"``SMSCUnicode``\n"
"    exists.\n"
"``SMSCUnicode``\n"
"    Hex encoded UCS-2 string with SMSC number.\n"
"``Class``\n"
"    Message class.\n"
"``Sent``\n"
"    Timestamp, when message has been sent.\n"
"``PDU``\n"
"    Message type, one of:\n"
msgstr ""

#. type: Bullet: '    * '
#: docs/manual/formats/smsbackup.rst:78
msgid "``Deliver`` - received message"
msgstr ""

#. type: Bullet: '    * '
#: docs/manual/formats/smsbackup.rst:78
msgid "``Submit`` - message to send"
msgstr ""

#. type: Plain text
#: docs/manual/formats/smsbackup.rst:78
#, no-wrap
msgid ""
"    * ``Status_Report`` - message to send with delivery report\n"
"``DateTime``\n"
"    Timestamp of message (sent or received).\n"
"``RejectDuplicates``\n"
"    Whether receiver should reject duplicates.\n"
"``ReplaceMessage``\n"
"    ID of message to replace.\n"
"``MessageReference``\n"
"    Message reference number as generated by network.\n"
"``State``\n"
"    State of the message:\n"
msgstr ""

#. type: Plain text
#: docs/manual/formats/smsbackup.rst:91
#, no-wrap
msgid ""
"    * ``UnSent``\n"
"``Number``\n"
"    Recipient number.\n"
"``Name``\n"
"    Name of the message.\n"
"``Length``\n"
"    Length of message text.\n"
"``Coding``\n"
"    Coding of the message:\n"
msgstr ""

#. type: Bullet: '    * '
#: docs/manual/formats/smsbackup.rst:101
msgid "``8bit`` - binary message"
msgstr ""

#. type: Bullet: '    * '
#: docs/manual/formats/smsbackup.rst:101
msgid "``Default`` - GSM encoding, up to 160 chars in message"
msgstr ""

#. type: Plain text
#: docs/manual/formats/smsbackup.rst:101
#, no-wrap
msgid ""
"    * ``Unicode`` - Unicode encoding, up to 70 chars in message\n"
"``Text00`` ... ``TextNN``\n"
"    Numbered parts of the message payload.\n"
"``Folder``\n"
"    ID of folder where the message was saved.\n"
"``UDH``\n"
"    User defined header of the message.\n"
msgstr ""

#. type: Plain text
#: docs/manual/formats/smsbackup.rst:107
msgid "The backup of message can look like following:"
msgstr ""

#. type: Plain text
#: docs/manual/formats/smsbackup.rst:129
#, no-wrap
msgid ""
"    [SMSBackup000]\n"
"    #ABCDEFGHIJKLMNOPQRSTUVWXYZ\n"
"    #\n"
"    SMSC = \"+4540590000\"\n"
"    SMSCUnicode = 002B0034003500340030003500390030003000300030\n"
"    Sent = 20021201T025023\n"
"    State = UnRead\n"
"    Number = \"+4522706947\"\n"
"    NumberUnicode = 002B0034003500320032003700300036003900340037\n"
"    Name = \"\"\n"
"    NameUnicode =\n"
"    Text00 = "
"004100420043004400450046004700480049004A004B004C004D004E004F0050005100520053005400550056005700580059005A000A\n"
"    Coding = Default\n"
"    Folder = 1\n"
"    Length = 27\n"
"    Class = -1\n"
"    ReplySMSC = False\n"
"    RejectDuplicates = True\n"
"    ReplaceMessage = 0\n"
"    MessageReference = 0\n"
msgstr ""

#. type: Plain text
#: docs/manual/formats/backup.rst:2
msgid ".. _gammu-backup:"
msgstr ""

#. type: Plain text
#: docs/manual/formats/backup.rst:4
#, no-wrap
msgid ""
"Backup Format\n"
"=============\n"
msgstr ""

#. type: Plain text
#: docs/manual/formats/backup.rst:7
msgid ""
"The backup format is text file encoded in either ASCII or UCS-2-BE "
"encodings."
msgstr ""

#. type: Plain text
#: docs/manual/formats/backup.rst:21
msgid ""
"If you will backup settings to Gammu text file, it will be possible to edit "
"it. It's easy: many things in this file will be written double - once in "
"Unicode, once in ASCII. When you will remove Unicode version Gammu will use "
"ASCII on \\fBrestore\\fR (and you can easy edit ASCII text) and will convert "
"it according to your OS locale. When will be available Unicode version of "
"text, it will be used instead of ASCII (useful with Unicode phones - it "
"isn't important, what locale is set in computer and no conversion Unicode -> "
"ASCII and ASCII -> Unicode is done)."
msgstr ""

#. type: Plain text
#: docs/manual/formats/backup.rst:25
msgid ""
"You can use any editor with regular expressions function to edit backup text "
"file. Examples of such editors can be `vim <http://www.vim.org/>`_ or "
"`TextPad <http://www.textpad.com/>`_ which both do support regular "
"expressions."
msgstr ""

#. type: Plain text
#: docs/manual/formats/backup.rst:27
msgid "Remove info about voice tags"
msgstr ""

#. type: Plain text
#: docs/manual/formats/backup.rst:29 docs/manual/formats/backup.rst:39 docs/manual/formats/backup.rst:49
msgid "Find::"
msgstr ""

#. type: Plain text
#: docs/manual/formats/backup.rst:31
#, no-wrap
msgid "    ^Entry\\([0-9][0-9]\\)VoiceTag = \\(.*\\)\\n\n"
msgstr ""

#. type: Plain text
#: docs/manual/formats/backup.rst:33 docs/manual/formats/backup.rst:43 docs/manual/formats/backup.rst:53
msgid "Replace::"
msgstr ""

#. type: Plain text
#: docs/manual/formats/backup.rst:35
#, no-wrap
msgid "    <blank>\n"
msgstr ""

#. type: Plain text
#: docs/manual/formats/backup.rst:37
msgid "Change all numbers starting from +3620, +3630, +3660, +3670 to +3620"
msgstr ""

#. type: Plain text
#: docs/manual/formats/backup.rst:41
#, no-wrap
msgid ""
"    Type = NumberGeneral\\nEntry\\([0-9][0-9]\\)Text = "
"\"\\+36\\(20\\|30\\|60\\|70\\)\\n\n"
msgstr ""

#. type: Plain text
#: docs/manual/formats/backup.rst:45
#, no-wrap
msgid "    Type = NumberMobile\\nEntry\\1Text = \"\\+3620\n"
msgstr ""

#. type: Plain text
#: docs/manual/formats/backup.rst:47
msgid ""
"Change phone numbers type to mobile for numbers starting from +3620, "
"+3630,... and removing the corresponding TextUnicode line"
msgstr ""

#. type: Plain text
#: docs/manual/formats/backup.rst:51
#, no-wrap
msgid ""
"    Type = NumberGeneral\\nEntry\\([0-9][0-9]\\)Text = "
"\"\\+36\\([2367]0\\)\\([^\\\"]*\\)\"\\nEntry\\([0-9][0-9]\\)TextUnicode = "
"\\([^\\n]*\\)\\n\n"
msgstr ""

#. type: Plain text
#: docs/manual/formats/backup.rst:55
#, no-wrap
msgid "    Type = NumberMobile\\nEntry\\1Text = \"\\+36\\2\\3\"\\n\n"
msgstr ""

#. type: Plain text
#: docs/manual/formats/backup.rst:56
msgid ".. seealso:: :ref:`converting-formats`"
msgstr ""

#. type: Plain text
#: docs/manual/formats/index.rst:2
#, no-wrap
msgid ""
"File formats used by Gammu\n"
"==========================\n"
msgstr ""

#. type: Plain text
#: docs/manual/formats/index.rst:6
msgid ""
"Gammu understands wide range of standard formats as well as introduces own "
"formats for storing some data."
msgstr ""

#. type: Plain text
#: docs/manual/formats/index.rst:12
#, no-wrap
msgid ""
"    ini\n"
"    smsbackup\n"
"    backup\n"
msgstr ""

#. type: Plain text
#: docs/manual/formats/ini.rst:2
msgid ".. _ini:"
msgstr ""

#. type: Plain text
#: docs/manual/formats/ini.rst:4
#, no-wrap
msgid ""
"INI file format\n"
"===============\n"
msgstr ""

#. type: Plain text
#: docs/manual/formats/ini.rst:8
msgid ""
"The INI file format is widely used in Gammu, for both configuration (see "
":ref:`gammurc`) and storing data (see :ref:`gammu-backup` and "
":ref:`gammu-smsbackup`)."
msgstr ""

#. type: Plain text
#: docs/manual/formats/ini.rst:12
msgid ""
"This file use ini file syntax, with comment parts being marked with both "
"``;`` and ``#``. Sections of config file are identified in square brackets "
"line ``[this]``. All key values are case insensitive."
msgstr ""

#. type: Plain text
#: docs/manual/formats/ini.rst:18
msgid ""
"You most likely know INI files from other programs, however to illustrate, "
"here is some example:"
msgstr ""

#. type: Plain text
#: docs/manual/formats/ini.rst:22
#, no-wrap
msgid "    ; comment\n"
msgstr ""

#. type: Plain text
#: docs/manual/formats/ini.rst:25
#, no-wrap
msgid ""
"    [section]\n"
"    key = value\n"
msgstr ""

#. type: Plain text
#: docs/manual/formats/ini.rst:27
#, no-wrap
msgid "    [another section]\n"
msgstr ""

#. type: Plain text
#: docs/manual/formats/ini.rst:29
#, no-wrap
msgid "    key =  longer value\n"
msgstr ""

#. type: Plain text
#: docs/manual/formats/ini.rst:31
#, no-wrap
msgid "    # another comment\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/call.rst:2
#, no-wrap
msgid ""
"Call\n"
"=============\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/call.rst:25
msgid ""
".. doxygenfunction:: GSM_DialVoice .. doxygenfunction:: GSM_DialService "
".. doxygenfunction:: GSM_AnswerCall .. doxygenfunction:: GSM_CancelCall "
".. doxygenfunction:: GSM_HoldCall .. doxygenfunction:: GSM_UnholdCall "
".. doxygenfunction:: GSM_ConferenceCall .. doxygenfunction:: GSM_SplitCall "
".. doxygenfunction:: GSM_TransferCall .. doxygenfunction:: GSM_SwitchCall "
".. doxygenfunction:: GSM_GetCallDivert .. doxygenfunction:: "
"GSM_SetCallDivert .. doxygenfunction:: GSM_CancelAllDiverts "
".. doxygenfunction:: GSM_SetIncomingCall .. doxygenfunction:: GSM_SendDTMF "
".. doxygenenum:: GSM_CallStatus .. doxygenstruct:: GSM_Call .. doxygenenum:: "
"GSM_Divert_DivertTypes .. doxygenenum:: GSM_Divert_CallTypes "
".. doxygenstruct:: GSM_CallDivert .. doxygenstruct:: GSM_MultiCallDivert "
".. doxygenenum:: GSM_CallShowNumber"
msgstr ""

#. type: Plain text
#: docs/manual/c/examples.rst:2
#, no-wrap
msgid ""
"Examples\n"
"========\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/examples.rst:6
msgid ""
"All these examples are also available in docs/examples/ directory in Gammu "
"sources."
msgstr ""

#. type: Plain text
#: docs/manual/c/examples.rst:8
#, no-wrap
msgid ""
"Getting phone information\n"
"-------------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/examples.rst:12
#, no-wrap
msgid ""
".. literalinclude:: ../../examples/phone-info.c\n"
"   :language: c\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/examples.rst:14
#, no-wrap
msgid ""
"Reading SMS message\n"
"-------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/examples.rst:18
#, no-wrap
msgid ""
".. literalinclude:: ../../examples/sms-read.c\n"
"   :language: c\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/examples.rst:20
#, no-wrap
msgid ""
"Sending SMS message\n"
"-------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/examples.rst:24
#, no-wrap
msgid ""
".. literalinclude:: ../../examples/sms-send.c\n"
"   :language: c\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/examples.rst:26
#, no-wrap
msgid ""
"Sending Long SMS message\n"
"------------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/examples.rst:30
#, no-wrap
msgid ""
".. literalinclude:: ../../examples/long-sms.c\n"
"   :language: c\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/examples.rst:32
#, no-wrap
msgid ""
"SMSD example\n"
"------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/examples.rst:36
#, no-wrap
msgid ""
".. literalinclude:: ../../examples/smsd.c\n"
"   :language: c\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/examples.rst:38
#, no-wrap
msgid ""
"Custom configuration\n"
"--------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/examples.rst:42
#, no-wrap
msgid ""
".. literalinclude:: ../../examples/custom-config.c\n"
"   :language: c\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/bitmap.rst:2
#, no-wrap
msgid ""
"Bitmap\n"
"=============\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/bitmap.rst:17
msgid ""
".. doxygenfunction:: GSM_GetBitmap .. doxygenfunction:: GSM_SetBitmap "
".. doxygenfunction:: GSM_PrintBitmap .. doxygenfunction:: GSM_SaveBitmapFile "
".. doxygenfunction:: GSM_ReadBitmapFile .. doxygenfunction:: "
"GSM_IsPointBitmap .. doxygenfunction:: GSM_SetPointBitmap "
".. doxygenfunction:: GSM_ClearPointBitmap .. doxygenfunction:: "
"GSM_ClearBitmap .. doxygenenum:: GSM_BinaryPicture_Types .. doxygenstruct:: "
"GSM_BinaryPicture .. doxygenenum:: GSM_Bitmap_Types .. doxygenstruct:: "
"GSM_Bitmap .. doxygenstruct:: GSM_MultiBitmap"
msgstr ""

#. type: Plain text
#: docs/manual/c/security.rst:2
#, no-wrap
msgid ""
"Security\n"
"=============\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/security.rst:7
msgid ""
".. doxygenfunction:: GSM_EnterSecurityCode .. doxygenfunction:: "
"GSM_GetSecurityStatus .. doxygenenum:: GSM_SecurityCodeType "
".. doxygenstruct:: GSM_SecurityCode"
msgstr ""

#. type: Plain text
#: docs/manual/c/backup.rst:2
#, no-wrap
msgid ""
"Backup\n"
"=============\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/backup.rst:18
msgid ""
".. doxygenfunction:: GSM_ReadSMSBackupFile .. doxygenfunction:: "
"GSM_AddSMSBackupFile .. doxygenfunction:: GSM_ClearSMSBackup "
".. doxygenfunction:: GSM_FreeSMSBackup .. doxygenfunction:: "
"GSM_SaveBackupFile .. doxygenfunction:: GSM_GuessBackupFormat "
".. doxygenfunction:: GSM_ReadBackupFile .. doxygenfunction:: GSM_ClearBackup "
".. doxygenfunction:: GSM_FreeBackup .. doxygenfunction:: "
"GSM_GetBackupFormatFeatures .. doxygenfunction:: GSM_GetBackupFileFeatures "
".. doxygenstruct:: GSM_SMS_Backup .. doxygenstruct:: GSM_Backup "
".. doxygenenum:: GSM_BackupFormat .. doxygenstruct:: GSM_Backup_Info"
msgstr ""

#. type: Plain text
#: docs/manual/c/misc.rst:2
#, no-wrap
msgid ""
"Miscellaneous\n"
"=============\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/misc.rst:11
msgid ""
".. doxygenfunction:: GetLine .. doxygenfunction:: GetGammuVersion "
".. doxygenfunction:: GetCompiler .. doxygenfunction:: GetOS "
".. doxygenfunction:: GetGammuLocalePath .. doxygenfunction:: GSM_InitLocales "
".. doxygenfunction:: EncodeHexBin .. doxygenfunction:: GSM_IsNewerVersion"
msgstr ""

#. type: Plain text
#: docs/manual/c/wap.rst:2
#, no-wrap
msgid ""
"WAP\n"
"=============\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/wap.rst:14
msgid ""
".. doxygenfunction:: GSM_EncodeURLFile .. doxygenfunction:: "
"GSM_GetWAPBookmark .. doxygenfunction:: GSM_SetWAPBookmark "
".. doxygenfunction:: GSM_DeleteWAPBookmark .. doxygenfunction:: "
"GSM_GetWAPSettings .. doxygenfunction:: GSM_SetWAPSettings "
".. doxygenstruct:: GSM_WAPBookmark .. doxygenenum:: WAPSettings_Speed "
".. doxygenenum:: WAPSettings_Bearer .. doxygenstruct:: GSM_WAPSettings "
".. doxygenstruct:: GSM_MultiWAPSettings"
msgstr ""

#. type: Plain text
#: docs/manual/c/nokia.rst:2
#, no-wrap
msgid ""
"Nokia\n"
"=============\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/nokia.rst:5
msgid ""
".. doxygenfunction:: NOKIA_GetDefaultCallerGroupName .. doxygenfunction:: "
"NOKIA_GetDefaultProfileName"
msgstr ""

#. type: Plain text
#: docs/manual/c/datetime.rst:2
#, no-wrap
msgid ""
"Date and time\n"
"=============\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/datetime.rst:16
msgid ""
".. doxygenfunction:: DayOfWeek .. doxygenfunction:: GSM_GetCurrentDateTime "
".. doxygenfunction:: Fill_Time_T .. doxygenfunction:: "
"GSM_GetLocalTimezoneOffset .. doxygenfunction:: Fill_GSM_DateTime "
".. doxygenfunction:: OSDateTime .. doxygenfunction:: OSDate "
".. doxygenfunction:: CheckDate .. doxygenfunction:: CheckTime "
".. doxygenfunction:: GSM_GetDateTime .. doxygenfunction:: GSM_SetDateTime "
".. doxygenstruct:: GSM_DateTime .. doxygenstruct:: GSM_DeltaTime"
msgstr ""

#. type: Plain text
#: docs/manual/c/calendar.rst:2
#, no-wrap
msgid ""
"Calendar\n"
"=============\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/calendar.rst:50
msgid ""
".. doxygenfunction:: GSM_CalendarFindDefaultTextTimeAlarmPhone "
".. doxygenfunction:: GSM_EncodeVTODO .. doxygenfunction:: "
"GSM_EncodeVCALENDAR .. doxygenfunction:: GSM_DecodeVNOTE "
".. doxygenfunction:: GSM_EncodeVNTFile .. doxygenfunction:: "
"GSM_DecodeVCALENDAR_VTODO .. doxygenfunction:: GSM_IsCalendarNoteFromThePast "
".. doxygenfunction:: GSM_GetAlarm .. doxygenfunction:: GSM_SetAlarm "
".. doxygenfunction:: GSM_GetToDoStatus .. doxygenfunction:: GSM_GetToDo "
".. doxygenfunction:: GSM_GetNextToDo .. doxygenfunction:: GSM_SetToDo "
".. doxygenfunction:: GSM_AddToDo .. doxygenfunction:: GSM_DeleteToDo "
".. doxygenfunction:: GSM_DeleteAllToDo .. doxygenfunction:: "
"GSM_GetCalendarStatus .. doxygenfunction:: GSM_GetCalendar "
".. doxygenfunction:: GSM_GetNextCalendar .. doxygenfunction:: "
"GSM_SetCalendar .. doxygenfunction:: GSM_AddCalendar .. doxygenfunction:: "
"GSM_DeleteCalendar .. doxygenfunction:: GSM_DeleteAllCalendar "
".. doxygenfunction:: GSM_GetCalendarSettings .. doxygenfunction:: "
"GSM_SetCalendarSettings .. doxygenfunction:: GSM_GetNotesStatus "
".. doxygenfunction:: GSM_GetNote .. doxygenfunction:: GSM_GetNextNote "
".. doxygenfunction:: GSM_SetNote .. doxygenfunction:: GSM_AddNote "
".. doxygenfunction:: GSM_DeleteNote .. doxygenfunction:: GSM_DeleteAllNotes "
".. doxygenstruct:: GSM_CalendarSettings .. doxygenstruct:: GSM_ToDoStatus "
".. doxygenstruct:: GSM_CalendarStatus .. doxygenenum:: GSM_CalendarNoteType "
".. doxygenenum:: GSM_CalendarType .. doxygenstruct:: GSM_SubCalendarEntry "
".. doxygenstruct:: GSM_CalendarEntry .. doxygenenum:: GSM_ToDoType "
".. doxygenenum:: GSM_ToDo_Priority .. doxygenstruct:: GSM_SubToDoEntry "
".. doxygenstruct:: GSM_ToDoEntry .. doxygenstruct:: GSM_NoteEntry "
".. doxygenstruct:: GSM_Alarm .. doxygenenum:: GSM_VToDoVersion "
".. doxygenenum:: GSM_VCalendarVersion"
msgstr ""

#. type: Plain text
#: docs/manual/c/porting.rst:2
#, no-wrap
msgid ""
"Porting from libGammu older than 1.12.0\n"
"========================================\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/porting.rst:5
#, no-wrap
msgid ""
"Rationale for API change\n"
"------------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/porting.rst:10
msgid ""
"This document describes what you have to change in your code, if you used "
"Gammu older than 1.12.0. This release came with huge changes to API, which "
"has to be done for various reasons:"
msgstr ""

#. type: Bullet: '- '
#: docs/manual/c/porting.rst:15
msgid ""
"ABI stability. - Till now almost every change in internals of any driver "
"lead to ABI change. If we would correctly increase soname on each ABI "
"change, we would be somewhere near 200, what is not something we could be "
"proud of."
msgstr ""

#. type: Bullet: '- '
#: docs/manual/c/porting.rst:19
msgid ""
"Centralisation of variables cleanup. - Currently all phone drivers have to "
"do some common things in each function. New API allows to centralize those "
"operations in one place."
msgstr ""

#. type: Bullet: '- '
#: docs/manual/c/porting.rst:23
msgid ""
"Exposing of internals. - Old API exposed too much of Gammu internals, what "
"could be misused by programmers and could lead to unexpected behaviour when "
"some internals are changed."
msgstr ""

#. type: Plain text
#: docs/manual/c/porting.rst:25
#, no-wrap
msgid ""
"Changes you have to do in your code\n"
"-----------------------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/porting.rst:29
msgid ""
"Bellow examples expect ``sm`` to be state machine structure in your current "
"code, change it to appropriate variable name if it differs."
msgstr ""

#. type: Bullet: '1. '
#: docs/manual/c/porting.rst:34
msgid ""
"Use pointer to :c:type:`GSM_StateMachine` instead of it. API now do not "
"expose this structure, so you will get compiler error. You should allocate "
"this pointer by :c:func:`GSM_AllocStateMachine` and free by "
":c:func:`GSM_FreeStateMachine`."
msgstr ""

#. type: Bullet: '2. '
#: docs/manual/c/porting.rst:39
msgid ""
"Change all phone functions from ``sm.Phone.Functions->SomeFunction`` to "
"``GSM_SomeFunction``. Only functions which results were stored inside state "
"machine structure have changed signature to include results of the "
"operation."
msgstr ""

#. type: Bullet: '3. '
#: docs/manual/c/porting.rst:42
msgid ""
"All callbacks are set by function ``GSM_Set*Callback`` instead of directly "
"accessing structure."
msgstr ""

#. type: Bullet: '4. '
#: docs/manual/c/porting.rst:44
msgid "Some function have been renamed to follow ``GSM_*`` naming conventions."
msgstr ""

#. type: Plain text
#: docs/manual/c/porting.rst:47
msgid ""
"As there might be some functions still missing from new API, don't hesitate "
"to contact author or ask on mailing list if you miss something."
msgstr ""

#. type: Plain text
#: docs/manual/c/porting.rst:49
msgid ""
"API documentation can be generated using Doxygen (make apidoc in build "
"tree), you can also view it online at <http://wammu.eu/docs/devel/api/>."
msgstr ""

#. type: Plain text
#: docs/manual/c/index.rst:2
msgid ".. _libgammu:"
msgstr ""

#. type: Plain text
#: docs/manual/c/index.rst:4
#, no-wrap
msgid ""
"libGammu\n"
"========\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/index.rst:9
msgid ""
"The libGammu library exposes all Gammu functionality for various phones in "
"standard API. It can be used to do anything with your phone, however for "
"easier tasks you might prefer to use Python and :doc:`../python/index`."
msgstr ""

#. type: Plain text
#: docs/manual/c/index.rst:14
msgid ""
"If you intend to use libGammu in your application, all you should need is to "
"``#include <gammu.h>`` and then use Gammu functions. You can check "
"docs/examples/ for some small example applications. You don't need real "
"phone for testing, use :ref:`dummy-driver` instead."
msgstr ""

#. type: Plain text
#: docs/manual/c/index.rst:20 docs/manual/c/api.rst:9
#, no-wrap
msgid ""
"   The C API documentation is still more complete in Doxygen format\n"
"   available on Gammu website. This still lacks some parts due to\n"
"   problems in Doxygen - Sphinx bridge.\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/index.rst:27
#, no-wrap
msgid ""
"    hints\n"
"    examples\n"
"    api\n"
"    porting\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/info.rst:2
#, no-wrap
msgid ""
"Info\n"
"=============\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/info.rst:35
msgid ""
".. doxygenfunction:: GSM_GetNetworkName .. doxygenfunction:: "
"GSM_GetCountryName .. doxygenfunction:: GSM_FeatureToString "
".. doxygenfunction:: GSM_FeatureFromString .. doxygenfunction:: "
"GSM_IsPhoneFeatureAvailable .. doxygenfunction:: GSM_AddPhoneFeature "
".. doxygenfunction:: GSM_GetManufacturer .. doxygenfunction:: GSM_GetModel "
".. doxygenfunction:: GSM_GetModelInfo .. doxygenfunction:: GSM_GetFirmware "
".. doxygenfunction:: GSM_GetIMEI .. doxygenfunction:: GSM_GetOriginalIMEI "
".. doxygenfunction:: GSM_GetManufactureMonth .. doxygenfunction:: "
"GSM_GetProductCode .. doxygenfunction:: GSM_GetHardware .. doxygenfunction:: "
"GSM_GetPPM .. doxygenfunction:: GSM_GetSIMIMSI .. doxygenfunction:: "
"GSM_GetBatteryCharge .. doxygenfunction:: GSM_GetSignalQuality "
".. doxygenfunction:: GSM_GetNetworkInfo .. doxygenfunction:: "
"GSM_GetDisplayStatus .. doxygenenum:: GSM_NetworkInfo_State .. doxygenenum:: "
"GSM_GPRS_State .. doxygenstruct:: GSM_NetworkInfo .. doxygenstruct:: "
"GSM_SignalQuality .. doxygenenum:: GSM_ChargeState .. doxygenenum:: "
"GSM_BatteryType .. doxygenstruct:: GSM_BatteryCharge .. doxygenenum:: "
"GSM_DisplayFeature .. doxygenstruct:: GSM_DisplayFeatures .. doxygenenum:: "
"GSM_Feature .. doxygenstruct:: GSM_PhoneModel"
msgstr ""

#. type: Plain text
#: docs/manual/c/category.rst:2
#, no-wrap
msgid ""
"Category\n"
"=============\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/category.rst:9
msgid ""
".. doxygenfunction:: GSM_GetCategory .. doxygenfunction:: GSM_AddCategory "
".. doxygenfunction:: GSM_GetCategoryStatus .. doxygenenum:: GSM_CategoryType "
".. doxygenstruct:: GSM_Category .. doxygenstruct:: GSM_CategoryStatus"
msgstr ""

#. type: Plain text
#: docs/manual/c/api.rst:2
#, no-wrap
msgid ""
"libGammu C API\n"
"==============\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/api.rst:38
#, no-wrap
msgid ""
"    backup\n"
"    bitmap\n"
"    calendar\n"
"    callback\n"
"    call\n"
"    category\n"
"    datetime\n"
"    debug\n"
"    error\n"
"    file\n"
"    info\n"
"    inifile\n"
"    keys\n"
"    limits\n"
"    memory\n"
"    message\n"
"    misc\n"
"    nokia\n"
"    ringtone\n"
"    security\n"
"    settings\n"
"    smsd\n"
"    statemachine\n"
"    types\n"
"    unicode\n"
"    wap\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/keys.rst:2
#, no-wrap
msgid ""
"Keys\n"
"=============\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/keys.rst:6
msgid ""
".. doxygenfunction:: MakeKeySequence .. doxygenfunction:: GSM_PressKey "
".. doxygenenum:: GSM_KeyCode"
msgstr ""

#. type: Plain text
#: docs/manual/c/types.rst:2
#, no-wrap
msgid ""
"Types\n"
"=============\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/types.rst:5
msgid ".. doxygentypedef:: gboolean"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:2
#, no-wrap
msgid ""
"Hints for libGammu Novices\n"
"==========================\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:6
msgid ""
"This is very short overview of libGammu usage. You will probably need to "
"study :doc:`api` to find out what functions you want to use."
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:9
#, no-wrap
msgid ""
"Basic library usage\n"
"-------------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:12
msgid "You need to include main header file:"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:16
#, no-wrap
msgid "    #include <gammu.h>\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:18
msgid "To compile you need to pass flags from pkg-config::"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:20
#, no-wrap
msgid "    pkg-config --cflags gammu\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:22
msgid "To link you need to pass from pkg-config::"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:24
#, no-wrap
msgid "    pkg-config --libs gammu\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:28
msgid ""
"Gammu stores all its data in a GSM_StateMachine struct. This structure is "
"not public, so all you can define is a pointer to it:"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:32
#, no-wrap
msgid "    GSM_StateMachine *state_machine;\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:35
msgid ""
"You'll want to check for errors from time to time.  Do it using a function "
"something like this:"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:46
#, no-wrap
msgid ""
"    void check_error(GSM_Error err)\n"
"    {\n"
"      if (err == ERR_NONE) {\n"
"        return;\n"
"      }\n"
"      fprintf(stderr, \"Gammu failure: %s\\n\", GSM_ErrorString(error));\n"
"      exit(1);\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:50
msgid ""
"As libGammu does interact with strings in your local encoding, it is good "
"idea to initialize locales subsystem first (otherwise you would get broken "
"non ASCII characters):"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:54
#, no-wrap
msgid "    GSM_InitLocales(NULL);\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:56
msgid "You first need to allocate a state machine structure:"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:60
#, no-wrap
msgid "    state_machine = GSM_AllocStateMachine();\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:63
msgid ""
"Now think about the configuration file.  To use the default "
":file:`~/.gammurc`, do this:"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:67
#, no-wrap
msgid "    INI_Section *cfg;\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:71
#, no-wrap
msgid ""
"    /* Find it */\n"
"    error = GSM_FindGammuRC(&cfg, NULL);\n"
"    check_error(error);\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:75
#, no-wrap
msgid ""
"    /* Read it */\n"
"    error = GSM_ReadConfig(cfg, GSM_GetConfig(state_machine, 0), 0);\n"
"    check_error(error);\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:78
#, no-wrap
msgid ""
"    /* Free allocated memory */\n"
"    INI_Free(cfg);\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:81
#, no-wrap
msgid ""
"    /* We care onlu about first configuration */\n"
"    GSM_SetConfigNum(s, 1);\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:84
msgid ""
"OK, now initialise the connection (1 means number of replies you want to "
"wait for in case of failure):"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:89
#, no-wrap
msgid ""
"    error = GSM_InitConnection(s, 1);\n"
"    check_error(error);\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:92
msgid ""
"Now you are ready to communicate with the phone, for example you can read "
"manufacturer name:"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:97
#, no-wrap
msgid ""
"    error = GSM_GetManufacturer(s, buffer);\n"
"    check_error(error);\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:99
msgid "When you're finished, you need to disconnect and free allocated memory:"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:104
#, no-wrap
msgid ""
"    error = GSM_TerminateConnection(s);\n"
"    check_error(error);\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:108
#, no-wrap
msgid ""
"    /* Free up used memory */\n"
"    GSM_FreeStateMachine(s);\n"
"    check_error(error);\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:110
msgid "There are also other :doc:`examples`."
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:112
#, no-wrap
msgid ""
"Compling the code\n"
"-----------------\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:118
msgid ""
"To compile program using Gammu library, you need to pass include path to the "
"compiler and library name and search path to the linker. This can be easiest "
"achieved by using :program:`pkg-config`. See following ``Makefile`` for "
"example:"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:120
msgid ".. code-block:: make"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:122
#, no-wrap
msgid ""
"    # Sample Makefile which can be used to build examples shipped with "
"Gammu\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:125
#, no-wrap
msgid ""
"    CFLAGS=$(shell pkg-config --cflags --libs gammu-smsd) -Wall\n"
"    LDFLAGS=$(shell pkg-config --cflags --libs gammu)\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:127
#, no-wrap
msgid "    ALL=phone-info sms-send smsd\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:129
#, no-wrap
msgid "    .PHONY: all clean\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:131
#, no-wrap
msgid "    all: $(ALL)\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:134
#, no-wrap
msgid ""
"    clean: \n"
"        rm -f $(ALL)\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:137
#, no-wrap
msgid ""
"    %:%.c\n"
"        $(CC) $< $(CFLAGS) $(LDFLAGS) -o $@\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:140
#, no-wrap
msgid ""
"Unicode\n"
"-------\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:147
msgid ""
"Gammu stores all strings internally in UCS-2-BE encoding (terminated by two "
"zero bytes). This is used mostly for historical reasons and today the "
"obvious choice would be ``wchar_t``.  To work with these strings, various "
"functions are provided (``UnicodeLength``, ``DecodeUnicode``, "
"``EncodeUnicode``, ``CopyUnicodeString``, etc.)."
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:149
msgid "For printing on console you should use:"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:153
#, no-wrap
msgid "    printf(\"%s\\n\", DecodeUnicodeConsole(unicode_string));\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:155
msgid "For giving string to some GUI toolkit:"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:159
#, no-wrap
msgid "    printf(\"%s\\n\", DecodeUnicodeString(unicode_string));\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:165
#, no-wrap
msgid ""
"   These functions differ only on platforms where console uses "
"historically\n"
"   different character set than GUI, what effectively means only Microsoft\n"
"   Windows.\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:167
#, no-wrap
msgid ""
"Debugging\n"
"---------\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:170
msgid "You can either enabled debug logging globally or per state machine."
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:172
msgid "To enable global debugging use:"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:178
#, no-wrap
msgid ""
"\tdebug_info = GSM_GetGlobalDebug();\n"
"\tGSM_SetDebugFileDescriptor(stderr, FALSE, debug_info);\n"
"\tGSM_SetDebugLevel(\"textall\", debug_info);\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:180
msgid "For per state machine configuration:"
msgstr ""

#. type: Plain text
#: docs/manual/c/hints.rst:186
#, no-wrap
msgid ""
"\tdebug_info = GSM_GetDebug(s);\n"
"\tGSM_SetDebugGlobal(FALSE, debug_info);\n"
"\tGSM_SetDebugFileDescriptor(stderr, FALSE, debug_info);\n"
"\tGSM_SetDebugLevel(\"textall\", debug_info);\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/debug.rst:2
#, no-wrap
msgid ""
"Debug\n"
"=============\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/debug.rst:15
msgid ""
".. doxygenfunction:: GSM_SetDebugFunction .. doxygenfunction:: "
"GSM_SetDebugFile .. doxygenfunction:: GSM_SetDebugFileDescriptor "
".. doxygenfunction:: GSM_GetGlobalDebug .. doxygenfunction:: GSM_GetDebug "
".. doxygenfunction:: GSM_GetDI .. doxygenfunction:: GSM_SetDebugLevel "
".. doxygenfunction:: GSM_SetDebugCoding .. doxygenfunction:: "
"GSM_SetDebugGlobal .. doxygenfunction:: GSM_LogError .. doxygenfunction:: "
"smprintf .. doxygentypedef:: GSM_Debug_Info"
msgstr ""

#. type: Plain text
#: docs/manual/c/error.rst:2
#, no-wrap
msgid ""
"Error handling\n"
"==============\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/error.rst:6
msgid ""
".. doxygenfunction:: GSM_ErrorString .. doxygenfunction:: GSM_ErrorName "
".. doxygenenum:: GSM_Error"
msgstr ""

#. type: Plain text
#: docs/manual/c/unicode.rst:2
#, no-wrap
msgid ""
"Unicode\n"
"=============\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/unicode.rst:24
msgid ""
".. doxygenfunction:: UnicodeLength .. doxygenfunction:: DecodeUnicodeString "
".. doxygenfunction:: DecodeUnicodeConsole .. doxygenfunction:: DecodeUnicode "
".. doxygenfunction:: EncodeUnicode .. doxygenfunction:: ReadUnicodeFile "
".. doxygenfunction:: CopyUnicodeString .. doxygenfunction:: "
"EncodeUTF8QuotedPrintable .. doxygenfunction:: DecodeUTF8QuotedPrintable "
".. doxygenfunction:: EncodeWithUTF8Alphabet .. doxygenfunction:: "
"DecodeWithUTF8Alphabet .. doxygenfunction:: DecodeHexUnicode "
".. doxygenfunction:: EncodeHexUnicode .. doxygenfunction:: mywstrncmp "
".. doxygenfunction:: mywstrstr .. doxygenfunction:: mywstrncasecmp "
".. doxygenfunction:: EncodeUTF8 .. doxygenfunction:: DecodeUTF8 "
".. doxygenfunction:: DecodeHexBin .. doxygenfunction:: "
"EncodeWithUnicodeAlphabet .. doxygenfunction:: DecodeWithUnicodeAlphabet"
msgstr ""

#. type: Plain text
#: docs/manual/c/message.rst:2
#, no-wrap
msgid ""
"Messages\n"
"=============\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/message.rst:71
msgid ""
".. doxygenfunction:: GSM_DecodePDUFrame .. doxygenfunction:: "
"GSM_DecodeSMSFrame .. doxygenfunction:: GSM_GetMessageCoding "
".. doxygenfunction:: GSM_EncodeSMSFrame .. doxygenfunction:: "
"GSM_DecodeSMSFrameStatusReportData .. doxygenfunction:: "
"GSM_DecodeSMSFrameText .. doxygenfunction:: GSM_DecodeUDHHeader "
".. doxygenfunction:: GSM_EncodeUDHHeader .. doxygenfunction:: "
"GSM_SetDefaultReceivedSMSData .. doxygenfunction:: GSM_SetDefaultSMSData "
".. doxygenfunction:: GSM_DecodeSiemensOTASMS .. doxygenfunction:: "
"PHONE_EncodeSMSFrame .. doxygenfunction:: GSM_EncodeMultiPartSMS "
".. doxygenfunction:: GSM_DecodeMultiPartSMS .. doxygenfunction:: "
"GSM_ClearMultiPartSMSInfo .. doxygenfunction:: GSM_FreeMultiPartSMSInfo "
".. doxygenfunction:: GSM_LinkSMS .. doxygenfunction:: "
"GSM_DecodeMMSFileToMultiPart .. doxygenfunction:: GSM_ClearMMSMultiPart "
".. doxygenfunction:: GSM_GetSMSC .. doxygenfunction:: GSM_SetSMSC "
".. doxygenfunction:: GSM_GetSMSStatus .. doxygenfunction:: GSM_GetSMS "
".. doxygenfunction:: GSM_GetNextSMS .. doxygenfunction:: GSM_SetSMS "
".. doxygenfunction:: GSM_AddSMS .. doxygenfunction:: GSM_DeleteSMS "
".. doxygenfunction:: GSM_SendSMS .. doxygenfunction:: GSM_SendSavedSMS "
".. doxygenfunction:: GSM_SetFastSMSSending .. doxygenfunction:: "
"GSM_SetIncomingSMS .. doxygenfunction:: GSM_SetIncomingCB "
".. doxygenfunction:: GSM_GetSMSFolders .. doxygenfunction:: GSM_AddSMSFolder "
".. doxygenfunction:: GSM_DeleteSMSFolder .. doxygenfunction:: "
"GSM_GetMMSFolders .. doxygenfunction:: GSM_GetNextMMSFileInfo "
".. doxygenfunction:: GSM_SetIncomingUSSD .. doxygenenum:: GSM_MMS_Class "
".. doxygenstruct:: GSM_MMSIndicator .. doxygenstruct:: GSM_CBMessage "
".. doxygenenum:: GSM_USSDStatus .. doxygenstruct:: GSM_USSDMessage "
".. doxygenstruct:: GSM_SMSMemoryStatus .. doxygenenum:: GSM_SMSFormat "
".. doxygenenum:: GSM_ValidityPeriod .. doxygenenum:: "
"GSM_ValidityPeriodFormat .. doxygenstruct:: GSM_SMSValidity "
".. doxygenstruct:: GSM_SMSC .. doxygenenum:: GSM_SMS_State .. doxygenenum:: "
"GSM_Coding_Type .. doxygenenum:: GSM_UDH .. doxygenstruct:: GSM_UDHHeader "
".. doxygenenum:: GSM_SMSMessageType .. doxygenstruct:: GSM_SMSMessage "
".. doxygenstruct:: GSM_SMSMessageLayout .. doxygenstruct:: GSM_OneSMSFolder "
".. doxygenstruct:: GSM_SMSFolders .. doxygenstruct:: GSM_SiemensOTASMSInfo "
".. doxygenstruct:: GSM_MultiSMSMessage .. doxygenstruct:: GSM_OneMMSFolder "
".. doxygenstruct:: GSM_MMSFolders .. doxygenenum:: EncodeMultiPartSMSID "
".. doxygenstruct:: GSM_MultiPartSMSEntry .. doxygenstruct:: "
"GSM_MultiPartSMSInfo .. doxygenenum:: MMSAddressType .. doxygenstruct:: "
"GSM_EncodedMultiPartMMSEntry .. doxygenstruct:: GSM_EncodedMultiPartMMSInfo"
msgstr ""

#. type: Plain text
#: docs/manual/c/file.rst:2
#, no-wrap
msgid ""
"File\n"
"=============\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/file.rst:20
msgid ""
".. doxygenfunction:: GSM_JADFindData .. doxygenfunction:: GSM_ReadFile "
".. doxygenfunction:: GSM_IdentifyFileFormat .. doxygenfunction:: "
"GSM_GetNextFileFolder .. doxygenfunction:: GSM_GetFolderListing "
".. doxygenfunction:: GSM_GetNextRootFolder .. doxygenfunction:: "
"GSM_SetFileAttributes .. doxygenfunction:: GSM_GetFilePart "
".. doxygenfunction:: GSM_AddFilePart .. doxygenfunction:: GSM_SendFilePart "
".. doxygenfunction:: GSM_GetFileSystemStatus .. doxygenfunction:: "
"GSM_DeleteFile .. doxygenfunction:: GSM_AddFolder .. doxygenfunction:: "
"GSM_DeleteFolder .. doxygenstruct:: GSM_FileSystemStatus .. doxygenenum:: "
"GSM_FileType .. doxygenstruct:: GSM_File"
msgstr ""

#. type: Plain text
#: docs/manual/c/inifile.rst:2
#, no-wrap
msgid ""
"INI files\n"
"=============\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/inifile.rst:11
msgid ""
".. doxygenfunction:: INI_Free .. doxygenfunction:: INI_ReadFile "
".. doxygenfunction:: INI_FindLastSectionEntry .. doxygenfunction:: "
"INI_GetValue .. doxygenfunction:: INI_GetInt .. doxygenfunction:: "
"INI_GetBool .. doxygenfunction:: INI_IsTrue"
msgstr ""

#. type: Plain text
#: docs/manual/c/inifile.rst:15
msgid ""
".. doxygentypedef:: INI_Entry .. doxygentypedef:: INI_Section "
".. doxygenstruct:: _INI_Entry .. doxygenstruct:: _INI_Section"
msgstr ""

#. type: Plain text
#: docs/manual/c/limits.rst:2
#, no-wrap
msgid ""
"Limits\n"
"=============\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/memory.rst:2
#, no-wrap
msgid ""
"Memory\n"
"=============\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/memory.rst:25
msgid ""
".. doxygenfunction:: GSM_StringToMemoryType .. doxygenfunction:: "
"GSM_GetMemoryStatus .. doxygenfunction:: GSM_GetMemory .. doxygenfunction:: "
"GSM_GetNextMemory .. doxygenfunction:: GSM_SetMemory .. doxygenfunction:: "
"GSM_AddMemory .. doxygenfunction:: GSM_DeleteMemory .. doxygenfunction:: "
"GSM_DeleteAllMemory .. doxygenfunction:: GSM_GetSpeedDial "
".. doxygenfunction:: GSM_SetSpeedDial .. doxygenfunction:: "
"GSM_PhonebookGetEntryName .. doxygenfunction:: "
"GSM_PhonebookFindDefaultNameNumberGroup .. doxygenfunction:: GSM_EncodeVCARD "
".. doxygenfunction:: GSM_DecodeVCARD .. doxygenfunction:: "
"GSM_FreeMemoryEntry .. doxygenenum:: GSM_MemoryType .. doxygenstruct:: "
"GSM_MemoryStatus .. doxygenenum:: GSM_EntryType .. doxygenstruct:: "
"GSM_SubMemoryEntry .. doxygenstruct:: GSM_MemoryEntry .. doxygenstruct:: "
"GSM_SpeedDial .. doxygenenum:: GSM_VCardVersion"
msgstr ""

#. type: Plain text
#: docs/manual/c/callback.rst:2
#, no-wrap
msgid ""
"Callback\n"
"=============\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/callback.rst:13
msgid ""
".. doxygenfunction:: GSM_SetIncomingCallCallback .. doxygenfunction:: "
"GSM_SetIncomingSMSCallback .. doxygenfunction:: GSM_SetIncomingCBCallback "
".. doxygenfunction:: GSM_SetIncomingUSSDCallback .. doxygenfunction:: "
"GSM_SetSendSMSStatusCallback .. doxygentypedef:: IncomingCallCallback "
".. doxygentypedef:: IncomingSMSCallback .. doxygentypedef:: "
"IncomingCBCallback .. doxygentypedef:: IncomingUSSDCallback "
".. doxygentypedef:: SendSMSStatusCallback"
msgstr ""

#. type: Plain text
#: docs/manual/c/smsd.rst:2
#, no-wrap
msgid ""
"SMSD\n"
"=============\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/smsd.rst:12
msgid ""
".. doxygenfunction:: SMSD_InjectSMS .. doxygenfunction:: SMSD_GetStatus "
".. doxygenfunction:: SMSD_Shutdown .. doxygenfunction:: SMSD_ReadConfig "
".. doxygenfunction:: SMSD_MainLoop .. doxygenfunction:: SMSD_NewConfig "
".. doxygenfunction:: SMSD_FreeConfig .. doxygenstruct:: GSM_SMSDStatus "
".. doxygentypedef:: GSM_SMSDConfig"
msgstr ""

#. type: Plain text
#: docs/manual/c/statemachine.rst:2
#, no-wrap
msgid ""
"State machine\n"
"=============\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/statemachine.rst:5
msgid ""
".. c:function:: GSM_Error GSM_InitConnection_Log(GSM_StateMachine * s, int "
"ReplyNum, GSM_Log_Function log_function, void *user_data)"
msgstr ""

#. type: Plain text
#: docs/manual/c/statemachine.rst:11
#, no-wrap
msgid ""
"    :param s: State machine data\n"
"    :param ReplyNum: Number of replies to await (usually 3).\n"
"    :param log_function: Logging function, see "
":c:type:`GSM_SetDebugFunction`.\n"
"    :param user_data: User data for logging function, see "
":c:type:`GSM_SetDebugFunction`.\n"
"    :return: Error code\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/statemachine.rst:13
#, no-wrap
msgid "    Initiates connection with custom logging callback.\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/statemachine.rst:15
msgid ""
".. c:function:: GSM_Error GSM_InitConnection(GSM_StateMachine * s, int "
"ReplyNum)"
msgstr ""

#. type: Plain text
#: docs/manual/c/statemachine.rst:19
#, no-wrap
msgid ""
"    :param s: State machine data\n"
"    :param ReplyNum: Number of replies to await (usually 1). Higher value "
"makes sense only on unreliable links.\n"
"    :return: Error code\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/statemachine.rst:21
#, no-wrap
msgid "    Initiates connection.\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/statemachine.rst:24
msgid ".. c:function:: GSM_Error GSM_TerminateConnection(GSM_StateMachine * s)"
msgstr ""

#. type: Plain text
#: docs/manual/c/statemachine.rst:27
#, no-wrap
msgid ""
"    :param s: State machine data\n"
"    :return: Error code\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/statemachine.rst:29
#, no-wrap
msgid "    Terminates connection.\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/statemachine.rst:31
msgid ".. c:type:: GSM_StateMachine"
msgstr ""

#. type: Plain text
#: docs/manual/c/statemachine.rst:35
#, no-wrap
msgid ""
"    Private structure holding information about phone connection. Should\n"
"    be allocated by :c:func:`GSM_AllocStateMachine` and freed by\n"
"    :c:func:`GSM_FreeStateMachine`.\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/statemachine.rst:37
msgid ".. c:type:: GSM_ConnectionType"
msgstr ""

#. type: Plain text
#: docs/manual/c/statemachine.rst:39
#, no-wrap
msgid "     Connection types definitions.\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/statemachine.rst:41
msgid ".. c:type:: GSM_Config"
msgstr ""

#. type: Plain text
#: docs/manual/c/statemachine.rst:43
#, no-wrap
msgid "    Configuration of state machine.\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/statemachine.rst:45
#, no-wrap
msgid "    .. c:member:: char Model[50]\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/statemachine.rst:47
#, no-wrap
msgid "        Model from config file.\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/statemachine.rst:49
msgid ".. c:type:: GSM_Log_Function"
msgstr ""

#. type: Plain text
#: docs/manual/c/statemachine.rst:53
#, no-wrap
msgid ""
"    :param text: Text to be printed, \\n will be also sent (as a separate "
"message).\n"
"    :param data: Arbitrary logger data, as passed to "
":c:func:`GSM_InitConnection_Log`.\n"
"    :returns: void\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/statemachine.rst:55
#, no-wrap
msgid "    Type of callback function for logging.\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/statemachine.rst:67
msgid ""
".. doxygenfunction:: GSM_ReadDevice .. doxygenfunction:: GSM_IsConnected "
".. doxygenfunction:: GSM_FindGammuRC .. doxygenfunction:: GSM_ReadConfig "
".. doxygenfunction:: GSM_GetConfig .. doxygenfunction:: GSM_GetConfigNum "
".. doxygenfunction:: GSM_SetConfigNum .. doxygenfunction:: "
"GSM_AllocStateMachine .. doxygenfunction:: GSM_FreeStateMachine "
".. doxygenfunction:: GSM_GetUsedConnection .. doxygenstruct:: GSM_Config"
msgstr ""

#. type: Plain text
#: docs/manual/c/ringtone.rst:2
#, no-wrap
msgid ""
"Ringtone\n"
"=============\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/ringtone.rst:35
msgid ""
".. doxygenfunction:: PHONE_RTTLPlayOneNote .. doxygenfunction:: PHONE_Beep "
".. doxygenfunction:: GSM_GetRingtone .. doxygenfunction:: GSM_SetRingtone "
".. doxygenfunction:: GSM_GetRingtonesInfo .. doxygenfunction:: "
"GSM_DeleteUserRingtones .. doxygenfunction:: GSM_PlayTone "
".. doxygenfunction:: GSM_RingtoneConvert .. doxygenfunction:: "
"GSM_ReadRingtoneFile .. doxygenfunction:: GSM_SaveRingtoneFile "
".. doxygenfunction:: GSM_SaveRingtoneOtt .. doxygenfunction:: "
"GSM_SaveRingtoneMidi .. doxygenfunction:: GSM_SaveRingtoneIMelody "
".. doxygenfunction:: GSM_SaveRingtoneWav .. doxygenfunction:: "
"GSM_SaveRingtoneRttl .. doxygenfunction:: GSM_GetRingtoneName "
".. doxygenfunction:: GSM_RTTLGetTempo .. doxygenenum:: GSM_RingNoteStyle "
".. doxygenenum:: GSM_RingNoteNote .. doxygenenum:: GSM_RingNoteDuration "
".. doxygenenum:: GSM_RingNoteDurationSpec .. doxygenenum:: GSM_RingNoteScale "
".. doxygenstruct:: GSM_RingNote .. doxygenenum:: GSM_RingCommandType "
".. doxygenstruct:: GSM_RingCommand .. doxygenstruct:: GSM_NoteRingtone "
".. doxygenstruct:: GSM_NokiaBinaryRingtone .. doxygenstruct:: GSM_BinaryTone "
".. doxygenenum:: GSM_RingtoneFormat .. doxygenstruct:: GSM_Ringtone "
".. doxygenstruct:: GSM_RingtoneInfo .. doxygenstruct:: GSM_AllRingtonesInfo"
msgstr ""

#. type: Plain text
#: docs/manual/c/settings.rst:2
#, no-wrap
msgid ""
"Settings\n"
"=============\n"
msgstr ""

#. type: Plain text
#: docs/manual/c/settings.rst:32
msgid ""
".. doxygenfunction:: GSM_GetLocale .. doxygenfunction:: GSM_SetLocale "
".. doxygenfunction:: GSM_GetSyncMLSettings .. doxygenfunction:: "
"GSM_SetSyncMLSettings .. doxygenfunction:: GSM_GetChatSettings "
".. doxygenfunction:: GSM_SetChatSettings .. doxygenfunction:: "
"GSM_GetMMSSettings .. doxygenfunction:: GSM_SetMMSSettings "
".. doxygenfunction:: GSM_SetAutoNetworkLogin .. doxygenfunction:: GSM_Reset "
".. doxygenfunction:: GSM_ResetPhoneSettings .. doxygenfunction:: "
"GSM_GetProfile .. doxygenfunction:: GSM_SetProfile .. doxygenfunction:: "
"GSM_GetFMStation .. doxygenfunction:: GSM_SetFMStation .. doxygenfunction:: "
"GSM_ClearFMStations .. doxygenfunction:: GSM_GetGPRSAccessPoint "
".. doxygenfunction:: GSM_SetGPRSAccessPoint .. doxygenstruct:: "
"GSM_SyncMLSettings .. doxygenenum:: GSM_ResetSettingsType .. doxygenstruct:: "
"GSM_ChatSettings .. doxygenenum:: GSM_Profile_Feat_Value .. doxygenenum:: "
"GSM_Profile_Feat_ID .. doxygenstruct:: GSM_Profile .. doxygenstruct:: "
"GSM_FMStation .. doxygenstruct:: GSM_GPRSAccessPoint .. doxygenenum:: "
"GSM_DateFormat .. doxygenstruct:: GSM_Locale .. doxygenstruct:: "
"GSM_Profile_PhoneTableValue"
msgstr ""

#. type: Plain text
#: docs/manual/utils/index.rst:2
msgid ".. _utils:"
msgstr ""

#. type: Plain text
#: docs/manual/utils/index.rst:4
#, no-wrap
msgid ""
"Miscellaneous utilities\n"
"=======================\n"
msgstr ""

#. type: Plain text
#: docs/manual/utils/index.rst:12
#, no-wrap
msgid ""
"    gammu-detect\n"
"    gammu-config\n"
"    jadmaker\n"
msgstr ""

#. type: Plain text
#: docs/manual/utils/gammu-config.rst:2
msgid ".. _gammu-config:"
msgstr ""

#. type: Plain text
#: docs/manual/utils/gammu-config.rst:4
#, no-wrap
msgid ""
"gammu-config\n"
"============\n"
msgstr ""

#. type: Plain text
#: docs/manual/utils/gammu-config.rst:7
msgid ".. program:: gammu-config"
msgstr ""

#. type: Plain text
#: docs/manual/utils/gammu-config.rst:14
#, no-wrap
msgid "    gammu-config [-f|--force] [-c|--config CONFIG]\n"
msgstr ""

#. type: Plain text
#: docs/manual/utils/gammu-config.rst:19
msgid "Script to help configuring :ref:`gammu`."
msgstr ""

#. type: Plain text
#: docs/manual/utils/gammu-config.rst:22 docs/manual/utils/jadmaker.rst:22 docs/manual/utils/gammu-detect.rst:43
msgid ""
"This program follows the usual GNU command line syntax, with long options "
"starting with two dashes (``-``). A summary of options is included below."
msgstr ""

#. type: Plain text
#: docs/manual/utils/gammu-config.rst:26 docs/manual/utils/jadmaker.rst:27 docs/manual/utils/gammu-detect.rst:47
#, no-wrap
msgid "    Show summary of options.\n"
msgstr ""

#. type: Plain text
#: docs/manual/utils/gammu-config.rst:28 docs/manual/utils/jadmaker.rst:29
msgid ".. option:: -f, --force"
msgstr ""

#. type: Plain text
#: docs/manual/utils/gammu-config.rst:30
#, no-wrap
msgid "    Force configuring even if config already exists.\n"
msgstr ""

#. type: Plain text
#: docs/manual/utils/gammu-config.rst:32
msgid ".. option:: -c, --config CONFIG"
msgstr ""

#. type: Plain text
#: docs/manual/utils/gammu-config.rst:33
#, no-wrap
msgid "    Define which configuration file to use.\n"
msgstr ""

#. type: Plain text
#: docs/manual/utils/jadmaker.rst:2
msgid ".. _jadmaker:"
msgstr ""

#. type: Plain text
#: docs/manual/utils/jadmaker.rst:4
#, no-wrap
msgid ""
"jadmaker\n"
"========\n"
msgstr ""

#. type: Plain text
#: docs/manual/utils/jadmaker.rst:7
msgid ".. program:: jadmaker"
msgstr ""

#. type: Plain text
#: docs/manual/utils/jadmaker.rst:14
#, no-wrap
msgid "    jadmaker [-f|--force] [-u|--url URL] <filename.jar>...\n"
msgstr ""

#. type: Plain text
#: docs/manual/utils/jadmaker.rst:19
msgid "Script to generate JAD file from JAR file."
msgstr ""

#. type: Plain text
#: docs/manual/utils/jadmaker.rst:31
#, no-wrap
msgid "    Force rewriting of JAD file even if exists.\n"
msgstr ""

#. type: Plain text
#: docs/manual/utils/jadmaker.rst:33
msgid ".. option:: -u, --url URL"
msgstr ""

#. type: Plain text
#: docs/manual/utils/jadmaker.rst:34
#, no-wrap
msgid "    Define URL to be included in JAD file.\n"
msgstr ""

#. type: Plain text
#: docs/manual/utils/gammu-detect.rst:3
msgid ".. _gammu-detect:"
msgstr ""

#. type: Plain text
#: docs/manual/utils/gammu-detect.rst:5
#, no-wrap
msgid ""
"gammu-detect\n"
"============\n"
msgstr ""

#. type: Plain text
#: docs/manual/utils/gammu-detect.rst:8
msgid ".. versionadded:: 1.28.95"
msgstr ""

#. type: Plain text
#: docs/manual/utils/gammu-detect.rst:10
msgid ".. program:: gammu-detect"
msgstr ""

#. type: Plain text
#: docs/manual/utils/gammu-detect.rst:17
#, no-wrap
msgid "    gammu-detect [OPTIONS]\n"
msgstr ""

#. type: Plain text
#: docs/manual/utils/gammu-detect.rst:22
msgid ""
"Script to detect available devices, which might be suitable for "
":ref:`gammu`."
msgstr ""

#. type: Plain text
#: docs/manual/utils/gammu-detect.rst:27
#, no-wrap
msgid ""
"    This program lists all devices, which might be suitable, it does not "
"do\n"
"    any probing on devices them self.\n"
msgstr ""

#. type: Plain text
#: docs/manual/utils/gammu-detect.rst:29
msgid "Currently it supports following devices:"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/utils/gammu-detect.rst:34
msgid "USB devices using udev"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/utils/gammu-detect.rst:34
msgid "Serial ports using udev"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/utils/gammu-detect.rst:34
msgid "Serial ports on Windows"
msgstr ""

#. type: Bullet: '* '
#: docs/manual/utils/gammu-detect.rst:34
msgid "Bluetooth devices using Bluez"
msgstr ""

#. type: Plain text
#: docs/manual/utils/gammu-detect.rst:40
#, no-wrap
msgid ""
"    Supported devices depend on platform you are using and compiled in\n"
"    features. You can find out what is actually compiled in by running \n"
"    :option:`gammu-detect -v`.\n"
msgstr ""

#. type: Plain text
#: docs/manual/utils/gammu-detect.rst:49
msgid ".. option:: -d, --debug"
msgstr ""

#. type: Plain text
#: docs/manual/utils/gammu-detect.rst:51
#, no-wrap
msgid "    Show debugging output for detecting devices.\n"
msgstr ""

#. type: Plain text
#: docs/manual/utils/gammu-detect.rst:55
#, no-wrap
msgid "    Show version information and compiled in features.\n"
msgstr ""

#. type: Plain text
#: docs/manual/utils/gammu-detect.rst:57
msgid ".. option:: -u, --no-udev"
msgstr ""

#. type: Plain text
#: docs/manual/utils/gammu-detect.rst:59
#, no-wrap
msgid "    Disables scanning of udev.\n"
msgstr ""

#. type: Plain text
#: docs/manual/utils/gammu-detect.rst:61
msgid ".. option:: -b, --no-bluez"
msgstr ""

#. type: Plain text
#: docs/manual/utils/gammu-detect.rst:63
#, no-wrap
msgid "    Disables scanning using Bluez.\n"
msgstr ""

#. type: Plain text
#: docs/manual/utils/gammu-detect.rst:65
msgid ".. option:: -w, --no-win32-serial"
msgstr ""

#. type: Plain text
#: docs/manual/utils/gammu-detect.rst:67
#, no-wrap
msgid "    Disables scanning of Windows serial ports.\n"
msgstr ""

#. type: Plain text
#: docs/manual/utils/gammu-detect.rst:69
#, no-wrap
msgid ""
"Output\n"
"------\n"
msgstr ""

#. type: Plain text
#: docs/manual/utils/gammu-detect.rst:74
msgid ""
"The output of :ref:`gammu-detect` is configuration file for Gammu (see "
":ref:`gammurc`) with configuration section for every device which might be "
"used with :ref:`gammu`."
msgstr ""

#. type: Plain text
#: docs/manual/utils/gammu-detect.rst:78
#, no-wrap
msgid "    You can choose which section to use by :option:`gammu -s`.\n"
msgstr ""

#. type: Plain text
#: docs/manual/utils/gammu-detect.rst:81
msgid ""
"When invoked as :option:`gammu-detect -d`, also all examined devices are "
"listed as comments in the output."
msgstr ""

#. type: Plain text
#: docs/manual/utils/gammu-detect.rst:89
#, no-wrap
msgid ""
"    ; Configuration file generated by gammu-detect.\n"
"    ; Please check The Gammu Manual for more information.\n"
msgstr ""

#. type: Plain text
#: docs/manual/utils/gammu-detect.rst:94
#, no-wrap
msgid ""
"    [gammu]\n"
"    device = /dev/ttyACM0\n"
"    name = Nokia E52\n"
"    connection = at\n"
msgstr ""

#. type: Plain text
#: docs/manual/utils/gammu-detect.rst:99
#, no-wrap
msgid ""
"    [gammu1]\n"
"    device = /dev/ttyACM1\n"
"    name = Nokia E52\n"
"    connection = at\n"
msgstr ""

#. type: Plain text
#: docs/manual/utils/gammu-detect.rst:104
#, no-wrap
msgid ""
"    [gammu2]\n"
"    device = /dev/ttyS0\n"
"    name = Phone on serial port 0\n"
"    connection = at\n"
msgstr ""

#. type: Plain text
#: docs/manual/utils/gammu-detect.rst:109
#, no-wrap
msgid ""
"    [gammu3]\n"
"    device = /dev/ttyS1\n"
"    name = Phone on serial port 1\n"
"    connection = at\n"
msgstr ""

#. type: Plain text
#: docs/manual/utils/gammu-detect.rst:114
#, no-wrap
msgid ""
"    [gammu4]\n"
"    device = /dev/ttyS2\n"
"    name = Phone on serial port 2\n"
"    connection = at\n"
msgstr ""

#. type: Plain text
#: docs/manual/utils/gammu-detect.rst:119
#, no-wrap
msgid ""
"    [gammu5]\n"
"    device = /dev/ttyS3\n"
"    name = Phone on serial port 3\n"
"    connection = at\n"
msgstr ""

#. type: Plain text
#: docs/manual/utils/gammu-detect.rst:124
#, no-wrap
msgid ""
"    [gammu6]\n"
"    device = 5C:57:C8:BB:BB:BB\n"
"    name = Nokia E52\n"
"    connection = bluephonet\n"
msgstr ""
